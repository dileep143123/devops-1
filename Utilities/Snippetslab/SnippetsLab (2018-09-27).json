{
  "Library Name" : "main.snippetslablibrary",
  "Date Exported" : "2018-09-27 19:03:23 -0600",
  "Snippets Count" : "21",
  "Snippets" : [
    {
      "Date Created" : "2018-09-27 15:49:26 -0600",
      "Date Modified" : "2018-09-27 17:11:12 -0600",
      "Folder" : "bash",
      "Title" : "install-brew",
      "Fragments" : [
        {
          "Content" : "\/usr\/bin\/ruby -e \"$(curl -fsSL https:\/\/raw.githubusercontent.com\/Homebrew\/install\/master\/install)\"",
          "Date Modified" : "2018-09-27 18:38:09 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Bash",
          "Date Created" : "2018-09-27 15:49:26 -0600"
        }
      ],
      "Tags" : [
        "brew",
        "mac",
        "install",
        "local"
      ]
    },
    {
      "Date Created" : "2018-09-27 15:57:23 -0600",
      "Date Modified" : "2018-09-27 18:48:01 -0600",
      "Folder" : "keyboard",
      "Title" : "mac",
      "Fragments" : [
        {
          "Content" : "# Organization\n\n* Developer= ctrl\n* Desktop= cmd\n* Internet= opt\n\n\n## Internet (opt)\n* search google= s\n* look up dictionary= d\n* spotlight= l\n* reading list= r\n* open url= u\n\n## Desktop (cmd)\n\n* show finder= space\n* show help= h\n* show dasboard= b\n* show desktop= t\n* hide dock= d\n* show launchpad= l\n* mission control= up\n* show windows= down\n* show notifications= n\n* move left= left\n* move rith= right\n* capture full screen= f\n* capture selection= s\n\n\n\n## Developer (ctrl)\n* new terminal= t\n* add to snippetslab= s\n* new email to= e\n* new service= c\n* new workflow= w\n* new applescript= n\n* run applescript= r\n* folder actions=\n \n\n\n",
          "Date Modified" : "2018-09-27 16:36:16 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 15:57:23 -0600"
        }
      ],
      "Tags" : [
        "mac",
        "shortcuts",
        "keyboard"
      ]
    },
    {
      "Date Created" : "2018-09-27 17:03:10 -0600",
      "Date Modified" : "2018-09-27 17:11:15 -0600",
      "Folder" : "bash",
      "Title" : "install golang",
      "Fragments" : [
        {
          "Content" : "curl https:\/\/dl.google.com\/go\/go1.11.darwin-amd64.pkg",
          "Date Modified" : "2018-09-27 17:03:17 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 17:03:10 -0600"
        }
      ],
      "Tags" : [
        "golang",
        "mac",
        "install",
        "local"
      ]
    },
    {
      "Date Created" : "2018-09-27 17:03:42 -0600",
      "Date Modified" : "2018-09-27 17:14:35 -0600",
      "Folder" : "bash",
      "Title" : "install virtualbox",
      "Fragments" : [
        {
          "Content" : "https:\/\/www.virtualbox.org\/wiki\/Downloads",
          "Date Modified" : "2018-09-27 17:14:29 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 17:03:42 -0600"
        }
      ],
      "Tags" : [
        "mac",
        "install",
        "website"
      ]
    },
    {
      "Date Created" : "2018-09-27 17:04:56 -0600",
      "Date Modified" : "2018-09-27 17:08:54 -0600",
      "Folder" : "bash",
      "Title" : "install kubernetes",
      "Fragments" : [
        {
          "Content" : "brew install kubernetes-cli\n",
          "Date Modified" : "2018-09-27 17:06:30 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 17:04:56 -0600"
        }
      ],
      "Tags" : [
        "mac",
        "kubernetes",
        "install"
      ]
    },
    {
      "Date Created" : "2018-09-27 17:07:53 -0600",
      "Date Modified" : "2018-09-27 17:09:02 -0600",
      "Folder" : "bash",
      "Title" : "install minikube",
      "Fragments" : [
        {
          "Content" : "curl -Lo minikube https:\/\/storage.googleapis.com\/minikube\/releases\/v0.29.0\/minikube-darwin-amd64 && chmod +x minikube && sudo cp minikube \/usr\/local\/bin\/ && rm minikube\n",
          "Date Modified" : "2018-09-27 17:07:58 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 17:07:53 -0600"
        }
      ],
      "Tags" : [
        "mac",
        "kubernetes",
        "install"
      ]
    },
    {
      "Date Created" : "2018-09-27 17:10:14 -0600",
      "Date Modified" : "2018-09-27 17:11:04 -0600",
      "Folder" : "bash",
      "Title" : "start local cluster",
      "Fragments" : [
        {
          "Content" : "minikube start",
          "Date Modified" : "2018-09-27 17:10:24 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 17:10:14 -0600"
        }
      ],
      "Tags" : [
        "kubernetes",
        "minikube",
        "local"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:00:02 -0600",
      "Date Modified" : "2018-09-27 18:11:39 -0600",
      "Folder" : "markdown",
      "Title" : "pressly\/sup",
      "Fragments" : [
        {
          "Content" : "Stack Up\n========\n\nStack Up is a simple deployment tool that performs given set of commands on multiple hosts in parallel. It reads Supfile, a YAML configuration file, which defines networks (groups of hosts), commands and targets.\n\n# Demo\n\n[![Sup](https:\/\/github.com\/pressly\/sup\/blob\/gif\/asciinema.gif?raw=true)](https:\/\/asciinema.org\/a\/19742?autoplay=1)\n\n*Note: Demo is based on [this example Supfile](.\/example\/Supfile).*\n\n# Installation\n\n    $ go get -u github.com\/pressly\/sup\/cmd\/sup\n\n# Usage\n\n    $ sup [OPTIONS] NETWORK COMMAND [...]\n\n### Options\n\n| Option            | Description                      |\n|-------------------|----------------------------------|\n| `-f Supfile`      | Custom path to Supfile           |\n| `-e`, `--env=[]`  | Set environment variables        |\n| `--only REGEXP`   | Filter hosts matching regexp     |\n| `--except REGEXP` | Filter out hosts matching regexp |\n| `--debug`, `-D`   | Enable debug\/verbose mode        |\n| `--disable-prefix`| Disable hostname prefix          |\n| `--help`, `-h`    | Show help\/usage                  |\n| `--version`, `-v` | Print version                    |\n\n## Network\n\nA group of hosts.\n\n```yaml\n# Supfile\n\nnetworks:\n    production:\n        hosts:\n            - api1.example.com\n            - api2.example.com\n            - api3.example.com\n    staging:\n        # fetch dynamic list of hosts\n        inventory: curl http:\/\/example.com\/latest\/meta-data\/hostname\n```\n\n`$ sup production COMMAND` will run COMMAND on `api1`, `api2` and `api3` hosts in parallel.\n\n## Command\n\nA shell command(s) to be run remotely.\n\n```yaml\n# Supfile\n\ncommands:\n    restart:\n        desc: Restart example Docker container\n        run: sudo docker restart example\n    tail-logs:\n        desc: Watch tail of Docker logs from all hosts\n        run: sudo docker logs --tail=20 -f example\n```\n\n`$ sup staging restart` will restart all staging Docker containers in parallel.\n\n`$ sup production tail-logs` will tail Docker logs from all production containers in parallel.\n\n### Serial command (a.k.a. Rolling Update)\n\n`serial: N` constraints a command to be run on `N` hosts at a time at maximum. Rolling Update for free!\n\n```yaml\n# Supfile\n\ncommands:\n    restart:\n        desc: Restart example Docker container\n        run: sudo docker restart example\n        serial: 2\n```\n\n`$ sup production restart` will restart all Docker containers, two at a time at maximum.\n\n### Once command (one host only)\n\n`once: true` constraints a command to be run only on one host. Useful for one-time tasks.\n\n```yaml\n# Supfile\n\ncommands:\n    build:\n        desc: Build Docker image and push to registry\n        run: sudo docker build -t image:latest . && sudo docker push image:latest\n        once: true # one host only\n    pull:\n        desc: Pull latest Docker image from registry\n        run: sudo docker pull image:latest\n```\n\n`$ sup production build pull` will build Docker image on one production host only and spread it to all hosts.\n\n### Local command\n\nRuns command always on localhost.\n\n```yaml\n# Supfile\n\ncommands:\n    prepare:\n        desc: Prepare to upload\n        local: npm run build\n```\n\n### Upload command\n\nUploads files\/directories to all remote hosts. Uses `tar` under the hood.\n\n```yaml\n# Supfile\n\ncommands:\n    upload:\n        desc: Upload dist files to all hosts\n        upload:\n          - src: .\/dist\n            dst: \/tmp\/\n```\n\n### Interactive Bash on all hosts\n\nDo you want to interact with multiple hosts at once? Sure!\n\n```yaml\n# Supfile\n\ncommands:\n    bash:\n        desc: Interactive Bash on all hosts\n        stdin: true\n        run: bash\n```\n\n```bash\n$ sup production bash\n#\n# type in commands and see output from all hosts!\n# ^C\n```\n\nPassing prepared commands to all hosts:\n```bash\n$ echo 'sudo apt-get update -y' | sup production bash\n\n# or:\n$ sup production bash <<< 'sudo apt-get update -y'\n\n# or:\n$ cat <<EOF | sup production bash\nsudo apt-get update -y\ndate\nuname -a\nEOF\n```\n\n### Interactive Docker Exec on all hosts\n\n```yaml\n# Supfile\n\ncommands:\n    exec:\n        desc: Exec into Docker container on all hosts\n        stdin: true\n        run: sudo docker exec -i $CONTAINER bash\n```\n\n```bash\n$ sup production exec\nps aux\nstrace -p 1 # trace system calls and signals on all your production hosts\n```\n\n## Target\n\nTarget is an alias for multiple commands. Each command will be run on all hosts in parallel,\n`sup` will check return status from all hosts, and run subsequent commands on success only\n(thus any error on any host will interrupt the process).\n\n```yaml\n# Supfile\n\ntargets:\n    deploy:\n        - build\n        - pull\n        - migrate-db-up\n        - stop-rm-run\n        - health\n        - slack-notify\n        - airbrake-notify\n```\n\n`$ sup production deploy`\n\nis equivalent to\n\n`$ sup production build pull migrate-db-up stop-rm-run health slack-notify airbrake-notify`\n\n# Supfile\n\nSee [example Supfile](.\/example\/Supfile).\n\n### Basic structure\n\n```yaml\n# Supfile\n---\nversion: 0.4\n\n# Global environment variables\nenv:\n  NAME: api\n  IMAGE: example\/api\n\nnetworks:\n  local:\n    hosts:\n      - localhost\n  staging:\n    hosts:\n      - stg1.example.com\n  production:\n    hosts:\n      - api1.example.com\n      - api2.example.com\n\ncommands:\n  echo:\n    desc: Print some env vars\n    run: echo $NAME $IMAGE $SUP_NETWORK\n  date:\n    desc: Print OS name and current date\/time\n    run: uname -a; date\n\ntargets:\n  all:\n    - echo\n    - date\n```\n\n### Default environment variables available in Supfile\n\n- `$SUP_HOST` - Current host.\n- `$SUP_NETWORK` - Current network.\n- `$SUP_USER` - User who invoked sup command.\n- `$SUP_TIME` - Date\/time of sup command invocation.\n- `$SUP_ENV` - Environment variables provided on sup command invocation. You can pass `$SUP_ENV` to another `sup` or `docker` commands in your Supfile.\n\n# Running sup from Supfile\n\nSupfile doesn't let you import another Supfile. Instead, it lets you run `sup` sub-process from inside your Supfile. This is how you can structure larger projects:\n\n```\n.\/Supfile\n.\/database\/Supfile\n.\/services\/scheduler\/Supfile\n```\n\nTop-level Supfile calls `sup` with Supfiles from sub-projects:\n```yaml\n restart-scheduler:\n    desc: Restart scheduler\n    local: >\n      sup -f .\/services\/scheduler\/Supfile $SUP_ENV $SUP_NETWORK restart\n db-up:\n    desc: Migrate database\n    local: >\n      sup -f .\/database\/Supfile $SUP_ENV $SUP_NETWORK up\n```\n\n# Common SSH Problem\n\nif for some reason sup doesn't connect and you get the following error,\n\n```bash\nconnecting to clients failed: connecting to remote host failed: Connect(\"myserver@xxx.xxx.xxx.xxx\"): ssh: handshake failed: ssh: unable to authenticate, attempted methods [none publickey], no supported methods remain\n```\n\nit means that your `ssh-agent` dosen't have access to your public and private keys. in order to fix this issue, follow the below instructions:\n\n- run the following command and make sure you have a key register with `ssh-agent`\n\n```bash\nssh-add -l\n```\n\nif you see something like `The agent has no identities.` it means that you need to manually add your key to `ssh-agent`.\nin order to do that, run the following command\n\n```bash\nssh-add ~\/.ssh\/id_rsa\n```\n\nyou should now be able to use sup with your ssh key.\n\n\n# Development\n\n    fork it, hack it..\n\n    $ make build\n\n    create new Pull Request\n\nWe'll be happy to review & accept new Pull Requests!",
          "Date Modified" : "2018-09-27 18:00:16 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:00:02 -0600"
        }
      ],
      "Tags" : [
        "docs",
        "golang",
        "sup",
        "automation"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:01:02 -0600",
      "Date Modified" : "2018-09-27 18:11:26 -0600",
      "Folder" : "markdown",
      "Title" : "cobra",
      "Fragments" : [
        {
          "Content" : "![cobra logo](https:\/\/cloud.githubusercontent.com\/assets\/173412\/10886352\/ad566232-814f-11e5-9cd0-aa101788c117.png)\n\nCobra is both a library for creating powerful modern CLI applications as well as a program to generate applications and command files.\n\nMany of the most widely used Go projects are built using Cobra including:\n\n* [Kubernetes](http:\/\/kubernetes.io\/)\n* [Hugo](http:\/\/gohugo.io)\n* [rkt](https:\/\/github.com\/coreos\/rkt)\n* [etcd](https:\/\/github.com\/coreos\/etcd)\n* [Moby (former Docker)](https:\/\/github.com\/moby\/moby)\n* [Docker (distribution)](https:\/\/github.com\/docker\/distribution)\n* [OpenShift](https:\/\/www.openshift.com\/)\n* [Delve](https:\/\/github.com\/derekparker\/delve)\n* [GopherJS](http:\/\/www.gopherjs.org\/)\n* [CockroachDB](http:\/\/www.cockroachlabs.com\/)\n* [Bleve](http:\/\/www.blevesearch.com\/)\n* [ProjectAtomic (enterprise)](http:\/\/www.projectatomic.io\/)\n* [Giant Swarm's gsctl](https:\/\/github.com\/giantswarm\/gsctl)\n* [Nanobox](https:\/\/github.com\/nanobox-io\/nanobox)\/[Nanopack](https:\/\/github.com\/nanopack)\n* [rclone](http:\/\/rclone.org\/)\n* [nehm](https:\/\/github.com\/bogem\/nehm)\n* [Pouch](https:\/\/github.com\/alibaba\/pouch)\n\n[![Build Status](https:\/\/travis-ci.org\/spf13\/cobra.svg \"Travis CI status\")](https:\/\/travis-ci.org\/spf13\/cobra)\n[![CircleCI status](https:\/\/circleci.com\/gh\/spf13\/cobra.png?circle-token=:circle-token \"CircleCI status\")](https:\/\/circleci.com\/gh\/spf13\/cobra)\n[![GoDoc](https:\/\/godoc.org\/github.com\/spf13\/cobra?status.svg)](https:\/\/godoc.org\/github.com\/spf13\/cobra)\n\n# Table of Contents\n\n- [Overview](#overview)\n- [Concepts](#concepts)\n  * [Commands](#commands)\n  * [Flags](#flags)\n- [Installing](#installing)\n- [Getting Started](#getting-started)\n  * [Using the Cobra Generator](#using-the-cobra-generator)\n  * [Using the Cobra Library](#using-the-cobra-library)\n  * [Working with Flags](#working-with-flags)\n  * [Positional and Custom Arguments](#positional-and-custom-arguments)\n  * [Example](#example)\n  * [Help Command](#help-command)\n  * [Usage Message](#usage-message)\n  * [PreRun and PostRun Hooks](#prerun-and-postrun-hooks)\n  * [Suggestions when \"unknown command\" happens](#suggestions-when-unknown-command-happens)\n  * [Generating documentation for your command](#generating-documentation-for-your-command)\n  * [Generating bash completions](#generating-bash-completions)\n- [Contributing](#contributing)\n- [License](#license)\n\n# Overview\n\nCobra is a library providing a simple interface to create powerful modern CLI\ninterfaces similar to git & go tools.\n\nCobra is also an application that will generate your application scaffolding to rapidly\ndevelop a Cobra-based application.\n\nCobra provides:\n* Easy subcommand-based CLIs: `app server`, `app fetch`, etc.\n* Fully POSIX-compliant flags (including short & long versions)\n* Nested subcommands\n* Global, local and cascading flags\n* Easy generation of applications & commands with `cobra init appname` & `cobra add cmdname`\n* Intelligent suggestions (`app srver`... did you mean `app server`?)\n* Automatic help generation for commands and flags\n* Automatic help flag recognition of `-h`, `--help`, etc.\n* Automatically generated bash autocomplete for your application\n* Automatically generated man pages for your application\n* Command aliases so you can change things without breaking them\n* The flexibility to define your own help, usage, etc.\n* Optional tight integration with [viper](http:\/\/github.com\/spf13\/viper) for 12-factor apps\n\n# Concepts\n\nCobra is built on a structure of commands, arguments & flags.\n\n**Commands** represent actions, **Args** are things and **Flags** are modifiers for those actions.\n\nThe best applications will read like sentences when used. Users will know how\nto use the application because they will natively understand how to use it.\n\nThe pattern to follow is\n`APPNAME VERB NOUN --ADJECTIVE.`\n    or\n`APPNAME COMMAND ARG --FLAG`\n\nA few good real world examples may better illustrate this point.\n\nIn the following example, 'server' is a command, and 'port' is a flag:\n\n    hugo server --port=1313\n\nIn this command we are telling Git to clone the url bare.\n\n    git clone URL --bare\n\n## Commands\n\nCommand is the central point of the application. Each interaction that\nthe application supports will be contained in a Command. A command can\nhave children commands and optionally run an action.\n\nIn the example above, 'server' is the command.\n\n[More about cobra.Command](https:\/\/godoc.org\/github.com\/spf13\/cobra#Command)\n\n## Flags\n\nA flag is a way to modify the behavior of a command. Cobra supports\nfully POSIX-compliant flags as well as the Go [flag package](https:\/\/golang.org\/pkg\/flag\/).\nA Cobra command can define flags that persist through to children commands\nand flags that are only available to that command.\n\nIn the example above, 'port' is the flag.\n\nFlag functionality is provided by the [pflag\nlibrary](https:\/\/github.com\/spf13\/pflag), a fork of the flag standard library\nwhich maintains the same interface while adding POSIX compliance.\n\n# Installing\nUsing Cobra is easy. First, use `go get` to install the latest version\nof the library. This command will install the `cobra` generator executable\nalong with the library and its dependencies:\n\n    go get -u github.com\/spf13\/cobra\/cobra\n\nNext, include Cobra in your application:\n\n```go\nimport \"github.com\/spf13\/cobra\"\n```\n\n# Getting Started\n\nWhile you are welcome to provide your own organization, typically a Cobra-based\napplication will follow the following organizational structure:\n\n```\n  ▾ appName\/\n    ▾ cmd\/\n        add.go\n        your.go\n        commands.go\n        here.go\n      main.go\n```\n\nIn a Cobra app, typically the main.go file is very bare. It serves one purpose: initializing Cobra.\n\n```go\npackage main\n\nimport (\n  \"{pathToYourApp}\/cmd\"\n)\n\nfunc main() {\n  cmd.Execute()\n}\n```\n\n## Using the Cobra Generator\n\nCobra provides its own program that will create your application and add any\ncommands you want. It's the easiest way to incorporate Cobra into your application.\n\n[Here](https:\/\/github.com\/spf13\/cobra\/blob\/master\/cobra\/README.md) you can find more information about it.\n\n## Using the Cobra Library\n\nTo manually implement Cobra you need to create a bare main.go file and a rootCmd file.\nYou will optionally provide additional commands as you see fit.\n\n### Create rootCmd\n\nCobra doesn't require any special constructors. Simply create your commands.\n\nIdeally you place this in app\/cmd\/root.go:\n\n```go\nvar rootCmd = &cobra.Command{\n  Use:   \"hugo\",\n  Short: \"Hugo is a very fast static site generator\",\n  Long: `A Fast and Flexible Static Site Generator built with\n                love by spf13 and friends in Go.\n                Complete documentation is available at http:\/\/hugo.spf13.com`,\n  Run: func(cmd *cobra.Command, args []string) {\n    \/\/ Do Stuff Here\n  },\n}\n\nfunc Execute() {\n  if err := rootCmd.Execute(); err != nil {\n    fmt.Println(err)\n    os.Exit(1)\n  }\n}\n```\n\nYou will additionally define flags and handle configuration in your init() function.\n\nFor example cmd\/root.go:\n\n```go\nimport (\n  \"fmt\"\n  \"os\"\n\n  homedir \"github.com\/mitchellh\/go-homedir\"\n  \"github.com\/spf13\/cobra\"\n  \"github.com\/spf13\/viper\"\n)\n\nfunc init() {\n  cobra.OnInitialize(initConfig)\n  rootCmd.PersistentFlags().StringVar(&cfgFile, \"config\", \"\", \"config file (default is $HOME\/.cobra.yaml)\")\n  rootCmd.PersistentFlags().StringVarP(&projectBase, \"projectbase\", \"b\", \"\", \"base project directory eg. github.com\/spf13\/\")\n  rootCmd.PersistentFlags().StringP(\"author\", \"a\", \"YOUR NAME\", \"Author name for copyright attribution\")\n  rootCmd.PersistentFlags().StringVarP(&userLicense, \"license\", \"l\", \"\", \"Name of license for the project (can provide `licensetext` in config)\")\n  rootCmd.PersistentFlags().Bool(\"viper\", true, \"Use Viper for configuration\")\n  viper.BindPFlag(\"author\", rootCmd.PersistentFlags().Lookup(\"author\"))\n  viper.BindPFlag(\"projectbase\", rootCmd.PersistentFlags().Lookup(\"projectbase\"))\n  viper.BindPFlag(\"useViper\", rootCmd.PersistentFlags().Lookup(\"viper\"))\n  viper.SetDefault(\"author\", \"NAME HERE <EMAIL ADDRESS>\")\n  viper.SetDefault(\"license\", \"apache\")\n}\n\nfunc initConfig() {\n  \/\/ Don't forget to read config either from cfgFile or from home directory!\n  if cfgFile != \"\" {\n    \/\/ Use config file from the flag.\n    viper.SetConfigFile(cfgFile)\n  } else {\n    \/\/ Find home directory.\n    home, err := homedir.Dir()\n    if err != nil {\n      fmt.Println(err)\n      os.Exit(1)\n    }\n\n    \/\/ Search config in home directory with name \".cobra\" (without extension).\n    viper.AddConfigPath(home)\n    viper.SetConfigName(\".cobra\")\n  }\n\n  if err := viper.ReadInConfig(); err != nil {\n    fmt.Println(\"Can't read config:\", err)\n    os.Exit(1)\n  }\n}\n```\n\n### Create your main.go\n\nWith the root command you need to have your main function execute it.\nExecute should be run on the root for clarity, though it can be called on any command.\n\nIn a Cobra app, typically the main.go file is very bare. It serves, one purpose, to initialize Cobra.\n\n```go\npackage main\n\nimport (\n  \"fmt\"\n  \"os\"\n\n  \"{pathToYourApp}\/cmd\"\n)\n\nfunc main() {\n  cmd.Execute()\n}\n```\n\n### Create additional commands\n\nAdditional commands can be defined and typically are each given their own file\ninside of the cmd\/ directory.\n\nIf you wanted to create a version command you would create cmd\/version.go and\npopulate it with the following:\n\n```go\npackage cmd\n\nimport (\n  \"fmt\"\n\n  \"github.com\/spf13\/cobra\"\n)\n\nfunc init() {\n  rootCmd.AddCommand(versionCmd)\n}\n\nvar versionCmd = &cobra.Command{\n  Use:   \"version\",\n  Short: \"Print the version number of Hugo\",\n  Long:  `All software has versions. This is Hugo's`,\n  Run: func(cmd *cobra.Command, args []string) {\n    fmt.Println(\"Hugo Static Site Generator v0.9 -- HEAD\")\n  },\n}\n```\n\n## Working with Flags\n\nFlags provide modifiers to control how the action command operates.\n\n### Assign flags to a command\n\nSince the flags are defined and used in different locations, we need to\ndefine a variable outside with the correct scope to assign the flag to\nwork with.\n\n```go\nvar Verbose bool\nvar Source string\n```\n\nThere are two different approaches to assign a flag.\n\n### Persistent Flags\n\nA flag can be 'persistent' meaning that this flag will be available to the\ncommand it's assigned to as well as every command under that command. For\nglobal flags, assign a flag as a persistent flag on the root.\n\n```go\nrootCmd.PersistentFlags().BoolVarP(&Verbose, \"verbose\", \"v\", false, \"verbose output\")\n```\n\n### Local Flags\n\nA flag can also be assigned locally which will only apply to that specific command.\n\n```go\nrootCmd.Flags().StringVarP(&Source, \"source\", \"s\", \"\", \"Source directory to read from\")\n```\n\n### Local Flag on Parent Commands\n\nBy default Cobra only parses local flags on the target command, any local flags on\nparent commands are ignored. By enabling `Command.TraverseChildren` Cobra will\nparse local flags on each command before executing the target command.\n\n```go\ncommand := cobra.Command{\n  Use: \"print [OPTIONS] [COMMANDS]\",\n  TraverseChildren: true,\n}\n```\n\n### Bind Flags with Config\n\nYou can also bind your flags with [viper](https:\/\/github.com\/spf13\/viper):\n```go\nvar author string\n\nfunc init() {\n  rootCmd.PersistentFlags().StringVar(&author, \"author\", \"YOUR NAME\", \"Author name for copyright attribution\")\n  viper.BindPFlag(\"author\", rootCmd.PersistentFlags().Lookup(\"author\"))\n}\n```\n\nIn this example the persistent flag `author` is bound with `viper`.\n**Note**, that the variable `author` will not be set to the value from config,\nwhen the `--author` flag is not provided by user.\n\nMore in [viper documentation](https:\/\/github.com\/spf13\/viper#working-with-flags).\n\n### Required flags\n\nFlags are optional by default. If instead you wish your command to report an error\nwhen a flag has not been set, mark it as required:\n```go\nrootCmd.Flags().StringVarP(&Region, \"region\", \"r\", \"\", \"AWS region (required)\")\nrootCmd.MarkFlagRequired(\"region\")\n```\n\n## Positional and Custom Arguments\n\nValidation of positional arguments can be specified using the `Args` field\nof `Command`.\n\nThe following validators are built in:\n\n- `NoArgs` - the command will report an error if there are any positional args.\n- `ArbitraryArgs` - the command will accept any args.\n- `OnlyValidArgs` - the command will report an error if there are any positional args that are not in the `ValidArgs` field of `Command`.\n- `MinimumNArgs(int)` - the command will report an error if there are not at least N positional args.\n- `MaximumNArgs(int)` - the command will report an error if there are more than N positional args.\n- `ExactArgs(int)` - the command will report an error if there are not exactly N positional args.\n- `RangeArgs(min, max)` - the command will report an error if the number of args is not between the minimum and maximum number of expected args.\n\nAn example of setting the custom validator:\n\n```go\nvar cmd = &cobra.Command{\n  Short: \"hello\",\n  Args: func(cmd *cobra.Command, args []string) error {\n    if len(args) < 1 {\n      return errors.New(\"requires at least one arg\")\n    }\n    if myapp.IsValidColor(args[0]) {\n      return nil\n    }\n    return fmt.Errorf(\"invalid color specified: %s\", args[0])\n  },\n  Run: func(cmd *cobra.Command, args []string) {\n    fmt.Println(\"Hello, World!\")\n  },\n}\n```\n\n## Example\n\nIn the example below, we have defined three commands. Two are at the top level\nand one (cmdTimes) is a child of one of the top commands. In this case the root\nis not executable meaning that a subcommand is required. This is accomplished\nby not providing a 'Run' for the 'rootCmd'.\n\nWe have only defined one flag for a single command.\n\nMore documentation about flags is available at https:\/\/github.com\/spf13\/pflag\n\n```go\npackage main\n\nimport (\n  \"fmt\"\n  \"strings\"\n\n  \"github.com\/spf13\/cobra\"\n)\n\nfunc main() {\n  var echoTimes int\n\n  var cmdPrint = &cobra.Command{\n    Use:   \"print [string to print]\",\n    Short: \"Print anything to the screen\",\n    Long: `print is for printing anything back to the screen.\nFor many years people have printed back to the screen.`,\n    Args: cobra.MinimumNArgs(1),\n    Run: func(cmd *cobra.Command, args []string) {\n      fmt.Println(\"Print: \" + strings.Join(args, \" \"))\n    },\n  }\n\n  var cmdEcho = &cobra.Command{\n    Use:   \"echo [string to echo]\",\n    Short: \"Echo anything to the screen\",\n    Long: `echo is for echoing anything back.\nEcho works a lot like print, except it has a child command.`,\n    Args: cobra.MinimumNArgs(1),\n    Run: func(cmd *cobra.Command, args []string) {\n      fmt.Println(\"Print: \" + strings.Join(args, \" \"))\n    },\n  }\n\n  var cmdTimes = &cobra.Command{\n    Use:   \"times [# times] [string to echo]\",\n    Short: \"Echo anything to the screen more times\",\n    Long: `echo things multiple times back to the user by providing\na count and a string.`,\n    Args: cobra.MinimumNArgs(1),\n    Run: func(cmd *cobra.Command, args []string) {\n      for i := 0; i < echoTimes; i++ {\n        fmt.Println(\"Echo: \" + strings.Join(args, \" \"))\n      }\n    },\n  }\n\n  cmdTimes.Flags().IntVarP(&echoTimes, \"times\", \"t\", 1, \"times to echo the input\")\n\n  var rootCmd = &cobra.Command{Use: \"app\"}\n  rootCmd.AddCommand(cmdPrint, cmdEcho)\n  cmdEcho.AddCommand(cmdTimes)\n  rootCmd.Execute()\n}\n```\n\nFor a more complete example of a larger application, please checkout [Hugo](http:\/\/gohugo.io\/).\n\n## Help Command\n\nCobra automatically adds a help command to your application when you have subcommands.\nThis will be called when a user runs 'app help'. Additionally, help will also\nsupport all other commands as input. Say, for instance, you have a command called\n'create' without any additional configuration; Cobra will work when 'app help\ncreate' is called.  Every command will automatically have the '--help' flag added.\n\n### Example\n\nThe following output is automatically generated by Cobra. Nothing beyond the\ncommand and flag definitions are needed.\n\n    $ cobra help\n\n    Cobra is a CLI library for Go that empowers applications.\n    This application is a tool to generate the needed files\n    to quickly create a Cobra application.\n\n    Usage:\n      cobra [command]\n\n    Available Commands:\n      add         Add a command to a Cobra Application\n      help        Help about any command\n      init        Initialize a Cobra Application\n\n    Flags:\n      -a, --author string    author name for copyright attribution (default \"YOUR NAME\")\n          --config string    config file (default is $HOME\/.cobra.yaml)\n      -h, --help             help for cobra\n      -l, --license string   name of license for the project\n          --viper            use Viper for configuration (default true)\n\n    Use \"cobra [command] --help\" for more information about a command.\n\n\nHelp is just a command like any other. There is no special logic or behavior\naround it. In fact, you can provide your own if you want.\n\n### Defining your own help\n\nYou can provide your own Help command or your own template for the default command to use\nwith following functions:\n\n```go\ncmd.SetHelpCommand(cmd *Command)\ncmd.SetHelpFunc(f func(*Command, []string))\ncmd.SetHelpTemplate(s string)\n```\n\nThe latter two will also apply to any children commands.\n\n## Usage Message\n\nWhen the user provides an invalid flag or invalid command, Cobra responds by\nshowing the user the 'usage'.\n\n### Example\nYou may recognize this from the help above. That's because the default help\nembeds the usage as part of its output.\n\n    $ cobra --invalid\n    Error: unknown flag: --invalid\n    Usage:\n      cobra [command]\n\n    Available Commands:\n      add         Add a command to a Cobra Application\n      help        Help about any command\n      init        Initialize a Cobra Application\n\n    Flags:\n      -a, --author string    author name for copyright attribution (default \"YOUR NAME\")\n          --config string    config file (default is $HOME\/.cobra.yaml)\n      -h, --help             help for cobra\n      -l, --license string   name of license for the project\n          --viper            use Viper for configuration (default true)\n\n    Use \"cobra [command] --help\" for more information about a command.\n\n### Defining your own usage\nYou can provide your own usage function or template for Cobra to use.\nLike help, the function and template are overridable through public methods:\n\n```go\ncmd.SetUsageFunc(f func(*Command) error)\ncmd.SetUsageTemplate(s string)\n```\n\n## Version Flag\n\nCobra adds a top-level '--version' flag if the Version field is set on the root command.\nRunning an application with the '--version' flag will print the version to stdout using\nthe version template. The template can be customized using the\n`cmd.SetVersionTemplate(s string)` function.\n\n## PreRun and PostRun Hooks\n\nIt is possible to run functions before or after the main `Run` function of your command. The `PersistentPreRun` and `PreRun` functions will be executed before `Run`. `PersistentPostRun` and `PostRun` will be executed after `Run`.  The `Persistent*Run` functions will be inherited by children if they do not declare their own.  These functions are run in the following order:\n\n- `PersistentPreRun`\n- `PreRun`\n- `Run`\n- `PostRun`\n- `PersistentPostRun`\n\nAn example of two commands which use all of these features is below.  When the subcommand is executed, it will run the root command's `PersistentPreRun` but not the root command's `PersistentPostRun`:\n\n```go\npackage main\n\nimport (\n  \"fmt\"\n\n  \"github.com\/spf13\/cobra\"\n)\n\nfunc main() {\n\n  var rootCmd = &cobra.Command{\n    Use:   \"root [sub]\",\n    Short: \"My root command\",\n    PersistentPreRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside rootCmd PersistentPreRun with args: %v\\n\", args)\n    },\n    PreRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside rootCmd PreRun with args: %v\\n\", args)\n    },\n    Run: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside rootCmd Run with args: %v\\n\", args)\n    },\n    PostRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside rootCmd PostRun with args: %v\\n\", args)\n    },\n    PersistentPostRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside rootCmd PersistentPostRun with args: %v\\n\", args)\n    },\n  }\n\n  var subCmd = &cobra.Command{\n    Use:   \"sub [no options!]\",\n    Short: \"My subcommand\",\n    PreRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside subCmd PreRun with args: %v\\n\", args)\n    },\n    Run: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside subCmd Run with args: %v\\n\", args)\n    },\n    PostRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside subCmd PostRun with args: %v\\n\", args)\n    },\n    PersistentPostRun: func(cmd *cobra.Command, args []string) {\n      fmt.Printf(\"Inside subCmd PersistentPostRun with args: %v\\n\", args)\n    },\n  }\n\n  rootCmd.AddCommand(subCmd)\n\n  rootCmd.SetArgs([]string{\"\"})\n  rootCmd.Execute()\n  fmt.Println()\n  rootCmd.SetArgs([]string{\"sub\", \"arg1\", \"arg2\"})\n  rootCmd.Execute()\n}\n```\n\nOutput:\n```\nInside rootCmd PersistentPreRun with args: []\nInside rootCmd PreRun with args: []\nInside rootCmd Run with args: []\nInside rootCmd PostRun with args: []\nInside rootCmd PersistentPostRun with args: []\n\nInside rootCmd PersistentPreRun with args: [arg1 arg2]\nInside subCmd PreRun with args: [arg1 arg2]\nInside subCmd Run with args: [arg1 arg2]\nInside subCmd PostRun with args: [arg1 arg2]\nInside subCmd PersistentPostRun with args: [arg1 arg2]\n```\n\n## Suggestions when \"unknown command\" happens\n\nCobra will print automatic suggestions when \"unknown command\" errors happen. This allows Cobra to behave similarly to the `git` command when a typo happens. For example:\n\n```\n$ hugo srever\nError: unknown command \"srever\" for \"hugo\"\n\nDid you mean this?\n        server\n\nRun 'hugo --help' for usage.\n```\n\nSuggestions are automatic based on every subcommand registered and use an implementation of [Levenshtein distance](http:\/\/en.wikipedia.org\/wiki\/Levenshtein_distance). Every registered command that matches a minimum distance of 2 (ignoring case) will be displayed as a suggestion.\n\nIf you need to disable suggestions or tweak the string distance in your command, use:\n\n```go\ncommand.DisableSuggestions = true\n```\n\nor\n\n```go\ncommand.SuggestionsMinimumDistance = 1\n```\n\nYou can also explicitly set names for which a given command will be suggested using the `SuggestFor` attribute. This allows suggestions for strings that are not close in terms of string distance, but makes sense in your set of commands and for some which you don't want aliases. Example:\n\n```\n$ kubectl remove\nError: unknown command \"remove\" for \"kubectl\"\n\nDid you mean this?\n        delete\n\nRun 'kubectl help' for usage.\n```\n\n## Generating documentation for your command\n\nCobra can generate documentation based on subcommands, flags, etc. in the following formats:\n\n- [Markdown](doc\/md_docs.md)\n- [ReStructured Text](doc\/rest_docs.md)\n- [Man Page](doc\/man_docs.md)\n\n## Generating bash completions\n\nCobra can generate a bash-completion file. If you add more information to your command, these completions can be amazingly powerful and flexible.  Read more about it in [Bash Completions](bash_completions.md).\n\n# Contributing\n\n1. Fork it\n2. Download your fork to your PC (`git clone https:\/\/github.com\/your_username\/cobra && cd cobra`)\n3. Create your feature branch (`git checkout -b my-new-feature`)\n4. Make changes and add them (`git add .`)\n5. Commit your changes (`git commit -m 'Add some feature'`)\n6. Push to the branch (`git push origin my-new-feature`)\n7. Create new pull request",
          "Date Modified" : "2018-09-27 18:01:14 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:01:02 -0600"
        }
      ],
      "Tags" : [
        "docs",
        "golang",
        "cli"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:01:50 -0600",
      "Date Modified" : "2018-09-27 18:11:14 -0600",
      "Folder" : "markdown",
      "Title" : "spf13\/viper",
      "Fragments" : [
        {
          "Content" : "![viper logo](https:\/\/cloud.githubusercontent.com\/assets\/173412\/10886745\/998df88a-8151-11e5-9448-4736db51020d.png)\n\nGo configuration with fangs!\n\nMany Go projects are built using Viper including:\n\n* [Hugo](http:\/\/gohugo.io)\n* [EMC RexRay](http:\/\/rexray.readthedocs.org\/en\/stable\/)\n* [Imgur’s Incus](https:\/\/github.com\/Imgur\/incus)\n* [Nanobox](https:\/\/github.com\/nanobox-io\/nanobox)\/[Nanopack](https:\/\/github.com\/nanopack)\n* [Docker Notary](https:\/\/github.com\/docker\/Notary)\n* [BloomApi](https:\/\/www.bloomapi.com\/)\n* [doctl](https:\/\/github.com\/digitalocean\/doctl)\n* [Clairctl](https:\/\/github.com\/jgsqware\/clairctl)\n\n[![Build Status](https:\/\/travis-ci.org\/spf13\/viper.svg)](https:\/\/travis-ci.org\/spf13\/viper) [![Join the chat at https:\/\/gitter.im\/spf13\/viper](https:\/\/badges.gitter.im\/Join%20Chat.svg)](https:\/\/gitter.im\/spf13\/viper?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![GoDoc](https:\/\/godoc.org\/github.com\/spf13\/viper?status.svg)](https:\/\/godoc.org\/github.com\/spf13\/viper)\n\n\n## What is Viper?\n\nViper is a complete configuration solution for Go applications including 12-Factor apps. It is designed\nto work within an application, and can handle all types of configuration needs\nand formats. It supports:\n\n* setting defaults\n* reading from JSON, TOML, YAML, HCL, and Java properties config files\n* live watching and re-reading of config files (optional)\n* reading from environment variables\n* reading from remote config systems (etcd or Consul), and watching changes\n* reading from command line flags\n* reading from buffer\n* setting explicit values\n\nViper can be thought of as a registry for all of your applications\nconfiguration needs.\n\n## Why Viper?\n\nWhen building a modern application, you don’t want to worry about\nconfiguration file formats; you want to focus on building awesome software.\nViper is here to help with that.\n\nViper does the following for you:\n\n1. Find, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, or Java properties formats.\n2. Provide a mechanism to set default values for your different\n   configuration options.\n3. Provide a mechanism to set override values for options specified through\n   command line flags.\n4. Provide an alias system to easily rename parameters without breaking existing\n   code.\n5. Make it easy to tell the difference between when a user has provided a\n   command line or config file which is the same as the default.\n\nViper uses the following precedence order. Each item takes precedence over the\nitem below it:\n\n * explicit call to Set\n * flag\n * env\n * config\n * key\/value store\n * default\n\nViper configuration keys are case insensitive.\n\n## Putting Values into Viper\n\n### Establishing Defaults\n\nA good configuration system will support default values. A default value is not\nrequired for a key, but it’s useful in the event that a key hasn’t been set via\nconfig file, environment variable, remote configuration or flag.\n\nExamples:\n\n```go\nviper.SetDefault(\"ContentDir\", \"content\")\nviper.SetDefault(\"LayoutDir\", \"layouts\")\nviper.SetDefault(\"Taxonomies\", map[string]string{\"tag\": \"tags\", \"category\": \"categories\"})\n```\n\n### Reading Config Files\n\nViper requires minimal configuration so it knows where to look for config files.\nViper supports JSON, TOML, YAML, HCL, and Java Properties files. Viper can search multiple paths, but\ncurrently a single Viper instance only supports a single configuration file.\nViper does not default to any configuration search paths leaving defaults decision\nto an application.\n\nHere is an example of how to use Viper to search for and read a configuration file.\nNone of the specific paths are required, but at least one path should be provided\nwhere a configuration file is expected.\n\n```go\nviper.SetConfigName(\"config\") \/\/ name of config file (without extension)\nviper.AddConfigPath(\"\/etc\/appname\/\")   \/\/ path to look for the config file in\nviper.AddConfigPath(\"$HOME\/.appname\")  \/\/ call multiple times to add many search paths\nviper.AddConfigPath(\".\")               \/\/ optionally look for config in the working directory\nerr := viper.ReadInConfig() \/\/ Find and read the config file\nif err != nil { \/\/ Handle errors reading the config file\n\tpanic(fmt.Errorf(\"Fatal error config file: %s \\n\", err))\n}\n```\n\n### Watching and re-reading config files\n\nViper supports the ability to have your application live read a config file while running.\n\nGone are the days of needing to restart a server to have a config take effect,\nviper powered applications can read an update to a config file while running and\nnot miss a beat.\n\nSimply tell the viper instance to watchConfig.\nOptionally you can provide a function for Viper to run each time a change occurs.\n\n**Make sure you add all of the configPaths prior to calling `WatchConfig()`**\n\n```go\nviper.WatchConfig()\nviper.OnConfigChange(func(e fsnotify.Event) {\n\tfmt.Println(\"Config file changed:\", e.Name)\n})\n```\n\n### Reading Config from io.Reader\n\nViper predefines many configuration sources such as files, environment\nvariables, flags, and remote K\/V store, but you are not bound to them. You can\nalso implement your own required configuration source and feed it to viper.\n\n```go\nviper.SetConfigType(\"yaml\") \/\/ or viper.SetConfigType(\"YAML\")\n\n\/\/ any approach to require this configuration into your program.\nvar yamlExample = []byte(`\nHacker: true\nname: steve\nhobbies:\n- skateboarding\n- snowboarding\n- go\nclothing:\n  jacket: leather\n  trousers: denim\nage: 35\neyes : brown\nbeard: true\n`)\n\nviper.ReadConfig(bytes.NewBuffer(yamlExample))\n\nviper.Get(\"name\") \/\/ this would be \"steve\"\n```\n\n### Setting Overrides\n\nThese could be from a command line flag, or from your own application logic.\n\n```go\nviper.Set(\"Verbose\", true)\nviper.Set(\"LogFile\", LogFile)\n```\n\n### Registering and Using Aliases\n\nAliases permit a single value to be referenced by multiple keys\n\n```go\nviper.RegisterAlias(\"loud\", \"Verbose\")\n\nviper.Set(\"verbose\", true) \/\/ same result as next line\nviper.Set(\"loud\", true)   \/\/ same result as prior line\n\nviper.GetBool(\"loud\") \/\/ true\nviper.GetBool(\"verbose\") \/\/ true\n```\n\n### Working with Environment Variables\n\nViper has full support for environment variables. This enables 12 factor\napplications out of the box. There are four methods that exist to aid working\nwith ENV:\n\n * `AutomaticEnv()`\n * `BindEnv(string...) : error`\n * `SetEnvPrefix(string)`\n * `SetEnvKeyReplacer(string...) *strings.Replacer`\n\n_When working with ENV variables, it’s important to recognize that Viper\ntreats ENV variables as case sensitive._\n\nViper provides a mechanism to try to ensure that ENV variables are unique. By\nusing `SetEnvPrefix`, you can tell Viper to use a prefix while reading from\nthe environment variables. Both `BindEnv` and `AutomaticEnv` will use this\nprefix.\n\n`BindEnv` takes one or two parameters. The first parameter is the key name, the\nsecond is the name of the environment variable. The name of the environment\nvariable is case sensitive. If the ENV variable name is not provided, then\nViper will automatically assume that the key name matches the ENV variable name,\nbut the ENV variable is IN ALL CAPS. When you explicitly provide the ENV\nvariable name, it **does not** automatically add the prefix.\n\nOne important thing to recognize when working with ENV variables is that the\nvalue will be read each time it is accessed. Viper does not fix the value when\nthe `BindEnv` is called.\n\n`AutomaticEnv` is a powerful helper especially when combined with\n`SetEnvPrefix`. When called, Viper will check for an environment variable any\ntime a `viper.Get` request is made. It will apply the following rules. It will\ncheck for a environment variable with a name matching the key uppercased and\nprefixed with the `EnvPrefix` if set.\n\n`SetEnvKeyReplacer` allows you to use a `strings.Replacer` object to rewrite Env\nkeys to an extent. This is useful if you want to use `-` or something in your\n`Get()` calls, but want your environmental variables to use `_` delimiters. An\nexample of using it can be found in `viper_test.go`.\n\n#### Env example\n\n```go\nSetEnvPrefix(\"spf\") \/\/ will be uppercased automatically\nBindEnv(\"id\")\n\nos.Setenv(\"SPF_ID\", \"13\") \/\/ typically done outside of the app\n\nid := Get(\"id\") \/\/ 13\n```\n\n### Working with Flags\n\nViper has the ability to bind to flags. Specifically, Viper supports `Pflags`\nas used in the [Cobra](https:\/\/github.com\/spf13\/cobra) library.\n\nLike `BindEnv`, the value is not set when the binding method is called, but when\nit is accessed. This means you can bind as early as you want, even in an\n`init()` function.\n\nFor individual flags, the `BindPFlag()` method provides this functionality.\n\nExample:\n\n```go\nserverCmd.Flags().Int(\"port\", 1138, \"Port to run Application server on\")\nviper.BindPFlag(\"port\", serverCmd.Flags().Lookup(\"port\"))\n```\n\nYou can also bind an existing set of pflags (pflag.FlagSet):\n\nExample:\n\n```go\npflag.Int(\"flagname\", 1234, \"help message for flagname\")\n\npflag.Parse()\nviper.BindPFlags(pflag.CommandLine)\n\ni := viper.GetInt(\"flagname\") \/\/ retrieve values from viper instead of pflag\n```\n\nThe use of [pflag](https:\/\/github.com\/spf13\/pflag\/) in Viper does not preclude\nthe use of other packages that use the [flag](https:\/\/golang.org\/pkg\/flag\/)\npackage from the standard library. The pflag package can handle the flags\ndefined for the flag package by importing these flags. This is accomplished\nby a calling a convenience function provided by the pflag package called\nAddGoFlagSet().\n\nExample:\n\n```go\npackage main\n\nimport (\n\t\"flag\"\n\t\"github.com\/spf13\/pflag\"\n)\n\nfunc main() {\n\n\t\/\/ using standard library \"flag\" package\n\tflag.Int(\"flagname\", 1234, \"help message for flagname\")\n\n\tpflag.CommandLine.AddGoFlagSet(flag.CommandLine)\n\tpflag.Parse()\n\tviper.BindPFlags(pflag.CommandLine)\n\n\ti := viper.GetInt(\"flagname\") \/\/ retrieve value from viper\n\n\t...\n}\n```\n\n#### Flag interfaces\n\nViper provides two Go interfaces to bind other flag systems if you don’t use `Pflags`.\n\n`FlagValue` represents a single flag. This is a very simple example on how to implement this interface:\n\n```go\ntype myFlag struct {}\nfunc (f myFlag) HasChanged() bool { return false }\nfunc (f myFlag) Name() string { return \"my-flag-name\" }\nfunc (f myFlag) ValueString() string { return \"my-flag-value\" }\nfunc (f myFlag) ValueType() string { return \"string\" }\n```\n\nOnce your flag implements this interface, you can simply tell Viper to bind it:\n\n```go\nviper.BindFlagValue(\"my-flag-name\", myFlag{})\n```\n\n`FlagValueSet` represents a group of flags. This is a very simple example on how to implement this interface:\n\n```go\ntype myFlagSet struct {\n\tflags []myFlag\n}\n\nfunc (f myFlagSet) VisitAll(fn func(FlagValue)) {\n\tfor _, flag := range flags {\n\t\tfn(flag)\n\t}\n}\n```\n\nOnce your flag set implements this interface, you can simply tell Viper to bind it:\n\n```go\nfSet := myFlagSet{\n\tflags: []myFlag{myFlag{}, myFlag{}},\n}\nviper.BindFlagValues(\"my-flags\", fSet)\n```\n\n### Remote Key\/Value Store Support\n\nTo enable remote support in Viper, do a blank import of the `viper\/remote`\npackage:\n\n`import _ \"github.com\/spf13\/viper\/remote\"`\n\nViper will read a config string (as JSON, TOML, YAML or HCL) retrieved from a path\nin a Key\/Value store such as etcd or Consul.  These values take precedence over\ndefault values, but are overridden by configuration values retrieved from disk,\nflags, or environment variables.\n\nViper uses [crypt](https:\/\/github.com\/xordataexchange\/crypt) to retrieve\nconfiguration from the K\/V store, which means that you can store your\nconfiguration values encrypted and have them automatically decrypted if you have\nthe correct gpg keyring.  Encryption is optional.\n\nYou can use remote configuration in conjunction with local configuration, or\nindependently of it.\n\n`crypt` has a command-line helper that you can use to put configurations in your\nK\/V store. `crypt` defaults to etcd on http:\/\/127.0.0.1:4001.\n\n```bash\n$ go get github.com\/xordataexchange\/crypt\/bin\/crypt\n$ crypt set -plaintext \/config\/hugo.json \/Users\/hugo\/settings\/config.json\n```\n\nConfirm that your value was set:\n\n```bash\n$ crypt get -plaintext \/config\/hugo.json\n```\n\nSee the `crypt` documentation for examples of how to set encrypted values, or\nhow to use Consul.\n\n### Remote Key\/Value Store Example - Unencrypted\n\n#### etcd\n```go\nviper.AddRemoteProvider(\"etcd\", \"http:\/\/127.0.0.1:4001\",\"\/config\/hugo.json\")\nviper.SetConfigType(\"json\") \/\/ because there is no file extension in a stream of bytes, supported extensions are \"json\", \"toml\", \"yaml\", \"yml\", \"properties\", \"props\", \"prop\"\nerr := viper.ReadRemoteConfig()\n```\n\n#### Consul\nYou need to set a key to Consul key\/value storage with JSON value containing your desired config.  \nFor example, create a Consul key\/value store key `MY_CONSUL_KEY` with value:\n\n```json\n{\n    \"port\": 8080,\n    \"hostname\": \"myhostname.com\"\n}\n```\n\n```go\nviper.AddRemoteProvider(\"consul\", \"localhost:8500\", \"MY_CONSUL_KEY\")\nviper.SetConfigType(\"json\") \/\/ Need to explicitly set this to json\nerr := viper.ReadRemoteConfig()\n\nfmt.Println(viper.Get(\"port\")) \/\/ 8080\nfmt.Println(viper.Get(\"hostname\")) \/\/ myhostname.com\n```\n\n### Remote Key\/Value Store Example - Encrypted\n\n```go\nviper.AddSecureRemoteProvider(\"etcd\",\"http:\/\/127.0.0.1:4001\",\"\/config\/hugo.json\",\"\/etc\/secrets\/mykeyring.gpg\")\nviper.SetConfigType(\"json\") \/\/ because there is no file extension in a stream of bytes,  supported extensions are \"json\", \"toml\", \"yaml\", \"yml\", \"properties\", \"props\", \"prop\"\nerr := viper.ReadRemoteConfig()\n```\n\n### Watching Changes in etcd - Unencrypted\n\n```go\n\/\/ alternatively, you can create a new viper instance.\nvar runtime_viper = viper.New()\n\nruntime_viper.AddRemoteProvider(\"etcd\", \"http:\/\/127.0.0.1:4001\", \"\/config\/hugo.yml\")\nruntime_viper.SetConfigType(\"yaml\") \/\/ because there is no file extension in a stream of bytes, supported extensions are \"json\", \"toml\", \"yaml\", \"yml\", \"properties\", \"props\", \"prop\"\n\n\/\/ read from remote config the first time.\nerr := runtime_viper.ReadRemoteConfig()\n\n\/\/ unmarshal config\nruntime_viper.Unmarshal(&runtime_conf)\n\n\/\/ open a goroutine to watch remote changes forever\ngo func(){\n\tfor {\n\t    time.Sleep(time.Second * 5) \/\/ delay after each request\n\n\t    \/\/ currently, only tested with etcd support\n\t    err := runtime_viper.WatchRemoteConfig()\n\t    if err != nil {\n\t        log.Errorf(\"unable to read remote config: %v\", err)\n\t        continue\n\t    }\n\n\t    \/\/ unmarshal new config into our runtime config struct. you can also use channel\n\t    \/\/ to implement a signal to notify the system of the changes\n\t    runtime_viper.Unmarshal(&runtime_conf)\n\t}\n}()\n```\n\n## Getting Values From Viper\n\nIn Viper, there are a few ways to get a value depending on the value’s type.\nThe following functions and methods exist:\n\n * `Get(key string) : interface{}`\n * `GetBool(key string) : bool`\n * `GetFloat64(key string) : float64`\n * `GetInt(key string) : int`\n * `GetString(key string) : string`\n * `GetStringMap(key string) : map[string]interface{}`\n * `GetStringMapString(key string) : map[string]string`\n * `GetStringSlice(key string) : []string`\n * `GetTime(key string) : time.Time`\n * `GetDuration(key string) : time.Duration`\n * `IsSet(key string) : bool`\n * `AllSettings() : map[string]interface{}`\n\nOne important thing to recognize is that each Get function will return a zero\nvalue if it’s not found. To check if a given key exists, the `IsSet()` method\nhas been provided.\n\nExample:\n```go\nviper.GetString(\"logfile\") \/\/ case-insensitive Setting & Getting\nif viper.GetBool(\"verbose\") {\n    fmt.Println(\"verbose enabled\")\n}\n```\n### Accessing nested keys\n\nThe accessor methods also accept formatted paths to deeply nested keys. For\nexample, if the following JSON file is loaded:\n\n```json\n{\n    \"host\": {\n        \"address\": \"localhost\",\n        \"port\": 5799\n    },\n    \"datastore\": {\n        \"metric\": {\n            \"host\": \"127.0.0.1\",\n            \"port\": 3099\n        },\n        \"warehouse\": {\n            \"host\": \"198.0.0.1\",\n            \"port\": 2112\n        }\n    }\n}\n\n```\n\nViper can access a nested field by passing a `.` delimited path of keys:\n\n```go\nGetString(\"datastore.metric.host\") \/\/ (returns \"127.0.0.1\")\n```\n\nThis obeys the precedence rules established above; the search for the path\nwill cascade through the remaining configuration registries until found.\n\nFor example, given this configuration file, both `datastore.metric.host` and\n`datastore.metric.port` are already defined (and may be overridden). If in addition\n`datastore.metric.protocol` was defined in the defaults, Viper would also find it.\n\nHowever, if `datastore.metric` was overridden (by a flag, an environment variable,\nthe `Set()` method, …) with an immediate value, then all sub-keys of\n`datastore.metric` become undefined, they are “shadowed” by the higher-priority\nconfiguration level.\n\nLastly, if there exists a key that matches the delimited key path, its value\nwill be returned instead. E.g.\n\n```json\n{\n    \"datastore.metric.host\": \"0.0.0.0\",\n    \"host\": {\n        \"address\": \"localhost\",\n        \"port\": 5799\n    },\n    \"datastore\": {\n        \"metric\": {\n            \"host\": \"127.0.0.1\",\n            \"port\": 3099\n        },\n        \"warehouse\": {\n            \"host\": \"198.0.0.1\",\n            \"port\": 2112\n        }\n    }\n}\n\nGetString(\"datastore.metric.host\") \/\/ returns \"0.0.0.0\"\n```\n\n### Extract sub-tree\n\nExtract sub-tree from Viper.\n\nFor example, `viper` represents:\n\n```json\napp:\n  cache1:\n    max-items: 100\n    item-size: 64\n  cache2:\n    max-items: 200\n    item-size: 80\n```\n\nAfter executing:\n\n```go\nsubv := viper.Sub(\"app.cache1\")\n```\n\n`subv` represents:\n\n```json\nmax-items: 100\nitem-size: 64\n```\n\nSuppose we have:\n\n```go\nfunc NewCache(cfg *Viper) *Cache {...}\n```\n\nwhich creates a cache based on config information formatted as `subv`.\nNow it’s easy to create these 2 caches separately as:\n\n```go\ncfg1 := viper.Sub(\"app.cache1\")\ncache1 := NewCache(cfg1)\n\ncfg2 := viper.Sub(\"app.cache2\")\ncache2 := NewCache(cfg2)\n```\n\n### Unmarshaling\n\nYou also have the option of Unmarshaling all or a specific value to a struct, map,\netc.\n\nThere are two methods to do this:\n\n * `Unmarshal(rawVal interface{}) : error`\n * `UnmarshalKey(key string, rawVal interface{}) : error`\n\nExample:\n\n```go\ntype config struct {\n\tPort int\n\tName string\n\tPathMap string `mapstructure:\"path_map\"`\n}\n\nvar C config\n\nerr := Unmarshal(&C)\nif err != nil {\n\tt.Fatalf(\"unable to decode into struct, %v\", err)\n}\n```\n\n### Marshalling to string\n\nYou may need to marhsal all the settings held in viper into a string rather than write them to a file. \nYou can use your favorite format's marshaller with the config returned by `AllSettings()`.\n\n```go\nimport (\n    yaml \"gopkg.in\/yaml.v2\"\n    \/\/ ...\n) \n\nfunc yamlStringSettings() string {\n    c := viper.AllSettings()\n\tbs, err := yaml.Marshal(c)\n\tif err != nil {\n        t.Fatalf(\"unable to marshal config to YAML: %v\", err)\n    }\n\treturn string(bs)\n}\n```\n\n## Viper or Vipers?\n\nViper comes ready to use out of the box. There is no configuration or\ninitialization needed to begin using Viper. Since most applications will want\nto use a single central repository for their configuration, the viper package\nprovides this. It is similar to a singleton.\n\nIn all of the examples above, they demonstrate using viper in its singleton\nstyle approach.\n\n### Working with multiple vipers\n\nYou can also create many different vipers for use in your application. Each will\nhave its own unique set of configurations and values. Each can read from a\ndifferent config file, key value store, etc. All of the functions that viper\npackage supports are mirrored as methods on a viper.\n\nExample:\n\n```go\nx := viper.New()\ny := viper.New()\n\nx.SetDefault(\"ContentDir\", \"content\")\ny.SetDefault(\"ContentDir\", \"foobar\")\n\n\/\/...\n```\n\nWhen working with multiple vipers, it is up to the user to keep track of the\ndifferent vipers.\n\n## Q & A\n\nQ: Why not INI files?\n\nA: Ini files are pretty awful. There’s no standard format, and they are hard to\nvalidate. Viper is designed to work with JSON, TOML or YAML files. If someone\nreally wants to add this feature, I’d be happy to merge it. It’s easy to specify\nwhich formats your application will permit.\n\nQ: Why is it called “Viper”?\n\nA: Viper is designed to be a [companion](http:\/\/en.wikipedia.org\/wiki\/Viper_(G.I._Joe))\nto [Cobra](https:\/\/github.com\/spf13\/cobra). While both can operate completely\nindependently, together they make a powerful pair to handle much of your\napplication foundation needs.\n\nQ: Why is it called “Cobra”?\n\nA: Is there a better name for a [commander](http:\/\/en.wikipedia.org\/wiki\/Cobra_Commander)?",
          "Date Modified" : "2018-09-27 18:02:06 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:01:50 -0600"
        }
      ],
      "Tags" : [
        "docs",
        "golang",
        "config"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:02:57 -0600",
      "Date Modified" : "2018-09-27 18:10:54 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-grpc",
      "Fragments" : [
        {
          "Content" : "# Awesome gRPC [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome)\n\n[<img src=\"https:\/\/cdn.rawgit.com\/grpc\/grpc.github.io\/master\/img\/grpc.svg\" align=\"right\">](https:\/\/grpc.io)\n\n> A curated list of useful resources for gRPC\n\n\n## Contents\n\n- [Documentation](#documentation)\n- [Community](#community)\n- [Official Libraries and Tools](#official)\n- [Other](#other)\n  * [Tools](#other-tools)\n  * [Go](#other-go)\n  * [Node.js](#other-nodejs)\n  * [Java](#other-java)\n  * [Ruby](#other-ruby)\n  * [Python](#other-py)\n  * [C#](#other-cs)\n  * [Rust](#other-rust)\n  * [Haskell](#other-hs)\n  * [Erlang](#other-erlang)\n  * [Elixir](#other-elixir)\n  * [Elm](#other-elm)\n  * [TypeScript](#other-ts)\n  * [Scala](#other-scala)\n  * [Dart](#other-dart)\n- [Resources](#resources)\n  * [Tutorials](#res-tuts)\n  * [Videos](#res-videos)\n  * [Slides](#res-slides)\n  * [Examples](#res-examples)\n  * [Miscellaneous](#res-misc)\n- [Protocol Buffers](#proto)\n  * [Documentation](#proto-docs)\n  * [Tools](#proto-tools)\n- [Similar](#similar)\n\n## Documentation\n\n- [Website](https:\/\/grpc.io\/) - Official documentation, libraries, resources, samples and FAQ\n- [Technical documentation](https:\/\/github.com\/grpc\/grpc\/tree\/master\/doc) - Collection of useful technical documentation\n- [gRPC status codes](https:\/\/github.com\/grpc\/grpc\/blob\/master\/doc\/statuscodes.md) - Status codes and their use in gRPC\n- [gRPC status code mapping](https:\/\/github.com\/grpc\/grpc\/blob\/master\/doc\/http-grpc-status-mapping.md) - HTTP to gRPC Status Code Mapping\n- [grpc-errors](https:\/\/github.com\/avinassh\/grpc-errors) - Code examples in each language on how to return and handle error statuses.\n- [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/) - Google Cloud API Design Guide useful for gRPC API design insights\n\n## Community\n\n- [Community links](https:\/\/grpc.io\/community\/) - Mailing list, Gitter, Twitter, Reddit\n\n<a name=\"official\"><\/a>\n## Official Libraries and Tools\n\n- [gRPC Core](https:\/\/github.com\/grpc\/grpc) - C, C++, Ruby, Node.js, Python, PHP, C#, Objective-C\n- [gRPC Java](https:\/\/github.com\/grpc\/grpc-java) - The Java gRPC implementation. HTTP\/2 based RPC\n- [gRPC Node.js](https:\/\/github.com\/grpc\/grpc-node) - gRPC for Node.js\n- [gRPC Go](https:\/\/github.com\/grpc\/grpc-go) - The Go language implementation of gRPC. HTTP\/2 based RPC\n- [gRPC Swift](https:\/\/github.com\/grpc\/grpc-swift) - The Swift language implementation of gRPC\n- [gRPC Dart](https:\/\/github.com\/grpc\/grpc-dart) - The Dart language implementation of gRPC\n- [gRPC Web](https:\/\/github.com\/grpc\/grpc-web) - gRPC for Web Clients\n- [gRPC Ecosystem](https:\/\/github.com\/grpc-ecosystem) - gRPC Ecosystem that complements gRPC\n- [gRPC contrib](https:\/\/github.com\/grpc\/grpc-contrib) - Known useful contributions around github\n- [Homebrew gRPC](https:\/\/github.com\/grpc\/homebrew-grpc) - gRPC formulae repo for Homebrew\n- [grpc_cli](https:\/\/github.com\/grpc\/grpc\/blob\/master\/doc\/command_line_tool.md) - gRPC CLI tool\n\n## Other\n\n<a name=\"other-tools\"><\/a>\n### Tools\n\n- [polyglot](https:\/\/github.com\/grpc-ecosystem\/polyglot) - A gRPC command line client written in Java\n- [letmegrpc](https:\/\/github.com\/gogo\/letmegrpc) - Generate a web form gui from a grpc specification\n- [grpcc](https:\/\/github.com\/njpatel\/grpcc) - Node.js grpc command-line client\n- [gcall](https:\/\/github.com\/bojand\/gcall) - Simple Node.js gRPC command line interface\n- [kafka-pixy](https:\/\/github.com\/mwitkow\/grpc-proxy) - gRPC\/REST proxy for Kafka\n- [ratelimit](https:\/\/github.com\/lyft\/ratelimit) - Go\/gRPC service designed to enable generic rate limit scenarios from different types of applications\n- [omgRPC](https:\/\/github.com\/troylelandshields\/omgrpc) - A GUI client for interacting with gRPC services, similar to what Postman is for REST APIs\n- [ProfaneDB](https:\/\/gitlab.com\/ProfaneDB\/ProfaneDB) - A Protocol Buffers database with gRPC API, built in C++ on top of RocksDB\n- [Evans](https:\/\/github.com\/ktr0731\/evans) - more expressive universal gRPC (CLI) client\n- [grpcurl](https:\/\/github.com\/fullstorydev\/grpcurl) - Like cURL, but for gRPC: Command-line tool for interacting with gRPC servers\n- [danby](https:\/\/github.com\/ericbets\/danby) - A grpc proxy for the browser \n- [docker-protoc](https:\/\/github.com\/namely\/docker-protoc) - Dockerized protoc, grpc-gateway, and grpc_cli commands bundled with Google API libraries\n- [ghz](https:\/\/github.com\/bojand\/ghz) - Simple gRPC benchmarking and load testing tool inspired by hey and grpcurl \n- [grpc-json-proxy](https:\/\/github.com\/jnewmano\/grpc-json-proxy) - A proxy which allows existing tools like Postman or curl to interact with gRPC servers\n- [protoc-gen-gotemplate](https:\/\/github.com\/moul\/protoc-gen-gotemplate) - Generic generator based on golang's template system\n\n<a name=\"other-go\"><\/a>\n### Go\n\n- [go-GRPC Micro](https:\/\/github.com\/micro\/go-grpc) - [Micro](https:\/\/github.com\/micro) based gRPC framework for microservices\n- [go-kit gRPC](https:\/\/github.com\/go-kit\/kit\/tree\/master\/transport\/grpc) - [Go Kit](https:\/\/github.com\/go-kit) with gRPC as transport\n- [gRPC over NATS](https:\/\/github.com\/rapidloop\/nrpc) - nRPC is an RPC framework like gRPC, but for NATS.\n- [grpc-web](https:\/\/github.com\/improbable-eng\/grpc-web) - gRPC Web implementation for Golang and TypeScript\n- [rpcx](https:\/\/github.com\/smallnest\/rpcx) - A RPC service framework based on net\/rpc like alibaba Dubbo and weibo Motan\n- [grpclb](https:\/\/github.com\/bsm\/grpclb) - External Load Balancing Service solution for gRPC written in Go\n- [grpc-proxy](https:\/\/github.com\/mwitkow\/grpc-proxy) - gRPC proxy is a Go reverse proxy that allows for rich routing of gRPC calls with minimum overhead\n- [go-microservice-helpers](https:\/\/github.com\/google\/go-microservice-helpers) - A collection of handy snippets that simplify creation of gRPC servers and clients\n- [lile](https:\/\/github.com\/lileio\/lile) - Easily create gRPC services in Go\n- [proteus](https:\/\/github.com\/src-d\/proteus) - Generate .proto files from Go source code\n- [protoc-gen-cobra](https:\/\/github.com\/fiorix\/protoc-gen-cobra) - command line tool generator for Go gRPC\n- [gRPC over WebSocket](https:\/\/github.com\/glerchundi\/grpc-boomerang) - connect to a gRPC Server behind a firewall by using a pre-established WebSocket connection\n- [yarpc](https:\/\/github.com\/yarpc\/yarpc-go) - A message passing platform for Go, including support for gRPC\n- [promgrpc](https:\/\/github.com\/piotrkowalczuk\/promgrpc) - Prometheus instrumentation for gRPC based services\n- [protoreflect](https:\/\/github.com\/jhump\/protoreflect) - Reflection (Rich Descriptors) for Go Protocol Buffers\n- [grpchan](https:\/\/github.com\/fullstorydev\/grpchan) - Channels for gRPC: custom transports, such as in-process and HTTP 1.1\n- [clay](https:\/\/github.com\/utrack\/clay) - Minimal server platform for gRPС+REST+Swagger APIs\n- [protoc-gen-cobra](https:\/\/github.com\/fiorix\/protoc-gen-cobra) - Cobra command line tool generator for Go gRPC\n\n<a name=\"other-nodejs\"><\/a>\n### Node.js\n- [Mali](https:\/\/github.com\/malijs\/mali) - A minimalistic gRPC microservice framework for Node.js\n- [Condor Framework](https:\/\/github.com\/devsu\/condor-framework) - Framework for building gRPC services in Node JS\n- [grpc-caller](https:\/\/github.com\/bojand\/grpc-caller) - An improved Node.js gRPC client\n- [grpc-create-metadata](https:\/\/github.com\/bojand\/grpc-create-metadata) - Helper utility for creating gRPC `Metadata`\n- [grpc-create-error](https:\/\/github.com\/bojand\/grpc-create-error) - Utility function for creating `Errors` for gRPC responses\n- [grpc-error](https:\/\/github.com\/bojand\/grpc-error) - `GRPCError` class that wraps `create-grpc-error`\n- [grpc-inspect](https:\/\/github.com\/bojand\/grpc-inspect) - gRPC protocol buffer inspection utility\n- [Node.js Proto Files](https:\/\/github.com\/googleapis\/nodejs-proto-files) - All of the Google API's protocol buffer files\n- [grpc-bus](https:\/\/github.com\/paralin\/grpc-bus) - Call gRPC services (even streams!) from the browser over any two-way socket to Node and soon Go\n- [grpc-errors](https:\/\/github.com\/ortoo\/grpc-errors) - A quick and easy way of generating errors for use with grpc\n- [grpc-client-promise](https:\/\/github.com\/lvgithub\/grpc-promise) - Grpc-promise also support Promise API. Which works very well with ES7 async await.\n- [grpc-dynamic-gateway](https:\/\/github.com\/konsumer\/grpc-dynamic-gateway) - Like grpc-gateway, but written in node and dynamic.\n- [node-protoc-plugin](https:\/\/github.com\/konsumer\/node-protoc-plugin) - Create protoc code-generation plugins easily in nodejs.\n- [grpc-promise](https:\/\/github.com\/carlessistare\/grpc-promise) - GRPC promisify module for all Request\/Response types: standard and stream\n\n<a name=\"other-java\"><\/a>\n### Java\n\n- [gax-java](https:\/\/github.com\/googleapis\/gax-java) - Google API Extensions for Java\n- [Armeria](https:\/\/github.com\/line\/armeria) - Asynchronous RPC\/REST library built on top of Java 8, Netty, HTTP\/2, Thrift and gRPC\n- [grpc-spring-boot-starter](https:\/\/github.com\/yidongnan\/grpc-spring-boot-starter) - Spring Boot starter module for gRPC framework\n- [reactive-grpc](https:\/\/github.com\/salesforce\/reactive-grpc) - Integrates reactive programming with grpc-java\n- [grpc-java-contrib](https:\/\/github.com\/salesforce\/grpc-java-contrib) - Useful extensions for the grpc-java library\n- [rejoiner](https:\/\/github.com\/google\/rejoiner) - Generates a GraphQL schema from gRPC microservices\n\n<a name=\"other-ruby\"><\/a>\n### Ruby\n\n- [gruf](https:\/\/github.com\/bigcommerce\/gruf) - gRPC Ruby Framework\n\n<a name=\"other-py\"><\/a>\n### Python\n\n- [grpclib](https:\/\/github.com\/vmagamedov\/grpclib) - Pure-Python gRPC implementation, based on hyper-h2 project\n\n<a name=\"other-cs\"><\/a>\n### C#\n\n- [MagicOnion](https:\/\/github.com\/neuecc\/MagicOnion) - gRPC based HTTP\/2 RPC Streaming Framework for .NET, .NET Core and Unity\n\n<a name=\"other-rust\"><\/a>\n### Rust\n\n- [grpc-rs](https:\/\/github.com\/pingcap\/grpc-rs) - The gRPC library for Rust built on C Core library and futures\n- [grpc-rust](https:\/\/github.com\/stepancheg\/grpc-rust) - Rust implementation of gRPC\n- [tower-grpc](https:\/\/github.com\/tower-rs\/tower-grpc) - A client and server gRPC implementation based on Tower\n\n<a name=\"other-hs\"><\/a>\n### Haskell\n\n- [grpc-haskell](https:\/\/github.com\/grpc\/grpc-haskell) - gRPC library binding for Haskell\n\n<a name=\"other-erlang\"><\/a>\n### Erlang\n\n- [Erlang grpc](https:\/\/github.com\/bluehouse-technology\/grpc) - Erlang library for gRPC\n- [grpcbox](https:\/\/github.com\/tsloughter\/grpcbox) - Erlang grpc client and server\n\n<a name=\"other-elixir\"><\/a>\n### Elixir\n\n- [grpc-elixir](https:\/\/github.com\/tony612\/grpc-elixir) - The Elixir implementation of gRPC\n\n<a name=\"other-elm\"><\/a>\n### Elm\n\n- [elm-protobuf](https:\/\/github.com\/tiziano88\/elm-protobuf) - Protoc plugin generating elm code from proto definitions\n\n<a name=\"other-ts\"><\/a>\n### TypeScript\n\n- [ts-protoc-gen](https:\/\/github.com\/improbable-eng\/ts-protoc-gen) - Protoc Plugin for TypeScript Declarations\n\n<a name=\"other-scala\"><\/a>\n### Scala\n\n- [ScalaPB](https:\/\/scalapb.github.io\/) - Protocol Buffer Compiler for Scala\n\n<a name=\"other-dart\"><\/a>\n### Dart\n\n- [grpc-dart](https:\/\/pub.dartlang.org\/packages\/grpc) - Protocol Buffer Compiler for Dart\n\n## Resources\n\n<a name=\"res-tuts\"><\/a>\n### Tutorials\n\n- [Building a gRPC service with Node.js](https:\/\/codelabs.developers.google.com\/codelabs\/cloud-grpc\/index.html) - Google Clound Platform Codelab\n- [Getting Started with Microservices using Go, gRPC and Kubernetes](https:\/\/outcrawl.com\/getting-started-microservices-go-grpc-kubernetes\/)\n- [gRPC in Production](https:\/\/about.sourcegraph.com\/go\/grpc-in-production-alan-shreve\/)\n- [gRPC Go: Beyond the basics](https:\/\/blog.gopheracademy.com\/advent-2017\/go-grpc-beyond-basics\/) - GopherAcademy article\n- [Building High Performance APIs In Go Using gRPC](http:\/\/www.agiratech.com\/building-high-performance-apis-go-grpc\/) - Small tutorial on building a simple API using gRPC and Go\n- [Bidirectional gRPC streaming for Go](https:\/\/rakyll.org\/grpc-streaming\/)\n- [How We Build gRPC Services At Namely](https:\/\/medium.com\/namely-labs\/how-we-build-grpc-services-at-namely-52a3ae9e7c35) - Blog article from Namely Labs\n- [Our experience designing and building gRPC services](https:\/\/blog.bugsnag.com\/using-grpc-in-production\/) - Blog series from Bugsnag on building a new Releases dashboard backend using gRPC\n- [Writing gRPC Interceptors in Go](https:\/\/medium.com\/@shijuvar\/writing-grpc-interceptors-in-go-bf3e7671fe48) - A simple tutorial on gRPC Interceptors\n- [An introduction to gRPC](https:\/\/devopedia.org\/grpc)\n- [How we use gRPC to build a client\/server system in Go](https:\/\/medium.com\/pantomath\/how-we-use-grpc-to-build-a-client-server-system-in-go-dd20045fa1c2) - A technical presentation on how to use gRPC (and Protobuf) to build a robust client\/server system\n- [Serving gRPC and HTTP services on the same port](https:\/\/www.d3void.net\/post\/grpc-with-http\/) - Small tutorial on how to serve http and gRPC on same port in Go\n- [Take a REST with HTTP\/2, Protobufs, and Swagger](https:\/\/coreos.com\/blog\/grpc-protobufs-swagger.html) - Small tutorial on how to serve http and gRPC on same port in Go\n- [OpenCensus for Go gRPC developers](https:\/\/medium.com\/@orijtech\/opencensus-for-go-grpc-developers-7f3ee1ac3d6d) - Tutorial on how to use OpenCensus with gRPC and Go. Also available for [Java](https:\/\/medium.com\/@orijtech\/opencensus-for-java-grpc-developers-23c25de0a057) and [Python](https:\/\/medium.com\/@orijtech\/opencensus-for-python-grpc-developers-9e460e054395).\n- [How to develop Go gRPC microservice with HTTP\/REST endpoint, middleware, Kubernetes deployment, etc](https:\/\/medium.com\/@amsokol.com\/tutorial-how-to-develop-go-grpc-microservice-with-http-rest-endpoint-middleware-kubernetes-daebb36a97e9) - A series of blog posts for gRPC development using Go. [Source code](https:\/\/github.com\/amsokol\/go-grpc-http-rest-microservice-tutorial).\n \n<a name=\"res-videos\"><\/a>\n### Videos\n\n- [gRPC: Google's high-performance, open-source RPC framework](https:\/\/www.youtube.com\/watch?v=sZx3oZt7LVg) - GothamGo 2015 by Sameer Ajmani\n- [Introduction to gRPC: A general RPC framework that puts mobile and HTTP\/2 first](https:\/\/www.youtube.com\/watch?v=kUz2zjkKxFg) - Devoxx by Mete Atamel\n- [gRPC: The Story of Microservices at Square](https:\/\/www.youtube.com\/watch?v=-2sWDr3Z0Wo) - Apigee webcast\n- [Scalable Realtime Microservices with Kubernetes and gRPC](https:\/\/www.youtube.com\/watch?v=xb8u2s7cxzg) - Mark Mandel @ Google\n- [Text to Speech server with gRPC and Kubernetes](https:\/\/www.youtube.com\/watch?v=XaMr--wAuSI) - justforfunc #12\n- [GRPC Microservices 101](https:\/\/www.youtube.com\/watch?v=-t57ZQZpjqs) - Google Developer Group Washington by Ray Tsang\n- [Efficient Microservices w\/ Binary Protocol - gRPC 101](https:\/\/www.youtube.com\/watch?v=RqK-mwh3-aY) - By Ray Tsang\n- [grpc: From Tutorial to Production](https:\/\/www.youtube.com\/watch?v=7FZ6ZyzGex0) - GopherCon 2017 by Alan Shreve\n- [Scalable Microservices with gRPC, Kubernetes, and Docker](https:\/\/www.youtube.com\/watch?v=xsIwYL-N4vI) - Node Interactive 2016 by Sandeep Dinesh\n- [Building Microservices w\/gRPC & Kubernetes](https:\/\/www.youtube.com\/watch?v=27swR9HACWU) - Philly ETE 2016 #49 by Kelsey Hightower\n- [Building high performance microservices with Kubernetes, Go, and gRPC](https:\/\/www.youtube.com\/watch?v=YiNt4kUnnIM) - Google Cloud Next '17 by Andrew Jessup\n- [Modifying gRPC Services Over Time](https:\/\/www.youtube.com\/watch?v=F2WYEFLTKEw) - Eric Anderson, Google at KubeCon + CloudNativeCon 2017 - Austin\n- [Next Generation Services at Indeed Using gRPC](https:\/\/www.youtube.com\/watch?v=aQ2d9iLDR8Y) - Jaye Pitzeruse, Indeed.com at KubeCon + CloudNativeCon 2017 - Austin\n- [Generating Unified APIs with Protocol Buffers and gRPC](https:\/\/www.infoq.com\/presentations\/api-pb-grpc) - A video on Protocol Buffers, gRPC and Envoy from Lyft.\n- [Intro to gRPC: A Modern Toolkit for Microservice Communication](https:\/\/www.youtube.com\/watch?v=RoXT_Rkg8LA) - A video from Twilio's Signal Conference\n- [gRPC and Go: Developing Efficient and Type-Safe Services](https:\/\/www.youtube.com\/watch?v=J-NTfvYL_OE)\n- [Best Practices for (Go) gRPC Services](https:\/\/www.youtube.com\/watch?v=Z_yD7YPL2oE)\n- [Creating GopherJS Apps with gRPC-Web](https:\/\/www.youtube.com\/watch?v=R2HaxH7Et64) - At FOSDEM\n- [justforfunc #31: gRPC Basics](https:\/\/www.youtube.com\/watch?v=uolTUtioIrc) - JustForFunc: Programming in Go series Episode 31 covering gRPC\n- [Efficient service communication with gRPC](https:\/\/www.youtube.com\/watch?v=t9SUcf3Uwlg) - Talk at microXchg 2018 Berlin\n- [gRPC Java Course on Udemy](http:\/\/bit.ly\/grpc-java-github) - Online Course (4 hours) that walks through several examples and implementations of gRPC using the Java Language\n\n<a name=\"res-slides\"><\/a>\n### Slides\n\n- [gRPC Overview](http:\/\/www.slideshare.net\/VarunTalwar4\/grpc-overview) - An overview at gRPC: Talk at Slack by \nVarun Talwar\n- [gRPC Design and Implementation](https:\/\/www.slideshare.net\/VarunTalwar4\/grpc-design-and-implementation) - April 2016 talk at Stanford by Varun Talwar\n- [gRPC - boilerplate to high-performance scalable APIs](https:\/\/www.slideshare.net\/AboutYouGmbH\/robert-kubis-grpc-boilerplate-to-highperformance-scalable-apis-codetalks-2015) - code.talks 2015 by Robert Kubis\n- [HTTP2 and gRPC](https:\/\/www.slideshare.net\/GuoJing8\/http2-and-grpc) - A simple introduction about HTTP2 and gRPC by Xin Gong Chang\n- [gRPC and Microservices](https:\/\/www.slideshare.net\/blinkingsquirrel\/grpc-and-microservices) - Overview of Google's open source microservices framework - gRPC, based on HTTP2 and protocol buffers. Presented at Golang Melbourne, June 2016 by Jonathan Gomez\n- [gRPC and Microservices](https:\/\/github.com\/jonog\/talks\/blob\/master\/src\/grpc\/grpc-presentation.md) - Golang Melbourne - June 2016 Go Hack Night by Jonathan Gomez\n- [Scalable Microservices with gRPC, Kubernetes, and Containers](https:\/\/speakerdeck.com\/googlecloudplatform\/scalable-microservices-with-grpc-kubernetes-and-containers-devfest-ukraine) - DevFest Ukraine\n- [OpenAPI and gRPC Side by-Side](https:\/\/www.slideshare.net\/timburks\/openapi-and-grpc-side-byside) - APIStrat Conference - \nTim Burks\n- [Go+Microservices at Mercari](https:\/\/talks.godoc.org\/github.com\/tcnksm\/talks\/2017\/11\/gocon2017\/gocon2017.slide) - Taichi Nakashima at Go Conference 2017\n\n<a name=\"res-examples\"><\/a>\n### Examples\n\n- [gifinator](https:\/\/github.com\/GoogleCloudPlatform\/gifinator) - A sample application demonstrating Kubernetes, gRPC, Go and cute Gophers demoed at Google GCP Next 2017\n- [Text to Speech server with gRPC and Kubernetes](https:\/\/github.com\/campoy\/justforfunc\/tree\/master\/12-say-grpc) - justforfunc #12\n- [Multiplayer Simon Says - A Game using gRPC and Kubernetes](https:\/\/github.com\/grpc-ecosystem\/grpc-simon-says) - Sample app with Go server and clients using Node.js (on Arduino and web), and Java (Android and CLI)\n- [Go Microservices Example](https:\/\/github.com\/harlow\/go-micro-services) - HTTP up front, Protobufs in the rear\n- [Streaming RPC's using gRPC](https:\/\/github.com\/ridha\/grpc-streaming-demo) - A quick demo of bi-directional streaming RPC's using grpc, Go and Python\n- [gRPC Java Examples](https:\/\/github.com\/saturnism\/grpc-java-by-example) - A collection of useful\/essential gRPC Java Examples \n- [gRPC\/OpenCensus Demo](https:\/\/github.com\/rakyll\/opencensus-grpc-demo) - Export metrics and traces from gRPC servers and clients using Java, Go and Prometheus\n- [go-micro-services](https:\/\/github.com\/harlow\/go-micro-services) - An demonstration of Golang micro-services that expose a HTTP\/JSON frontend and then leverages gRPC for inter-service communication\n- [Colossus](https:\/\/github.com\/lucperkins\/colossus) - An example multi-language gRPC microservice architecture built by Bazel and targeting Kubernetes\n\n<a name=\"res-misc\"><\/a>\n### Miscellaneous\n\n- [gRPC with Load Balancer or Proxy or on AWS](https:\/\/gist.github.com\/bojand\/6a604f7e369d7c7d8c39eb77878a42c2) - Various notes on doing gRPC behind a load balancer or proxy or on AWS\n- [gRPC service upgrade, versioning](https:\/\/groups.google.com\/forum\/#!topic\/grpc-io\/LPsPg5ctQd4) - A short possibly useful discussion on gRPC service upgrade and versioning\n- [Packaging Generated Code for gRPC Services](https:\/\/blog.bugsnag.com\/libraries-for-grpc-services\/) - An article demonstrating a strategy on how to version and package gRPC libraries\n\n<a name=\"proto\"><\/a>\n## Protocol Buffers\n\n<a name=\"proto-doc\"><\/a>\n### Documentation\n\n- [Website](https:\/\/developers.google.com\/protocol-buffers\/) - Official website an documentation\n\n<a name=\"proto-tools\"><\/a>\n### Tools\n\n- [prototools](https:\/\/github.com\/sourcegraph\/prototools) - Documentation generator & other tools for protobuf\/gRPC\n- [protoc-gen-doc](https:\/\/github.com\/pseudomuto\/protoc-gen-doc) - Documentation generator plugin for Google Protocol Buffers\n- [openapi2proto](https:\/\/github.com\/NYTimes\/openapi2proto) - A tool for generating Protobuf v3 schemas and gRPC service definitions from OpenAPI specifications\n- [Wireshark Protobuf Dissector](https:\/\/github.com\/128technology\/protobuf_dissector) - A Wireshark Lua plugin for decoding Google protobuf packets. [Relevant PR and discussion](https:\/\/github.com\/google\/protobuf\/issues\/3303).\n- [protoc-gen-lint](https:\/\/github.com\/ckaznocha\/protoc-gen-lint) - A plug-in for Google's Protocol Buffers (protobufs) compiler to lint .proto files for style violations\n- [prototool](https:\/\/github.com\/uber\/prototool) - Compile, lint, and format Protobuf files, and generate stubs for any lanuguage\/plugin, along with Vim\/IDE integration\n- [protoc-gen-validate](https:\/\/github.com\/lyft\/protoc-gen-validate) - Protoc plugin to generate polyglot message validators\n- [go-proto-validators](https:\/\/github.com\/mwitkow\/go-proto-validators) - Generate message validators from .proto annotations, used in `grpc_validator` Go gRPC middleware.\n- [protolock](https:\/\/github.com\/nilslice\/protolock) - Protocol Buffer companion tool to `protoc` and `git`. Track your .proto files and prevent changes to messages and services which impact API compatibilty.\n\n### Similar\n\n- [gogoprotobuf](https:\/\/github.com\/gogo\/protobuf) - Fork of golang\/protobuf with extra code generation features\n- [MessagePack](http:\/\/msgpack.org\/index.html) - It's like JSON, but fast and small\n- [Thrift](https:\/\/thrift.apache.org\/) - Thrift is an interface definition language and binary communication protocol\n- [TChannel](https:\/\/github.com\/uber\/tchannel) - Network multiplexing and framing protocol for RPC\n- [Cap’n Proto](https:\/\/capnproto.org\/) - Think Protocol Buffers, except faster\n- [FlatBuffers](https:\/\/google.github.io\/flatbuffers\/) - An efficient cross platform serialization library\n- [RSocket](http:\/\/rsocket.io\/) - Application protocol providing Reactive Streams semantics\n- [Twirp](https:\/\/github.com\/twitchtv\/twirp) - A simple RPC framework with protobuf service definitions \n- [Greenpack](https:\/\/github.com\/glycerine\/greenpack) - Serialization format similar to MessagePack, but adds field versioning and type annotation\n\n## Contribute\n\nContributions welcome! Read the [contribution guidelines](contributing.md) first.\n\n## License\n\n[![CC BY 4.0](https:\/\/licensebuttons.net\/l\/by\/4.0\/88x31.png)](https:\/\/creativecommons.org\/licenses\/by\/4.0\/)\n\nThis work is licensed under a [Creative Commons Attribution 4.0 International License](https:\/\/creativecommons.org\/licenses\/by\/4.0\/).",
          "Date Modified" : "2018-09-27 18:03:09 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:02:57 -0600"
        }
      ],
      "Tags" : [
        "grpc",
        "awesome",
        "docs"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:03:41 -0600",
      "Date Modified" : "2018-09-27 18:10:44 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-golang",
      "Fragments" : [
        {
          "Content" : "# Awesome Go\n\n[![Build Status](https:\/\/travis-ci.org\/avelino\/awesome-go.svg?branch=master)](https:\/\/travis-ci.org\/avelino\/awesome-go) [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome) [![Slack Widget](https:\/\/camo.githubusercontent.com\/984828c0b020357921853f59eaaa65aaee755542\/68747470733a2f2f73332e65752d63656e7472616c2d312e616d617a6f6e6177732e636f6d2f6e6774756e612f6a6f696e2d75732d6f6e2d736c61636b2e706e67)](http:\/\/gophers.slack.com\/messages\/awesome)\n\nA curated list of awesome Go frameworks, libraries and software. Inspired by [awesome-python](https:\/\/github.com\/vinta\/awesome-python).\n\n### Contributing\n\nPlease take a quick gander at the [contribution guidelines](https:\/\/github.com\/avelino\/awesome-go\/blob\/master\/CONTRIBUTING.md) first. Thanks to all [contributors](https:\/\/github.com\/avelino\/awesome-go\/graphs\/contributors); you rock!\n\n#### *If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!*\n\n### Contents\n\n- [Awesome Go](#awesome-go)\n    - [Audio and Music](#audio-and-music)\n    - [Authentication and OAuth](#authentication-and-oauth)\n    - [Command Line](#command-line)\n    - [Configuration](#configuration)\n    - [Continuous Integration](#continuous-integration)\n    - [CSS Preprocessors](#css-preprocessors)\n    - [Data Structures](#data-structures)\n    - [Database](#database)\n    - [Database Drivers](#database-drivers)\n    - [Date and Time](#date-and-time)\n    - [Distributed Systems](#distributed-systems)\n    - [Email](#email)\n    - [Embeddable Scripting Languages](#embeddable-scripting-languages)\n    - [Files](#files)\n    - [Financial](#financial)\n    - [Forms](#forms)\n    - [Game Development](#game-development)\n    - [Generation and Generics](#generation-and-generics)\n    - [Geographic](#geographic)\n    - [Go Compilers](#go-compilers)\n    - [Goroutines](#goroutines)\n    - [GUI](#gui)\n    - [Hardware](#hardware)\n    - [Images](#images)\n    - [IoT](#iot-internet-of-things)\n    - [Logging](#logging)\n    - [Machine Learning](#machine-learning)\n    - [Messaging](#messaging)\n    - [Miscellaneous](#miscellaneous)\n    - [Natural Language Processing](#natural-language-processing)\n    - [Networking](#networking)\n    - [OpenGL](#opengl)\n    - [ORM](#orm)\n    - [Package Management](#package-management)\n    - [Query Language](#query-language)\n    - [Resource Embedding](#resource-embedding)\n    - [Science and Data Analysis](#science-and-data-analysis)\n    - [Security](#security)\n    - [Serialization](#serialization)\n    - [Template Engines](#template-engines)\n    - [Testing](#testing)\n    - [Text Processing](#text-processing)\n    - [Third-party APIs](#third-party-apis)\n    - [Utilities](#utilities)\n    - [Validation](#validation)\n    - [Version Control](#version-control)\n    - [Video](#video)\n    - [Web Frameworks](#web-frameworks)\n        - [Middlewares](#middlewares)\n            - [Actual middlewares](#actual-middlewares)\n            - [Libraries for creating HTTP middlewares](#libraries-for-creating-http-middlewares)\n        - [Routers](#routers)\n    - [Windows](#windows)\n    - [XML](#xml)\n\n- [Tools](#tools)\n    - [Code Analysis](#code-analysis)\n    - [Editor Plugins](#editor-plugins)\n    - [Go Generate Tools](#go-generate-tools)\n    - [Go Tools](#go-tools)\n    - [Software Packages](#software-packages)\n        - [DevOps Tools](#devops-tools)\n        - [Other Software](#other-software)\n\n- [Server Applications](#server-applications)\n\n- [Resources](#resources)\n    - [Benchmarks](#benchmarks)\n    - [Conferences](#conferences)\n    - [E-Books](#e-books)\n    - [Gophers](#gophers)\n    - [Meetups](#meetups)\n    - [Twitter](#twitter)\n    - [Websites](#websites)\n        - [Tutorials](#tutorials)\n\n## Audio and Music\n\n*Libraries for manipulating audio.*\n\n* [EasyMIDI](https:\/\/github.com\/algoGuy\/EasyMIDI) - EasyMidi is a simple and reliable library for working with standard midi file (SMF).\n* [flac](https:\/\/github.com\/eaburns\/flac) - Native Go FLAC decoder.\n* [flac](https:\/\/github.com\/mewkiz\/flac) - Native Go FLAC decoder.\n* [gaad](https:\/\/github.com\/Comcast\/gaad) - Native Go AAC bitstream parser.\n* [go-sox](https:\/\/github.com\/krig\/go-sox) - libsox bindings for go.\n* [go_mediainfo](https:\/\/github.com\/zhulik\/go_mediainfo) - libmediainfo bindings for go.\n* [gosamplerate](https:\/\/github.com\/dh1tw\/gosamplerate) - libsamplerate bindings for go.\n* [id3v2](https:\/\/github.com\/bogem\/id3v2) - Fast and stable ID3 parsing and writing library for Go.\n* [malgo](https:\/\/github.com\/gen2brain\/malgo) - Mini audio library.\n* [minimp3](https:\/\/github.com\/tosone\/minimp3) - Lightweight MP3 decoder library.\n* [mix](https:\/\/github.com\/go-mix\/mix) - Sequence-based Go-native audio mixer for music apps.\n* [mp3](https:\/\/github.com\/tcolgate\/mp3) - Native Go MP3 decoder.\n* [music-theory](https:\/\/github.com\/go-music-theory\/music-theory) - Music theory models in Go.\n* [PortAudio](https:\/\/github.com\/gordonklaus\/portaudio) - Go bindings for the PortAudio audio I\/O library.\n* [portmidi](https:\/\/github.com\/rakyll\/portmidi) - Go bindings for PortMidi.\n* [taglib](https:\/\/github.com\/wtolson\/go-taglib) - Go bindings for taglib.\n* [vorbis](https:\/\/github.com\/mccoyst\/vorbis) - \"Native\" Go Vorbis decoder (uses CGO, but has no dependencies).\n* [waveform](https:\/\/github.com\/mdlayher\/waveform) - Go package capable of generating waveform images from audio streams.\n\n## Authentication and OAuth\n\n*Libraries for implementing authentications schemes.*\n\n* [authboss](https:\/\/github.com\/volatiletech\/authboss) - Modular authentication system for the web. It tries to remove as much boilerplate and \"hard things\" as possible so that each time you start a new web project in Go, you can plug it in, configure, and start building your app without having to build an authentication system each time.\n* [branca](https:\/\/github.com\/hako\/branca) - Golang implementation of Branca Tokens.\n* [casbin](https:\/\/github.com\/hsluoyz\/casbin) - Authorization library that supports access control models like ACL, RBAC, ABAC.\n* [cookiestxt](https:\/\/github.com\/mengzhuo\/cookiestxt) - provides parser of cookies.txt file format.\n* [Go-AWS-Auth](https:\/\/github.com\/smartystreets\/go-aws-auth) - AWS (Amazon Web Services) request signing library.\n* [go-jose](https:\/\/github.com\/square\/go-jose) - Fairly complete implementation of the JOSE working group's JSON Web Token, JSON Web Signatures, and JSON Web Encryption specs.\n* [go-oauth2-server](https:\/\/github.com\/RichardKnop\/go-oauth2-server) - Standalone, specification-compliant,  OAuth2 server written in Golang.\n* [gologin](https:\/\/github.com\/dghubble\/gologin) - chainable handlers for login with OAuth1 and OAuth2 authentication providers.\n* [gorbac](https:\/\/github.com\/mikespook\/gorbac) - provides a lightweight role-based access control (RBAC) implementation in Golang.\n* [goth](https:\/\/github.com\/markbates\/goth) - provides a simple, clean, and idiomatic way to use OAuth and OAuth2. Handles multiple providers out of the box.\n* [httpauth](https:\/\/github.com\/goji\/httpauth) - HTTP Authentication middleware.\n* [jwt](https:\/\/github.com\/robbert229\/jwt) - Clean and easy to use implementation of JSON Web Tokens (JWT).\n* [jwt](https:\/\/github.com\/pascaldekloe\/jwt) - Lightweight JSON Web Token (JWT) library.\n* [jwt-auth](https:\/\/github.com\/adam-hanna\/jwt-auth) - JWT middleware for Golang http servers with many configuration options.\n* [jwt-go](https:\/\/github.com\/dgrijalva\/jwt-go) - Golang implementation of JSON Web Tokens (JWT).\n* [loginsrv](https:\/\/github.com\/tarent\/loginsrv) - JWT login microservice with plugable backends such as OAuth2 (Github), htpasswd, osiam.\n* [oauth2](https:\/\/github.com\/golang\/oauth2) - Successor of goauth2. Generic OAuth 2.0 package that comes with JWT, Google APIs, Compute Engine and App Engine support.\n* [osin](https:\/\/github.com\/RangelReale\/osin) - Golang OAuth2 server library.\n* [paseto](https:\/\/github.com\/o1egl\/paseto) - Golang implementation of Platform-Agnostic Security Tokens (PASETO)\n* [permissions2](https:\/\/github.com\/xyproto\/permissions2) - Library for keeping track of users, login states and permissions. Uses secure cookies and bcrypt.\n* [securecookie](https:\/\/github.com\/chmike\/securecookie) - Efficient secure cookie encoding\/decoding.\n* [session](https:\/\/github.com\/icza\/session) - Go session management for web servers (including support for Google App Engine - GAE).\n* [sessiongate-go](https:\/\/github.com\/f0rmiga\/sessiongate-go) - Go session management using the SessionGate Redis module.\n* [sessions](https:\/\/github.com\/adam-hanna\/sessions) - Dead simple, highly performant, highly customizable sessions service for go http servers.\n* [signedvalue](https:\/\/github.com\/sashka\/signedvalue) - Signed and timestamped strings compatible with [Tornado's](https:\/\/github.com\/tornadoweb\/tornado) `create_signed_value`, `decode_signed_value`, and therefore `set_secure_cookie` and `get_secure_cookie`.\n* [yubigo](https:\/\/github.com\/GeertJohan\/yubigo) - Yubikey client package that provides a simple API to integrate the Yubico Yubikey into a go application.\n\n## Command Line\n\n### Standard CLI\n\n*Libraries for building standard or basic Command Line applications.*\n\n* [argparse](https:\/\/github.com\/akamensky\/argparse) - Command line argument parser inspired by Python's argparse module.\n* [argv](https:\/\/github.com\/cosiner\/argv) - Go library to split command line string as arguments array using the bash syntax.\n* [cli](https:\/\/github.com\/mkideal\/cli) - Feature-rich and easy to use command-line package based on golang struct tags.\n* [cli](https:\/\/github.com\/teris-io\/cli) - Simple and complete API for building command line interfaces in Go.\n* [cli-init](https:\/\/github.com\/tcnksm\/gcli) - The easy way to start building Golang command line applications.\n* [climax](http:\/\/github.com\/tucnak\/climax) - Alternative CLI with \"human face\", in spirit of Go command.\n* [cobra](https:\/\/github.com\/spf13\/cobra) - Commander for modern Go CLI interactions.\n* [commandeer](https:\/\/github.com\/jaffee\/commandeer) - Dev-friendly CLI apps: sets up flags, defaults, and usage based on struct fields and tags.\n* [complete](https:\/\/github.com\/posener\/complete) - Write bash completions in Go + Go command bash completion.\n* [docopt.go](https:\/\/github.com\/docopt\/docopt.go) - Command-line arguments parser that will make you smile.\n* [drive](https:\/\/github.com\/odeke-em\/drive) - Google Drive client for the commandline.\n* [env](https:\/\/github.com\/codingconcepts\/env) - Tag-based environment configuration for structs.\n* [flag](https:\/\/github.com\/cosiner\/flag) - Simple but powerful command line option parsing library for Go supporting subcommand.\n* [flaggy](https:\/\/github.com\/integrii\/flaggy) - A robust and idiomatic flags package with excellent subcommand support.\n* [flagvar](https:\/\/github.com\/sgreben\/flagvar) - A collection of flag argument types for Go's standard `flag` package.\n* [go-arg](https:\/\/github.com\/alexflint\/go-arg) - Struct-based argument parsing in Go.\n* [go-flags](https:\/\/github.com\/jessevdk\/go-flags) - go command line option parser.\n* [gocmd](https:\/\/github.com\/devfacet\/gocmd) - Go library for building command line applications.\n* [kingpin](https:\/\/github.com\/alecthomas\/kingpin) - Command line and flag parser supporting sub commands.\n* [liner](https:\/\/github.com\/peterh\/liner) - Go readline-like library for command-line interfaces.\n* [mitchellh\/cli](https:\/\/github.com\/mitchellh\/cli) - Go library for implementing command-line interfaces.\n* [mow.cli](https:\/\/github.com\/jawher\/mow.cli) - Go library for building CLI applications with sophisticated flag and argument parsing and validation.\n* [pflag](https:\/\/github.com\/spf13\/pflag) - Drop-in replacement for Go's flag package, implementing POSIX\/GNU-style --flags.\n* [readline](https:\/\/github.com\/chzyer\/readline) - Pure golang implementation that provides most features in GNU-Readline under MIT license.\n* [sflags](https:\/\/github.com\/octago\/sflags) - Struct based flags generator for flag, urfave\/cli, pflag, cobra, kingpin and other libraries.\n* [strumt](https:\/\/github.com\/antham\/strumt) - Library to create prompt chain.\n* [ukautz\/clif](https:\/\/github.com\/ukautz\/clif) - Small command line interface framework.\n* [urfave\/cli](https:\/\/github.com\/urfave\/cli) - Simple, fast, and fun package for building command line apps in Go (formerly codegangsta\/cli).\n* [wlog](https:\/\/github.com\/dixonwille\/wlog) - Simple logging interface that supports cross-platform color and concurrency.\n* [wmenu](https:\/\/github.com\/dixonwille\/wmenu) - Easy to use menu structure for cli applications that prompts users to make choices.\n\n### Advanced Console UIs\n\n*Libraries for building Console Applications and Console User Interfaces.*\n\n* [aurora](https:\/\/github.com\/logrusorgru\/aurora) - ANSI terminal colors that supports fmt.Printf\/Sprintf.\n* [cfmt](https:\/\/github.com\/mingrammer\/cfmt) - Contextual fmt inspired by bootstrap color classes.\n* [chalk](https:\/\/github.com\/ttacon\/chalk) - Intuitive package for prettifying terminal\/console output.\n* [color](https:\/\/github.com\/fatih\/color) - Versatile package for colored terminal output.\n* [colourize](https:\/\/github.com\/TreyBastian\/colourize) - Go library for ANSI colour text in terminals.\n* [ctc](https:\/\/github.com\/wzshiming\/ctc) - The non-invasive cross-platform terminal color library does not need to modify the Print method\n* [go-ataman](https:\/\/github.com\/workanator\/go-ataman) - Go library for rendering ANSI colored text templates in terminals.\n* [go-colorable](https:\/\/github.com\/mattn\/go-colorable) - Colorable writer for windows.\n* [go-colortext](https:\/\/github.com\/daviddengcn\/go-colortext) - Go library for color output in terminals.\n* [go-isatty](https:\/\/github.com\/mattn\/go-isatty) - isatty for golang.\n* [go-prompt](https:\/\/github.com\/c-bata\/go-prompt) - Library for building a powerful interactive prompt, inspired by [python-prompt-toolkit](https:\/\/github.com\/jonathanslenders\/python-prompt-toolkit).\n* [gocui](https:\/\/github.com\/jroimartin\/gocui) - Minimalist Go library aimed at creating Console User Interfaces.\n* [gommon\/color](https:\/\/github.com\/labstack\/gommon\/tree\/master\/color) - Style terminal text.\n* [gookit\/color](https:\/\/github.com\/gookit\/color) - Terminal color rendering tool library, support 16 colors, 256 colors, RGB color rendering output, compatible with Windows.\n* [mpb](https:\/\/github.com\/vbauerster\/mpb) - Multi progress bar for terminal applications.\n* [progressbar](https:\/\/github.com\/schollz\/progressbar) - Basic thread-safe progress bar that works in every OS.\n* [simpletable](https:\/\/github.com\/alexeyco\/simpletable) - Simple tables in terminal with Go.\n* [tabular](https:\/\/github.com\/InVisionApp\/tabular) - Print ASCII tables from command line utilities without the need to pass large sets of data to the API.\n* [termbox-go](https:\/\/github.com\/nsf\/termbox-go) - Termbox is a library for creating cross-platform text-based interfaces.\n* [termtables](https:\/\/github.com\/apcera\/termtables) - Go port of the Ruby library [terminal-tables](https:\/\/github.com\/tj\/terminal-table) for simple ASCII table generation as well as providing markdown and HTML output.\n* [termui](https:\/\/github.com\/gizak\/termui) - Go terminal dashboard based on **termbox-go** and inspired by [blessed-contrib](https:\/\/github.com\/yaronn\/blessed-contrib).\n* [tui-go](https:\/\/github.com\/marcusolsson\/tui-go) - Go UI library for building rich terminal applications.\n* [uilive](https:\/\/github.com\/gosuri\/uilive) - Library for updating terminal output in realtime.\n* [uiprogress](https:\/\/github.com\/gosuri\/uiprogress) - Flexible library to render progress bars in terminal applications.\n* [uitable](https:\/\/github.com\/gosuri\/uitable) - Library to improve readability in terminal apps using tabular data.\n\n## Configuration\n\n*Libraries for configuration parsing.*\n\n* [config](https:\/\/github.com\/olebedev\/config) - JSON or YAML configuration wrapper with environment variables and flags parsing.\n* [configure](https:\/\/github.com\/paked\/configure) - Provides configuration through multiple sources, including JSON, flags and environment variables.\n* [confita](https:\/\/github.com\/heetch\/confita) - Load configuration in cascade from multiple backends into a struct.\n* [conflate](https:\/\/github.com\/miracl\/conflate) - Library\/tool to merge multiple JSON\/YAML\/TOML files from arbitrary URLs, validation against a JSON schema, and application of default values defined in the schema.\n* [env](https:\/\/github.com\/caarlos0\/env) - Parse environment variables to Go structs (with defaults).\n* [envcfg](https:\/\/github.com\/tomazk\/envcfg) - Un-marshaling environment variables to Go structs.\n* [envconf](https:\/\/github.com\/ian-kent\/envconf) - Configuration from environment.\n* [envconfig](https:\/\/github.com\/vrischmann\/envconfig) - Read your configuration from environment variables.\n* [envh](https:\/\/github.com\/antham\/envh) - Helpers to manage environment variables.\n* [gcfg](https:\/\/github.com\/go-gcfg\/gcfg) - read INI-style configuration files into Go structs; supports user-defined types and subsections.\n* [go-up](https:\/\/github.com\/ufoscout\/go-up) - A simple configuration library with recursive placeholders resolution and no magic.\n* [goConfig](https:\/\/github.com\/crgimenes\/goConfig) - Parses a struct as input and populates the fields of this struct with parameters from command line, environment variables and configuration file.\n* [godotenv](https:\/\/github.com\/joho\/godotenv) - Go port of Ruby's dotenv library (Loads environment variables from `.env`).\n* [gofigure](https:\/\/github.com\/ian-kent\/gofigure) - Go application configuration made easy.\n* [gone\/jconf](https:\/\/github.com\/One-com\/gone\/tree\/master\/jconf) - Modular JSON configuration. Keep you config structs along with the code they configure and delegate parsing to submodules without sacrificing full config serialization.\n* [gookit\/config](https:\/\/github.com\/gookit\/config) - application config manage(load,get,set). support JSON, YAML, TOML, INI, HCL. multi file load, data override merge.\n* [hjson](https:\/\/github.com\/hjson\/hjson-go) - Human JSON, a configuration file format for humans. Relaxed syntax, fewer mistakes, more comments.\n* [ingo](https:\/\/github.com\/schachmat\/ingo) - Flags persisted in an ini-like config file.\n* [ini](https:\/\/github.com\/go-ini\/ini) - Go package to read and write INI files.\n* [joshbetz\/config](https:\/\/github.com\/joshbetz\/config) - Small configuration library for Go that parses environment variables, JSON files, and reloads automatically on SIGHUP.\n* [kelseyhightower\/envconfig](https:\/\/github.com\/kelseyhightower\/envconfig) - Go library for managing configuration data from environment variables.\n* [mini](https:\/\/github.com\/sasbury\/mini) - Golang package for parsing ini-style configuration files.\n* [store](https:\/\/github.com\/tucnak\/store) - Lightweight configuration manager for Go.\n* [viper](https:\/\/github.com\/spf13\/viper) - Go configuration with fangs.\n* [xdg](https:\/\/github.com\/OpenPeeDeeP\/xdg) - Cross platform package that follows the [XDG Standard](https:\/\/standards.freedesktop.org\/basedir-spec\/basedir-spec-latest.html).\n\n## Continuous Integration\n\n*Tools for help with continuous integration.*\n\n* [drone](https:\/\/github.com\/drone\/drone) - Drone is a Continuous Integration platform built on Docker, written in Go.\n* [duci](https:\/\/github.com\/duck8823\/duci) - A simple ci server no needs domain specific languages.\n* [gomason](https:\/\/github.com\/nikogura\/gomason) - Test, Build, Sign, and Publish your go binaries from a clean workspace.\n* [goveralls](https:\/\/github.com\/mattn\/goveralls) - Go integration for Coveralls.io continuous code coverage tracking system.\n* [overalls](https:\/\/github.com\/go-playground\/overalls) - Multi-Package go project coverprofile for tools like goveralls.\n* [roveralls](https:\/\/github.com\/LawrenceWoodman\/roveralls) - Recursive coverage testing tool.\n\n## CSS Preprocessors\n\n*Libraries for preprocessing CSS files.*\n\n* [c6](https:\/\/github.com\/c9s\/c6) - High performance SASS compatible-implementation compiler written in Go.\n* [gcss](https:\/\/github.com\/yosssi\/gcss) - Pure Go CSS Preprocessor.\n* [go-libsass](https:\/\/github.com\/wellington\/go-libsass) - Go wrapper to the 100% Sass compatible libsass project.\n\n## Data Structures\n\n*Generic datastructures and algorithms in Go.*\n* [algorithms](https:\/\/github.com\/shady831213\/algorithms) - Algorithms and data structures.CLRS study.\n* [binpacker](https:\/\/github.com\/zhuangsirui\/binpacker) - Binary packer and unpacker helps user build custom binary stream.\n* [bit](https:\/\/github.com\/yourbasic\/bit) - Golang set data structure with bonus bit-twiddling functions.\n* [bitset](https:\/\/github.com\/willf\/bitset) - Go package implementing bitsets.\n* [bloom](https:\/\/github.com\/zhenjl\/bloom) - Bloom filters implemented in Go.\n* [bloom](https:\/\/github.com\/yourbasic\/bloom) - Golang Bloom filter implementation.\n* [boomfilters](https:\/\/github.com\/tylertreat\/BoomFilters) - Probabilistic data structures for processing continuous, unbounded streams.\n* [concurrent-writer](https:\/\/github.com\/free\/concurrent-writer) - Highly concurrent drop-in replacement for `bufio.Writer`.\n* [conjungo](https:\/\/github.com\/InVisionApp\/conjungo) - A small, powerful and flexible merge library.\n* [count-min-log](https:\/\/github.com\/seiflotfy\/count-min-log) - Go implementation Count-Min-Log sketch: Approximately counting with approximate counters (Like Count-Min sketch but using less memory).\n* [cuckoofilter](https:\/\/github.com\/seiflotfy\/cuckoofilter) - Cuckoo filter: a good alternative to a counting bloom filter implemented in Go.\n* [deque](https:\/\/github.com\/gammazero\/deque) - Fast ring-buffer deque (double-ended queue).\n* [encoding](https:\/\/github.com\/zhenjl\/encoding) - Integer Compression Libraries for Go.\n* [go-adaptive-radix-tree](https:\/\/github.com\/plar\/go-adaptive-radix-tree) - Go implementation of Adaptive Radix Tree.\n* [go-datastructures](https:\/\/github.com\/Workiva\/go-datastructures) - Collection of useful, performant, and thread-safe data structures.\n* [go-ef](https:\/\/github.com\/amallia\/go-ef) - A Go implementation of the Elias-Fano encoding.\n* [go-geoindex](https:\/\/github.com\/hailocab\/go-geoindex) - In-memory geo index.\n* [go-mcache](https:\/\/github.com\/OrlovEvgeny\/go-mcache) - Fast in-memory key:value store\/cache library. Pointer caches.\n* [go-rquad](https:\/\/github.com\/aurelien-rainone\/go-rquad) - Region quadtrees with efficient point location and neighbour finding.\n* [gods](https:\/\/github.com\/emirpasic\/gods) - Go Data Structures. Containers, Sets, Lists, Stacks, Maps, BidiMaps, Trees, HashSet etc.\n* [golang-set](https:\/\/github.com\/deckarep\/golang-set) - Thread-Safe and Non-Thread-Safe high-performance sets for Go.\n* [goset](https:\/\/github.com\/zoumo\/goset) - A useful Set collection implementation for Go.\n* [goskiplist](https:\/\/github.com\/ryszard\/goskiplist) - Skip list implementation in Go.\n* [gota](https:\/\/github.com\/kniren\/gota) - Implementation of dataframes, series, and data wrangling methods for Go.\n* [hilbert](https:\/\/github.com\/google\/hilbert) - Go package for mapping values to and from space-filling curves, such as Hilbert and Peano curves.\n* [hyperloglog](https:\/\/github.com\/axiomhq\/hyperloglog) - HyperLogLog implementation with Sparse, LogLog-Beta bias correction and TailCut space reduction.\n* [levenshtein](https:\/\/github.com\/agext\/levenshtein) - Levenshtein distance and similarity metrics with customizable edit costs and Winkler-like bonus for common prefix.\n* [levenshtein](https:\/\/github.com\/agnivade\/levenshtein) - Implementation to calculate levenshtein distance in Go.\n* [mafsa](https:\/\/github.com\/smartystreets\/mafsa) - MA-FSA implementation with Minimal Perfect Hashing.\n* [merkletree](https:\/\/github.com\/cbergoon\/merkletree) - Implementation of a merkle tree providing an efficient and secure verification of the contents of data structures.\n* [mspm](https:\/\/github.com\/BlackRabbitt\/mspm) - Multi-String Pattern Matching Algorithm for information retrieval.\n* [pipeline](https:\/\/github.com\/hyfather\/pipeline) - An implementation of pipelines with fan-in and fan-out.\n* [roaring](https:\/\/github.com\/RoaringBitmap\/roaring) - Go package implementing compressed bitsets.\n* [skiplist](https:\/\/github.com\/MauriceGit\/skiplist) - Very fast Go Skiplist implementation.\n* [skiplist](https:\/\/github.com\/gansidui\/skiplist) - Skiplist implementation in Go.\n* [trie](https:\/\/github.com\/derekparker\/trie) - Trie implementation in Go.\n* [ttlcache](https:\/\/github.com\/diegobernardes\/ttlcache) - In-memory LRU string-interface{} map with expiration for golang.\n* [willf\/bloom](https:\/\/github.com\/willf\/bloom) - Go package implementing Bloom filters.\n\n## Database\n\n*Databases implemented in Go.*\n\n* [badger](https:\/\/github.com\/dgraph-io\/badger) - Fast key-value store in Go.\n* [BigCache](https:\/\/github.com\/allegro\/bigcache) - Efficient key\/value cache for gigabytes of data.\n* [bolt](https:\/\/github.com\/boltdb\/bolt) - Low-level key\/value database for Go.\n* [buntdb](https:\/\/github.com\/tidwall\/buntdb) - Fast, embeddable, in-memory key\/value database for Go with custom indexing and spatial support.\n* [cache2go](https:\/\/github.com\/muesli\/cache2go) - In-memory key:value cache which supports automatic invalidation based on timeouts.\n* [clusteredBigCache](https:\/\/github.com\/oaStuff\/clusteredBigCache) - BigCache with clustering support and individual item expiration.\n* [cockroach](https:\/\/github.com\/cockroachdb\/cockroach) - Scalable, Geo-Replicated, Transactional Datastore.\n* [couchcache](https:\/\/github.com\/codingsince1985\/couchcache) - RESTful caching micro-service backed by Couchbase server.\n* [dgraph](https:\/\/github.com\/dgraph-io\/dgraph) - Scalable, Distributed, Low Latency, High Throughput Graph Database.\n* [diskv](https:\/\/github.com\/peterbourgon\/diskv) - Home-grown disk-backed key-value store.\n* [eliasdb](https:\/\/github.com\/krotik\/eliasdb) - Dependency-free, transactional graph database with REST API, phrase search and SQL-like query language.\n* [forestdb](https:\/\/github.com\/couchbase\/goforestdb) - Go bindings for ForestDB.\n* [GCache](https:\/\/github.com\/bluele\/gcache) - Cache library with support for expirable Cache, LFU, LRU and ARC.\n* [go-cache](https:\/\/github.com\/pmylund\/go-cache) - In-memory key:value store\/cache (similar to Memcached) library for Go, suitable for single-machine applications.\n* [goleveldb](https:\/\/github.com\/syndtr\/goleveldb) - Implementation of the [LevelDB](https:\/\/github.com\/google\/leveldb) key\/value database in Go.\n* [gorocksdb](https:\/\/github.com\/kapitan-k\/gorocksdb) - Gorocksdb is a wrapper for [RocksDB](https:\/\/rocksdb.org) written in Go.\n* [groupcache](https:\/\/github.com\/golang\/groupcache) - Groupcache is a caching and cache-filling library, intended as a replacement for memcached in many cases.\n* [influxdb](https:\/\/github.com\/influxdb\/influxdb) - Scalable datastore for metrics, events, and real-time analytics.\n* [ledisdb](https:\/\/github.com\/siddontang\/ledisdb) - Ledisdb is a high performance NoSQL like Redis based on LevelDB.\n* [levigo](https:\/\/github.com\/jmhodges\/levigo) - Levigo is a Go wrapper for LevelDB.\n* [moss](https:\/\/github.com\/couchbase\/moss) - Moss is a simple LSM key-value storage engine written in 100% Go.\n* [piladb](https:\/\/github.com\/fern4lvarez\/piladb) - Lightweight RESTful database engine based on stack data structures.\n* [prometheus](https:\/\/github.com\/prometheus\/prometheus) - Monitoring system and time series database.\n* [rqlite](https:\/\/github.com\/rqlite\/rqlite) - The lightweight, distributed, relational database built on SQLite.\n* [Scribble](https:\/\/github.com\/nanobox-io\/golang-scribble) - Tiny flat file JSON store.\n* [slowpoke](https:\/\/github.com\/recoilme\/slowpoke) - Key-value store with persistence.\n* [tempdb](https:\/\/github.com\/rafaeljesus\/tempdb) - Key-value store for temporary items.\n* [tidb](https:\/\/github.com\/pingcap\/tidb) - TiDB is a distributed SQL database. Inspired by the design of Google F1.\n* [tiedot](https:\/\/github.com\/HouzuoGuo\/tiedot) - Your NoSQL database powered by Golang.\n* [Vasto](https:\/\/github.com\/chrislusf\/vasto) - A distributed high-performance key-value store. On Disk. Eventual consistent. HA. Able to grow or shrink without service interruption.\n\n*Database schema migration.*\n\n* [darwin](https:\/\/github.com\/GuiaBolso\/darwin) - Database schema evolution library for Go.\n* [go-fixtures](https:\/\/github.com\/RichardKnop\/go-fixtures) - Django style fixtures for Golang's excellent built-in database\/sql library.\n* [go-pg-migrations](https:\/\/github.com\/robinjoseph08\/go-pg-migrations) - A Go package to help write migrations with go-pg\/pg.\n* [gondolier](https:\/\/github.com\/emvicom\/gondolier) - Gondolier is a library to auto migrate database schemas using structs.\n* [goose](https:\/\/github.com\/steinbacher\/goose) - Database migration tool. You can manage your database's evolution by creating incremental SQL or Go scripts.\n* [gormigrate](https:\/\/github.com\/go-gormigrate\/gormigrate) - Database schema migration helper for Gorm ORM.\n* [migrate](https:\/\/github.com\/golang-migrate\/migrate) - Database migrations. CLI and Golang library.\n* [pravasan](https:\/\/github.com\/pravasan\/pravasan) - Simple Migration tool - currently for MySQL but planning to soon support Postgres, SQLite, MongoDB, etc.\n* [soda](https:\/\/github.com\/gobuffalo\/pop\/tree\/master\/soda) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n* [sql-migrate](https:\/\/github.com\/rubenv\/sql-migrate) - Database migration tool. Allows embedding migrations into the application using go-bindata.\n\n*Database tools.*\n\n* [chproxy](https:\/\/github.com\/Vertamedia\/chproxy) - HTTP proxy for ClickHouse database.\n* [clickhouse-bulk](https:\/\/github.com\/nikepan\/clickhouse-bulk) - Collects small insterts and sends big requests to ClickHouse servers.\n* [go-mysql](https:\/\/github.com\/siddontang\/go-mysql) - Go toolset to handle MySQL protocol and replication.\n* [go-mysql-elasticsearch](https:\/\/github.com\/siddontang\/go-mysql-elasticsearch) - Sync your MySQL data into Elasticsearch automatically.\n* [kingshard](https:\/\/github.com\/flike\/kingshard) - kingshard is a high performance proxy for MySQL powered by Golang.\n* [myreplication](https:\/\/github.com\/2tvenom\/myreplication) - MySql binary log replication listener. Supports statement and row based replication.\n* [orchestrator](https:\/\/github.com\/github\/orchestrator) - MySQL replication topology manager & visualizer.\n* [pgweb](https:\/\/github.com\/sosedoff\/pgweb) - Web-based PostgreSQL database browser.\n* [prep](https:\/\/github.com\/hexdigest\/prep) - Use prepared SQL statements without changing your code.\n* [pREST](https:\/\/github.com\/nuveo\/prest) - Serve a RESTful API from any PostgreSQL database.\n* [rwdb](https:\/\/github.com\/andizzle\/rwdb) - rwdb provides read replica capability for multiple database servers setup.\n* [vitess](https:\/\/github.com\/youtube\/vitess) - vitess provides servers and tools which facilitate scaling of MySQL databases for large scale web services.\n\n*SQL query builder, libraries for building and using SQL.*\n\n* [dat](https:\/\/github.com\/mgutz\/dat) - Go Postgres Data Access Toolkit.\n* [Dotsql](https:\/\/github.com\/gchaincl\/dotsql) - Go library that helps you keep sql files in one place and use them with ease.\n* [gendry](https:\/\/github.com\/didi\/gendry) - Non-invasive SQL builder and powerful data binder.\n* [godbal](https:\/\/github.com\/xujiajun\/godbal) - Database Abstraction Layer (dbal) for go. Support SQL builder and get result easily.\n* [goqu](https:\/\/github.com\/doug-martin\/goqu) - Idiomatic SQL builder and query library.\n* [igor](https:\/\/github.com\/galeone\/igor) - Abstraction layer for PostgreSQL that supports advanced functionality and uses gorm-like syntax.\n* [ozzo-dbx](https:\/\/github.com\/go-ozzo\/ozzo-dbx) - Powerful data retrieval methods as well as DB-agnostic query building capabilities.\n* [scaneo](https:\/\/github.com\/variadico\/scaneo) - Generate Go code to convert database rows into arbitrary structs.\n* [sqrl](https:\/\/github.com\/elgris\/sqrl) - SQL query builder, fork of Squirrel with improved performance.\n* [Squirrel](https:\/\/github.com\/Masterminds\/squirrel) - Go library that helps you build SQL queries.\n* [xo](https:\/\/github.com\/knq\/xo) - Generate idiomatic Go code for databases based on existing schema definitions or custom queries supporting PostgreSQL, MySQL, SQLite, Oracle, and Microsoft SQL Server.\n\n## Database Drivers\n\n*Libraries for connecting and operating databases.*\n\n* Relational Databases\n    * [avatica](https:\/\/github.com\/apache\/calcite-avatica-go) - Apache Avatica\/Phoenix SQL driver for database\/sql.\n    * [bgc](https:\/\/github.com\/viant\/bgc) - Datastore Connectivity for BigQuery for go.\n    * [firebirdsql](https:\/\/github.com\/nakagami\/firebirdsql) - Firebird RDBMS SQL driver for Go.\n    * [go-adodb](https:\/\/github.com\/mattn\/go-adodb) - Microsoft ActiveX Object DataBase driver for go that uses database\/sql.\n    * [go-mssqldb](https:\/\/github.com\/denisenkom\/go-mssqldb) - Microsoft MSSQL driver for Go.\n    * [go-oci8](https:\/\/github.com\/mattn\/go-oci8) - Oracle driver for go that uses database\/sql.\n    * [go-sql-driver\/mysql](https:\/\/github.com\/go-sql-driver\/mysql) - MySQL driver for Go.\n    * [go-sqlite3](https:\/\/github.com\/mattn\/go-sqlite3) - SQLite3 driver for go that uses database\/sql.\n    * [gofreetds](https:\/\/github.com\/minus5\/gofreetds) - Microsoft MSSQL driver. Go wrapper over [FreeTDS](http:\/\/www.freetds.org).\n    * [goracle](https:\/\/github.com\/go-goracle\/goracle) - Oracle driver for Go, using the ODPI-C driver\n    * [pgx](https:\/\/github.com\/jackc\/pgx) - PostgreSQL driver supporting features beyond those exposed by database\/sql.\n    * [pq](https:\/\/github.com\/lib\/pq) - Pure Go Postgres driver for database\/sql.\n\n* NoSQL Databases\n    * [aerospike-client-go](https:\/\/github.com\/aerospike\/aerospike-client-go) - Aerospike client in Go language.\n    * [arangolite](https:\/\/github.com\/solher\/arangolite) - Lightweight golang driver for ArangoDB.\n    * [asc](https:\/\/github.com\/viant\/asc) - Datastore Connectivity for Aerospike for go.\n    * [cayley](https:\/\/github.com\/google\/cayley) - Graph database with support for multiple backends.\n    * [dsc](https:\/\/github.com\/viant\/dsc) - Datastore connectivity for SQL, NoSQL, structured files.\n    * [dynago](https:\/\/github.com\/underarmour\/dynago) - Dynago is a principle of least surprise client for DynamoDB.\n    * [go-couchbase](https:\/\/github.com\/couchbase\/go-couchbase) - Couchbase client in Go.\n    * [go-couchdb](https:\/\/github.com\/fjl\/go-couchdb) - Yet another CouchDB HTTP API wrapper for Go.\n    * [gocb](https:\/\/github.com\/couchbase\/gocb) - Official Couchbase Go SDK.\n    * [gocql](http:\/\/gocql.github.io) - Go language driver for Apache Cassandra.\n    * [godscache](https:\/\/github.com\/defcronyke\/godscache) - A wrapper for the Google Cloud Platform Go Datastore package that adds caching using memcached.\n    * [gomemcache](https:\/\/github.com\/bradfitz\/gomemcache\/) - memcache client library for the Go programming language.\n    * [gorethink](https:\/\/github.com\/dancannon\/gorethink) - Go language driver for RethinkDB.\n    * [goriak](https:\/\/github.com\/zegl\/goriak) - Go language driver for Riak KV.\n    * [mgo](https:\/\/github.com\/globalsign\/mgo) - MongoDB driver for the Go language that implements a rich and well tested selection of features under a very simple API following standard Go idioms\n    * [mongo-go-driver](https:\/\/github.com\/mongodb\/mongo-go-driver) - Official MongoDB driver for the Go language.\n    * [neo4j](https:\/\/github.com\/cihangir\/neo4j) - Neo4j Rest API Bindings for Golang.\n    * [Neo4j-GO](https:\/\/github.com\/davemeehan\/Neo4j-GO) - Neo4j REST Client in golang.\n    * [neoism](https:\/\/github.com\/jmcvetta\/neoism) - Neo4j client for Golang.\n    * [redigo](https:\/\/github.com\/gomodule\/redigo) - Redigo is a Go client for the Redis database.\n    * [redis](https:\/\/github.com\/go-redis\/redis) - Redis client for Golang.\n    * [redis](https:\/\/github.com\/hoisie\/redis) - Simple, powerful Redis client for Go.\n    * [redis](https:\/\/github.com\/bsm\/redeo) - Redis-protocol compatible TCP servers\/services.\n    * [xredis](https:\/\/github.com\/shomali11\/xredis) - Typesafe, customizable, clean & easy to use Redis client.\n\n* Search and Analytic Databases.\n    * [bleve](https:\/\/github.com\/blevesearch\/bleve) - Modern text indexing library for go.\n    * [elastic](https:\/\/github.com\/olivere\/elastic) - Elasticsearch client for Go.\n    * [elasticsql](https:\/\/github.com\/cch123\/elasticsql) - Convert sql to elasticsearch dsl in Go.\n    * [elastigo](https:\/\/github.com\/mattbaird\/elastigo) - Elasticsearch client library.\n    * [goes](https:\/\/github.com\/OwnLocal\/goes) - Library to interact with Elasticsearch.\n    * [riot](https:\/\/github.com\/go-ego\/riot) - Go Open Source, Distributed, Simple and efficient Search Engine\n    * [skizze](https:\/\/github.com\/seiflotfy\/skizze) - probabilistic data-structures service and storage.\n\n## Date and Time\n\n*Libraries for working with dates and times.*\n\n* [carbon](https:\/\/github.com\/uniplaces\/carbon) - Simple Time extension with a lot of util methods, ported from PHP Carbon library.\n* [date](https:\/\/github.com\/rickb777\/date) - Augments Time for working with dates, date ranges, time spans, periods, and time-of-day.\n* [dateparse](https:\/\/github.com\/araddon\/dateparse) - Parse date's without knowing format in advance.\n* [durafmt](https:\/\/github.com\/hako\/durafmt) - Time duration formatting library for Go.\n* [feiertage](https:\/\/github.com\/wlbr\/feiertage) - Set of functions to calculate public holidays in Germany, incl. specialization on the states of Germany (Bundesländer). Things like Easter, Pentecost, Thanksgiving...\n* [go-persian-calendar](https:\/\/github.com\/yaa110\/go-persian-calendar) - The implementation of the Persian (Solar Hijri) Calendar in Go (golang).\n* [go-sunrise](https:\/\/github.com\/nathan-osman\/go-sunrise) - Calculate the sunrise and sunset times for a given location.\n* [goweek](https:\/\/github.com\/grsmv\/goweek) - Library for working with week entity in golang.\n* [now](https:\/\/github.com\/jinzhu\/now) - Now is a time toolkit for golang.\n* [NullTime](https:\/\/github.com\/kirillDanshin\/nulltime) - Nullable `time.Time`.\n* [strftime](https:\/\/github.com\/awoodbeck\/strftime) - C99-compatible strftime formatter.\n* [timespan](https:\/\/github.com\/SaidinWoT\/timespan) - For interacting with intervals of time, defined as a start time and a duration.\n* [timeutil](https:\/\/github.com\/leekchan\/timeutil) - Useful extensions (Timedelta, Strftime, ...) to the golang's time package.\n* [tuesday](https:\/\/github.com\/osteele\/tuesday) - Ruby-compatible Strftime function.\n\n## Distributed Systems\n\n*Packages that help with building Distributed Systems.*\n\n* [celeriac](https:\/\/github.com\/svcavallar\/celeriac.v1) - Library for adding support for interacting and monitoring Celery workers, tasks and events in Go.\n* [consistent](https:\/\/github.com\/buraksezer\/consistent) - Consistent hashing with bounded loads.\n* [digota](https:\/\/github.com\/digota\/digota) - grpc ecommerce microservice.\n* [drmaa](https:\/\/github.com\/dgruber\/drmaa) - Job submission library for cluster schedulers based on the DRMAA standard.\n* [emitter-io](https:\/\/github.com\/emitter-io\/emitter) - High performance, distributed, secure and low latency publish-subscribe platform built with MQTT, Websockets and love.\n* [flowgraph](https:\/\/github.com\/vectaport\/flowgraph) - MPI-style ready-send coordination layer.\n* [gleam](https:\/\/github.com\/chrislusf\/gleam) - Fast and scalable distributed map\/reduce system written in pure Go and Luajit, combining Go's high concurrency with Luajit's high performance, runs standalone or distributed.\n* [glow](https:\/\/github.com\/chrislusf\/glow) - Easy-to-Use scalable distributed big data processing, Map-Reduce, DAG execution, all in pure Go.\n* [go-health](https:\/\/github.com\/InVisionApp\/go-health) - Library for enabling asynchronous dependency health checks in your service.\n* [go-jump](https:\/\/github.com\/dgryski\/go-jump) - Port of Google's \"Jump\" Consistent Hash function.\n* [go-kit](https:\/\/github.com\/go-kit\/kit) - Microservice toolkit with support for service discovery, load balancing, pluggable transports, request tracking, etc.\n* [gorpc](https:\/\/github.com\/valyala\/gorpc) - Simple, fast and scalable RPC library for high load.\n* [grpc-go](https:\/\/github.com\/grpc\/grpc-go) - The Go language implementation of gRPC. HTTP\/2 based RPC.\n* [heimdall](https:\/\/github.com\/gojektech\/heimdall) - An enchanced http client with retry and hystrix capabilities.\n* [hprose](https:\/\/github.com\/hprose\/hprose-golang) - Very newbility RPC Library, support 25+ languages now.\n* [jaeger](https:\/\/github.com\/jaegertracing\/jaeger) - A distributed tracing system.\n* [jsonrpc](https:\/\/github.com\/osamingo\/jsonrpc) - The jsonrpc package helps implement of JSON-RPC 2.0.\n* [jsonrpc](https:\/\/github.com\/ybbus\/jsonrpc) - JSON-RPC 2.0 HTTP client implementation.\n* [KrakenD](https:\/\/github.com\/devopsfaith\/krakend) - Ultra performant API Gateway framework with middlewares.\n* [micro](https:\/\/github.com\/micro\/micro) - Pluggable microservice toolkit and distributed systems platform.\n* [NATS](https:\/\/github.com\/nats-io\/gnatsd) - Lightweight, high performance messaging system for microservices, IoT, and cloud native systems.\n* [raft](https:\/\/github.com\/hashicorp\/raft) - Golang implementation of the Raft consensus protocol, by HashiCorp.\n* [raft](https:\/\/github.com\/coreos\/etcd\/tree\/master\/raft) - Go implementation of the Raft consensus protocol, by CoreOS.\n* [redis-lock](https:\/\/github.com\/bsm\/redis-lock) - Simplified distributed locking implementation using Redis.\n* [ringpop-go](https:\/\/github.com\/uber\/ringpop-go) - Scalable, fault-tolerant application-layer sharding for Go applications.\n* [rpcx](https:\/\/github.com\/smallnest\/rpcx) - Distributed pluggable RPC service framework like alibaba Dubbo.\n* [sleuth](https:\/\/github.com\/ursiform\/sleuth) - Library for master-less p2p auto-discovery and RPC between HTTP services (using [ZeroMQ](https:\/\/github.com\/zeromq\/libzmq)).\n* [tendermint](https:\/\/github.com\/tendermint\/tendermint) - High-performance middleware for transforming a state machine written in any programming language into a Byzantine Fault Tolerant replicated state machine using the Tendermint consensus and blockchain protocols.\n* [torrent](https:\/\/github.com\/anacrolix\/torrent) - BitTorrent client package.\n    * [dht](https:\/\/godoc.org\/github.com\/anacrolix\/dht) - BitTorrent Kademlia DHT implementation.\n    * [go-peerflix](https:\/\/github.com\/Sioro-Neoku\/go-peerflix) - Video streaming torrent client.\n\n## Email\n\n*Libraries and tools that implement email creation and sending.*\n\n* [chasquid](https:\/\/blitiri.com.ar\/p\/chasquid) - SMTP server written in Go.\n* [douceur](https:\/\/github.com\/aymerick\/douceur) - CSS inliner for your HTML emails.\n* [email](https:\/\/github.com\/jordan-wright\/email) - A robust and flexible email library for Go.\n* [go-dkim](https:\/\/github.com\/toorop\/go-dkim) - DKIM library, to sign & verify email.\n* [go-imap](https:\/\/github.com\/emersion\/go-imap) - IMAP library for clients and servers.\n* [go-message](https:\/\/github.com\/emersion\/go-message) - Streaming library for the Internet Message Format and mail messages.\n* [Gomail](https:\/\/github.com\/go-gomail\/gomail\/) - Gomail is a very simple and powerful package to send emails.\n* [Hectane](https:\/\/github.com\/hectane\/hectane) - Lightweight SMTP client providing an HTTP API.\n* [hermes](https:\/\/github.com\/matcornic\/hermes) - Golang package that generates clean, responsive HTML e-mails.\n* [MailHog](https:\/\/github.com\/mailhog\/MailHog) - Email and SMTP testing with web and API interface.\n* [SendGrid](https:\/\/github.com\/sendgrid\/sendgrid-go) - SendGrid's Go library for sending email.\n* [smtp](https:\/\/github.com\/mailhog\/smtp) - SMTP server protocol state machine.\n\n## Embeddable Scripting Languages\n\n*Embedding other languages inside your go code.*\n\n* [agora](https:\/\/github.com\/PuerkitoBio\/agora) - Dynamically typed, embeddable programming language in Go.\n* [anko](https:\/\/github.com\/mattn\/anko) - Scriptable interpreter written in Go.\n* [binder](https:\/\/github.com\/alexeyco\/binder) - Go to Lua binding library, based on [gopher-lua](https:\/\/github.com\/yuin\/gopher-lua).\n* [expr](https:\/\/github.com\/antonmedv\/expr) - an engine that can evaluate expressions.\n* [gisp](https:\/\/github.com\/jcla1\/gisp) - Simple LISP in Go.\n* [go-duktape](https:\/\/github.com\/olebedev\/go-duktape) - Duktape JavaScript engine bindings for Go.\n* [go-lua](https:\/\/github.com\/Shopify\/go-lua) - Port of the Lua 5.2 VM to pure Go.\n* [go-php](https:\/\/github.com\/deuill\/go-php) - PHP bindings for Go.\n* [go-python](https:\/\/github.com\/sbinet\/go-python) - naive go bindings to the CPython C-API.\n* [golua](https:\/\/github.com\/aarzilli\/golua) - Go bindings for Lua C API.\n* [gopher-lua](https:\/\/github.com\/yuin\/gopher-lua) - Lua 5.1 VM and compiler written in Go.\n* [ngaro](https:\/\/github.com\/db47h\/ngaro) - Embeddable Ngaro VM implementation enabling scripting in Retro.\n* [otto](https:\/\/github.com\/robertkrimen\/otto) - JavaScript interpreter written in Go.\n* [purl](https:\/\/github.com\/ian-kent\/purl) - Perl 5.18.2 embedded in Go.\n\n## Files\n\n*Libraries for  handling files and file systems.*\n\n* [afero](https:\/\/github.com\/spf13\/afero) - FileSystem Abstraction System for Go.\n* [go-csv-tag](https:\/\/github.com\/artonge\/go-csv-tag) - Load csv file using tag.\n* [go-gtfs](https:\/\/github.com\/artonge\/go-gtfs) - Load gtfs files in go.\n* [notify](https:\/\/github.com\/rjeczalik\/notify) - File system event notification library with simple API, similar to os\/signal.\n* [pdfcpu](https:\/\/github.com\/hhrutter\/pdfcpu) - PDF processor.\n* [skywalker](https:\/\/github.com\/dixonwille\/skywalker) - Package to allow one to concurrently go through a filesystem with ease.\n* [tarfs](https:\/\/github.com\/posener\/tarfs) - Implementation of the [`FileSystem` interface](https:\/\/godoc.org\/github.com\/kr\/fs#FileSystem) for tar files.\n\n## Financial\n\n*Packages for accounting and finance.*\n\n* [accounting](https:\/\/github.com\/leekchan\/accounting) - money and currency formatting for golang.\n* [decimal](https:\/\/github.com\/shopspring\/decimal) - Arbitrary-precision fixed-point decimal numbers.\n* [go-finance](https:\/\/github.com\/FlashBoys\/go-finance) - Comprehensive financial markets data in Go.\n* [go-finance](https:\/\/github.com\/alpeb\/go-finance) - Library of financial functions for time value of money (annuities), cash flow, interest rate conversions, bonds and depreciation calculations.\n* [go-money](https:\/\/github.com\/rhymond\/go-money) - Implementation of Fowler's Money pattern.\n* [ofxgo](https:\/\/github.com\/aclindsa\/ofxgo) - Query OFX servers and\/or parse the responses (with example command-line client).\n* [techan](https:\/\/github.com\/sdcoffey\/techan) - Technical analysis library with advanced market analysis and trading strategies.\n* [transaction](https:\/\/github.com\/claygod\/transaction) - Embedded transactional database of accounts, running in multithreaded mode.\n* [vat](https:\/\/github.com\/dannyvankooten\/vat) - VAT number validation & EU VAT rates.\n\n## Forms\n\n*Libraries for working with forms.*\n\n* [bind](https:\/\/github.com\/robfig\/bind) - Bind form data to any Go values.\n* [binding](https:\/\/github.com\/mholt\/binding) - Binds form and JSON data from net\/http Request to struct.\n* [conform](https:\/\/github.com\/leebenson\/conform) - Keeps user input in check. Trims, sanitizes & scrubs data based on struct tags.\n* [form](https:\/\/github.com\/go-playground\/form) - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.\n* [formam](https:\/\/github.com\/monoculum\/formam) - decode form's values into a struct.\n* [forms](https:\/\/github.com\/albrow\/forms) - Framework-agnostic library for parsing and validating form\/JSON data which supports multipart forms and files.\n* [gorilla\/csrf](https:\/\/github.com\/gorilla\/csrf) - CSRF protection for Go web applications & services.\n* [nosurf](https:\/\/github.com\/justinas\/nosurf) - CSRF protection middleware for Go.\n\n## Game Development\n\n*Awesome game development libraries.*\n\n* [Azul3D](https:\/\/github.com\/azul3d\/engine) - 3D game engine written in Go.\n* [Ebiten](https:\/\/github.com\/hajimehoshi\/ebiten) - dead simple 2D game library in Go.\n* [engo](https:\/\/github.com\/EngoEngine\/engo) - Engo is an open-source 2D game engine written in Go. It follows the Entity-Component-System paradigm.\n* [g3n](https:\/\/github.com\/g3n\/engine) - Go 3D Game Engine.\n* [GarageEngine](https:\/\/github.com\/vova616\/GarageEngine) - 2d game engine written in Go working on OpenGL.\n* [glop](https:\/\/github.com\/runningwild\/glop) - Glop (Game Library Of Power) is a fairly simple cross-platform game library.\n* [go-astar](https:\/\/github.com\/beefsack\/go-astar) - Go implementation of the A\\* path finding algorithm.\n* [go-collada](https:\/\/github.com\/GlenKelley\/go-collada) - Go package for working with the Collada file format.\n* [go-sdl2](https:\/\/github.com\/veandco\/go-sdl2) - Go bindings for the [Simple DirectMedia Layer](https:\/\/www.libsdl.org\/).\n* [go3d](https:\/\/github.com\/ungerik\/go3d) - Performance oriented 2D\/3D math package for Go.\n* [gonet](https:\/\/github.com\/xtaci\/gonet) - Game server skeleton implemented with golang.\n* [goworld](https:\/\/github.com\/xiaonanln\/goworld) - Scalable game server engine, featuring space-entity framework and hot-swapping\n* [Leaf](https:\/\/github.com\/name5566\/leaf) - Lightweight game server framework.\n* [nano](https:\/\/github.com\/lonnng\/nano) - Lightweight, facility, high performance golang based game server framework\n* [Oak](https:\/\/github.com\/oakmound\/oak) - Pure Go game engine.\n* [Pitaya](https:\/\/github.com\/topfreegames\/pitaya) - Scalable game server framework with clustering support and client libraries for iOS, Android, Unity and others through the C SDK.\n* [Pixel](https:\/\/github.com\/faiface\/pixel) - Hand-crafted 2D game library in Go.\n* [raylib-go](https:\/\/github.com\/gen2brain\/raylib-go) - Go bindings for [raylib](http:\/\/www.raylib.com\/), a simple and easy-to-use library to learn videogames programming.\n* [termloop](https:\/\/github.com\/JoelOtter\/termloop) - Terminal-based game engine for Go, built on top of Termbox.\n\n## Generation and Generics\n\n*Tools to enhance the language with features like generics via code generation.*\n\n* [efaceconv](https:\/\/github.com\/t0pep0\/efaceconv) - Code generation tool for high performance conversion from interface{} to immutable type without allocations.\n* [gen](https:\/\/github.com\/clipperhouse\/gen) - Code generation tool for ‘generics’-like functionality.\n* [go-enum](https:\/\/github.com\/abice\/go-enum) - Code generation for enums from code comments.\n* [go-linq](https:\/\/github.com\/ahmetalpbalkan\/go-linq) - .NET LINQ-like query methods for Go.\n* [goderive](https:\/\/github.com\/awalterschulze\/goderive) - Derives functions from input types.\n* [interfaces](https:\/\/github.com\/rjeczalik\/interfaces) - Command line tool for generating interface definitions.\n* [jennifer](https:\/\/github.com\/dave\/jennifer) - Generate arbitrary Go code without templates.\n* [pkgreflect](https:\/\/github.com\/ungerik\/pkgreflect) - Go preprocessor for package scoped reflection.\n\n## Geographic\n\n*Geographic tools and servers*\n\n* [geocache](https:\/\/github.com\/melihmucuk\/geocache) - In-memory cache that is suitable for geolocation based applications.\n* [geoserver](https:\/\/github.com\/hishamkaram\/geoserver) - geoserver Is a Go Package For Manipulating a GeoServer Instance via the GeoServer REST API.\n* [osm](https:\/\/github.com\/paulmach\/osm) - Library for reading, writing and working with OpenStreetMap data and APIs.\n* [pbf](https:\/\/github.com\/maguro\/pbf) - OpenStreetMap PBF golang encoder\/decoder.\n* [S2 geometry](https:\/\/github.com\/golang\/geo) - S2 geometry library in Go.\n* [Tile38](https:\/\/github.com\/tidwall\/tile38) - Geolocation DB with spatial index and realtime geofencing.\n\n## Go Compilers\n\n*Tools for compiling Go to other languages.*\n\n* [c4go](https:\/\/github.com\/Konstantin8105\/c4go) - Transpile C code to Go code.\n* [f4go](https:\/\/github.com\/Konstantin8105\/f4go) - Transpile FORTRAN 77 code to Go code.\n* [gopherjs](https:\/\/github.com\/gopherjs\/gopherjs) - Compiler from Go to JavaScript.\n* [llgo](https:\/\/github.com\/go-llvm\/llgo) - LLVM-based compiler for Go.\n* [tardisgo](https:\/\/github.com\/tardisgo\/tardisgo) - Golang to Haxe to CPP\/CSharp\/Java\/JavaScript transpiler.\n\n## Goroutines\n\n*Tools for managing and working with Goroutines.*\n\n* [cyclicbarrier](https:\/\/github.com\/marusama\/cyclicbarrier) - CyclicBarrier for golang.\n* [go-floc](https:\/\/github.com\/workanator\/go-floc) - Orchestrate goroutines with ease.\n* [go-flow](https:\/\/github.com\/kamildrazkiewicz\/go-flow) - Control goroutines execution order.\n* [go-trylock](https:\/\/github.com\/subchen\/go-trylock) - TryLock support on read-write lock for Golang.\n* [GoSlaves](https:\/\/github.com\/themester\/GoSlaves) - Simple and Asynchronous Goroutine pool library.\n* [goworker](https:\/\/github.com\/benmanns\/goworker) - goworker is a Go-based background worker.\n* [grpool](https:\/\/github.com\/ivpusic\/grpool) - Lightweight Goroutine pool.\n* [parallel-fn](https:\/\/github.com\/rafaeljesus\/parallel-fn) - Run functions in parallel.\n* [pool](https:\/\/github.com\/go-playground\/pool) - Limited consumer goroutine or unlimited goroutine pool for easier goroutine handling and cancellation.\n* [semaphore](https:\/\/github.com\/kamilsk\/semaphore) - Semaphore pattern implementation with timeout of lock\/unlock operations based on channel and context.\n* [semaphore](https:\/\/github.com\/marusama\/semaphore) - Fast resizable semaphore implementation based on CAS (faster than channel-based semaphore implementations).\n* [stl](https:\/\/github.com\/ssgreg\/stl) - Software transactional locks based on Software Transactional Memory (STM) concurrency control mechanism.\n* [threadpool](https:\/\/github.com\/shettyh\/threadpool) - Golang threadpool implementation.\n* [tunny](https:\/\/github.com\/Jeffail\/tunny) - Goroutine pool for golang.\n* [worker-pool](https:\/\/github.com\/vardius\/worker-pool) - goworker is a Go simple async worker pool.\n* [workerpool](https:\/\/github.com\/gammazero\/workerpool) - Goroutine pool that limits the concurrency of task execution, not the number of tasks queued.\n\n## GUI\n\n*Libraries for building GUI Applications.*\n\n*Toolkits*\n\n* [app](https:\/\/github.com\/murlokswarm\/app) - Package to create apps with GO, HTML and CSS. Supports: MacOS, Windows in progress.\n* [go-astilectron](https:\/\/github.com\/asticode\/go-astilectron) - Build cross platform GUI apps with GO and HTML\/JS\/CSS (powered by Electron).\n* [go-gtk](http:\/\/mattn.github.io\/go-gtk\/) - Go bindings for GTK.\n* [go-sciter](https:\/\/github.com\/sciter-sdk\/go-sciter) - Go bindings for Sciter: the Embeddable HTML\/CSS\/script engine for modern desktop UI development. Cross platform.\n* [gotk3](https:\/\/github.com\/gotk3\/gotk3) - Go bindings for GTK3.\n* [gowd](https:\/\/github.com\/dtylman\/gowd) - Rapid and simple desktop UI development with GO, HTML, CSS and NW.js. Cross platform.\n* [qt](https:\/\/github.com\/therecipe\/qt) - Qt binding for Go (support for Windows \/ macOS \/ Linux \/ Android \/ iOS \/ Sailfish OS \/ Raspberry Pi).\n* [ui](https:\/\/github.com\/andlabs\/ui) - Platform-native GUI library for Go. Cross platform.\n* [walk](https:\/\/github.com\/lxn\/walk) - Windows application library kit for Go.\n* [webview](https:\/\/github.com\/zserge\/webview) - Cross-platform webview window with simple two-way JavaScript bindings (Windows \/ macOS \/ Linux).\n\n*Interaction*\n\n* [gosx-notifier](https:\/\/github.com\/deckarep\/gosx-notifier) - OSX Desktop Notifications library for Go.\n* [robotgo](https:\/\/github.com\/go-vgo\/robotgo) - Go Native cross-platform GUI system automation. Control the mouse, keyboard and other.\n* [systray](https:\/\/github.com\/getlantern\/systray) - Cross platform Go library to place an icon and menu in the notification area.\n* [trayhost](https:\/\/github.com\/shurcooL\/trayhost) - Cross-platform Go library to place an icon in the host operating system's taskbar.\n\n\n## Hardware\n\n*Libraries, tools, and tutorials for interacting with hardware.*\n\nSee [go-hardware](https:\/\/github.com\/rakyll\/go-hardware) for a comprehensive list.\n\n## Images\n\n*Libraries for manipulating images.*\n\n* [bild](https:\/\/github.com\/anthonynsimon\/bild) - Collection of image processing algorithms in pure Go.\n* [bimg](https:\/\/github.com\/h2non\/bimg) - Small package for fast and efficient image processing using libvips.\n* [cameron](https:\/\/github.com\/sheng\/cameron) - An avatar generator for Go.\n* [geopattern](https:\/\/github.com\/pravj\/geopattern) - Create beautiful generative image patterns from a string.\n* [gg](https:\/\/github.com\/fogleman\/gg) - 2D rendering in pure Go.\n* [gift](https:\/\/github.com\/disintegration\/gift) - Package of image processing filters.\n* [go-cairo](https:\/\/github.com\/ungerik\/go-cairo) - Go binding for the cairo graphics library.\n* [go-gd](https:\/\/github.com\/bolknote\/go-gd) - Go binding for GD library.\n* [go-nude](https:\/\/github.com\/koyachi\/go-nude) - Nudity detection with Go.\n* [go-opencv](https:\/\/github.com\/lazywei\/go-opencv) - Go bindings for OpenCV.\n* [go-webcolors](https:\/\/github.com\/jyotiska\/go-webcolors) - Port of webcolors library from Python to Go.\n* [gocv](https:\/\/github.com\/hybridgroup\/gocv) - Go package for computer vision using OpenCV 3.3+.\n* [goimagehash](https:\/\/github.com\/corona10\/goimagehash) - Go Perceptual image hashing package.\n* [govatar](https:\/\/github.com\/o1egl\/govatar) - Library and CMD tool for generating funny avatars.\n* [imagick](https:\/\/github.com\/gographics\/imagick) - Go binding to ImageMagick's MagickWand C API.\n* [imaginary](https:\/\/github.com\/h2non\/imaginary) - Fast and simple HTTP microservice for image resizing.\n* [imaging](https:\/\/github.com\/disintegration\/imaging) - Simple Go image processing package.\n* [img](https:\/\/github.com\/hawx\/img) - Selection of image manipulation tools.\n* [ln](https:\/\/github.com\/fogleman\/ln) - 3D line art rendering in Go.\n* [mort](https:\/\/github.com\/aldor007\/mort) - Storage and image processing server written in Go.\n* [mpo](https:\/\/github.com\/donatj\/mpo) - Decoder and conversion tool for MPO 3D Photos.\n* [picfit](https:\/\/github.com\/thoas\/picfit) - An image resizing server written in Go.\n* [pt](https:\/\/github.com\/fogleman\/pt) - Path tracing engine written in Go.\n* [resize](https:\/\/github.com\/nfnt\/resize) - Image resizing for Go with common interpolation methods.\n* [rez](https:\/\/github.com\/bamiaux\/rez) - Image resizing in pure Go and SIMD.\n* [smartcrop](https:\/\/github.com\/muesli\/smartcrop) - Finds good crops for arbitrary images and crop sizes.\n* [steganography](https:\/\/github.com\/auyer\/steganography) - Pure Go Library for LSB steganography.\n* [svgo](https:\/\/github.com\/ajstarks\/svgo) - Go Language Library for SVG generation.\n* [tga](https:\/\/github.com\/ftrvxmtrx\/tga) - Package tga is a TARGA image format decoder\/encoder.\n\n## IoT (Internet of Things)\n\n*Libraries for programming devices of the IoT.*\n\n* [connectordb](https:\/\/github.com\/connectordb\/connectordb) - Open-Source Platform for Quantified Self & IoT.\n* [devices](https:\/\/github.com\/goiot\/devices) - Suite of libraries for IoT devices, experimental for x\/exp\/io.\n* [eywa](https:\/\/github.com\/xcodersun\/eywa) - Project Eywa is essentially a connection manager that keeps track of connected devices.\n* [flogo](https:\/\/github.com\/tibcosoftware\/flogo) - Project Flogo is an Open Source Framework for IoT Edge Apps & Integration.\n* [gatt](https:\/\/github.com\/paypal\/gatt) - Gatt is a Go package for building Bluetooth Low Energy peripherals.\n* [gobot](https:\/\/github.com\/hybridgroup\/gobot\/) - Gobot is a framework for robotics, physical computing, and the Internet of Things.\n* [iot](https:\/\/github.com\/vaelen\/iot\/) - IoT is a simple framework for implementing a Google IoT Core device.\n* [mainflux](https:\/\/github.com\/Mainflux\/mainflux) - Industrial IoT Messaging and Device Management Server.\n* [periph](https:\/\/periph.io\/) - Peripherals I\/O to interface with low-level board facilities.\n* [sensorbee](https:\/\/github.com\/sensorbee\/sensorbee) - Lightweight stream processing engine for IoT.\n\n## Logging\n\n*Libraries for generating and working with log files.*\n\n* [distillog](https:\/\/github.com\/amoghe\/distillog) - distilled levelled logging (think of it as stdlib + log levels).\n* [glg](https:\/\/github.com\/kpango\/glg) - glg is simple and fast leveled logging library for Go.\n* [glog](https:\/\/github.com\/golang\/glog) - Leveled execution logs for Go.\n* [go-cronowriter](https:\/\/github.com\/utahta\/go-cronowriter) - Simple writer that rotate log files automatically based on current date and time, like cronolog.\n* [go-log](https:\/\/github.com\/subchen\/go-log) - Simple and configurable Logging in Go, with level, formatters and writers.\n* [go-log](https:\/\/github.com\/siddontang\/go-log) - Log lib supports level and multi handlers.\n* [go-log](https:\/\/github.com\/ian-kent\/go-log) - Log4j implementation in Go.\n* [go-logger](https:\/\/github.com\/apsdehal\/go-logger) - Simple logger of Go Programs, with level handlers.\n* [gologger](https:\/\/github.com\/sadlil\/gologger) - Simple easy to use log lib for go, logs in Colored Console, Simple Console, File or Elasticsearch.\n* [gomol](https:\/\/github.com\/aphistic\/gomol) - Multiple-output, structured logging for Go with extensible logging outputs.\n* [gone\/log](https:\/\/github.com\/One-com\/gone\/tree\/master\/log) - Fast, extendable, full-featured, std-lib source compatible log library.\n* [journald](https:\/\/github.com\/ssgreg\/journald) - Go implementation of systemd Journal's native API for logging.\n* [log](https:\/\/github.com\/apex\/log) - Structured logging package for Go.\n* [log](https:\/\/github.com\/go-playground\/log) - Simple, configurable and scalable Structured Logging for Go.\n* [log](https:\/\/github.com\/teris-io\/log) - Structured log interface for Go cleanly separates logging facade from its implementation.\n* [log-voyage](https:\/\/github.com\/firstrow\/logvoyage) - Full-featured logging saas written in golang.\n* [log15](https:\/\/github.com\/inconshreveable\/log15) - Simple, powerful logging for Go.\n* [logdump](https:\/\/github.com\/ewwwwwqm\/logdump) - Package for multi-level logging.\n* [logex](https:\/\/github.com\/chzyer\/logex) - Golang log lib, supports tracking and level, wrap by standard log lib.\n* [logger](https:\/\/github.com\/azer\/logger) - Minimalistic logging library for Go.\n* [logo](https:\/\/github.com\/mbndr\/logo) - Golang logger to different configurable writers.\n* [logrus](https:\/\/github.com\/Sirupsen\/logrus) - Structured logger for Go.\n* [logrusly](https:\/\/github.com\/sebest\/logrusly) - [logrus](https:\/\/github.com\/sirupsen\/logrus) plug-in to send errors to a [Loggly](https:\/\/www.loggly.com\/).\n* [logutils](https:\/\/github.com\/hashicorp\/logutils) - Utilities for slightly better logging in Go (Golang) extending the standard logger.\n* [logxi](https:\/\/github.com\/mgutz\/logxi) - 12-factor app logger that is fast and makes you happy.\n* [lumberjack](https:\/\/github.com\/natefinch\/lumberjack) - Simple rolling logger, implements io.WriteCloser.\n* [mlog](https:\/\/github.com\/jbrodriguez\/mlog) - Simple logging module for go, with 5 levels, an optional rotating logfile feature and stdout\/stderr output.\n* [onelog](https:\/\/github.com\/francoispqt\/onelog) - Onelog is a dead simple but very efficient JSON logger. It is the fastest JSON logger out there in all scenario. Also, it is one of the logger with the lowest allocation.\n* [ozzo-log](https:\/\/github.com\/go-ozzo\/ozzo-log) - High performance logging supporting log severity, categorization, and filtering. Can send filtered log messages to various targets (e.g. console, network, mail).\n* [seelog](https:\/\/github.com\/cihub\/seelog) - Logging functionality with flexible dispatching, filtering, and formatting.\n* [spew](https:\/\/github.com\/davecgh\/go-spew) - Implements a deep pretty printer for Go data structures to aid in debugging.\n* [stdlog](https:\/\/github.com\/alexcesaro\/log) - Stdlog is an object-oriented library providing leveled logging. It is very useful for cron jobs.\n* [tail](https:\/\/github.com\/hpcloud\/tail) - Go package striving to emulate the features of the BSD tail program.\n* [xlog](https:\/\/github.com\/xfxdev\/xlog) - Plugin architecture and flexible log system for Go, with level ctrl, multiple log target and custom log format.\n* [xlog](https:\/\/github.com\/rs\/xlog) - Structured logger for `net\/context` aware HTTP handlers with flexible dispatching.\n* [zap](https:\/\/github.com\/uber-go\/zap) - Fast, structured, leveled logging in Go.\n* [zerolog](https:\/\/github.com\/rs\/zerolog) - Zero-allocation JSON logger.\n\n## Machine Learning\n\n*Libraries for Machine Learning.*\n\n* [bayesian](https:\/\/github.com\/jbrukh\/bayesian) - Naive Bayesian Classification for Golang.\n* [CloudForest](https:\/\/github.com\/ryanbressler\/CloudForest) - Fast, flexible, multi-threaded ensembles of decision trees for machine learning in pure Go.\n* [eaopt](https:\/\/github.com\/MaxHalford\/eaopt) - An evolutionary optimization library.\n* [fonet](https:\/\/github.com\/Fontinalis\/fonet) - A Deep Neural Network library written in Go.\n* [go-cluster](https:\/\/github.com\/e-XpertSolutions\/go-cluster) - Go implementation of the k-modes and k-prototypes clustering algorithms.\n* [go-deep](https:\/\/github.com\/patrikeh\/go-deep) - A feature-rich neural network library in Go.\n* [go-fann](https:\/\/github.com\/white-pony\/go-fann) - Go bindings for Fast Artificial Neural Networks(FANN) library.\n* [go-galib](https:\/\/github.com\/thoj\/go-galib) - Genetic Algorithms library written in Go \/ golang.\n* [go-pr](https:\/\/github.com\/daviddengcn\/go-pr) - Pattern recognition package in Go lang.\n* [gobrain](https:\/\/github.com\/goml\/gobrain) - Neural Networks written in go.\n* [godist](https:\/\/github.com\/e-dard\/godist) - Various probability distributions, and associated methods.\n* [goga](https:\/\/github.com\/tomcraven\/goga) - Genetic algorithm library for Go.\n* [GoLearn](https:\/\/github.com\/sjwhitworth\/golearn) - General Machine Learning library for Go.\n* [golinear](https:\/\/github.com\/danieldk\/golinear) - liblinear bindings for Go.\n* [GoMind](https:\/\/github.com\/surenderthakran\/gomind) - A simplistic Neural Network Library in Go.\n* [goml](https:\/\/github.com\/cdipaolo\/goml) - On-line Machine Learning in Go.\n* [goRecommend](https:\/\/github.com\/timkaye11\/goRecommend) - Recommendation Algorithms library written in Go.\n* [gorgonia](https:\/\/github.com\/chewxy\/gorgonia) - graph-based computational library like Theano for Go that provides primitives for building various machine learning and neural network algorithms.\n* [goscore](https:\/\/github.com\/asafschers\/goscore) - Go Scoring API for PMML.\n* [gosseract](https:\/\/github.com\/otiai10\/gosseract) - Go package for OCR (Optical Character Recognition), by using Tesseract C++ library.\n* [libsvm](https:\/\/github.com\/datastream\/libsvm) - libsvm golang version derived work based on LIBSVM 3.14.\n* [mlgo](https:\/\/github.com\/NullHypothesis\/mlgo) - This project aims to provide minimalistic machine learning algorithms in Go.\n* [neat](https:\/\/github.com\/jinyeom\/neat) - Plug-and-play, parallel Go framework for NeuroEvolution of Augmenting Topologies (NEAT).\n* [neural-go](https:\/\/github.com\/schuyler\/neural-go) - Multilayer perceptron network implemented in Go, with training via backpropagation.\n* [probab](https:\/\/github.com\/ThePaw\/probab) - Probability distribution functions. Bayesian inference. Written in pure Go.\n* [regommend](https:\/\/github.com\/muesli\/regommend) - Recommendation & collaborative filtering engine.\n* [shield](https:\/\/github.com\/eaigner\/shield) - Bayesian text classifier with flexible tokenizers and storage backends for Go.\n* [tfgo](https:\/\/github.com\/galeone\/tfgo) - Easy to use Tensorflow bindings: simplifies the usage of the official Tensorflow Go bindings. Define computational graphs in Go, load and execute models trained in Python.\n* [Varis](https:\/\/github.com\/Xamber\/Varis) - Golang Neural Network.\n\n## Messaging\n\n*Libraries that implement messaging systems.*\n\n* [Benthos](https:\/\/github.com\/Jeffail\/benthos) - A message streaming bridge between a range of protocols.\n* [Centrifugo](https:\/\/github.com\/centrifugal\/centrifugo) - Real-time messaging (Websockets or SockJS) server in Go.\n* [dbus](https:\/\/github.com\/godbus\/dbus) - Native Go bindings for D-Bus.\n* [drone-line](https:\/\/github.com\/appleboy\/drone-line) - Sending [Line](https:\/\/at.line.me\/en) notifications using a binary, docker or Drone CI.\n* [emitter](https:\/\/github.com\/olebedev\/emitter) - Emits events using Go way, with wildcard, predicates, cancellation possibilities and many other good wins.\n* [event](https:\/\/github.com\/agoalofalife\/event) - Implementation of the pattern observer.\n* [EventBus](https:\/\/github.com\/asaskevich\/EventBus) - The lightweight event bus with async compatibility.\n* [gaurun-client](https:\/\/github.com\/osamingo\/gaurun-client) - Gaurun Client written in Go.\n* [Glue](https:\/\/github.com\/desertbit\/glue) - Robust Go and Javascript Socket Library (Alternative to Socket.io).\n* [go-notify](https:\/\/github.com\/TheCreeper\/go-notify) - Native implementation of the freedesktop notification spec.\n* [go-nsq](https:\/\/github.com\/nsqio\/go-nsq) - the official Go package for NSQ.\n* [go-socket.io](https:\/\/github.com\/googollee\/go-socket.io) - socket.io library for golang, a realtime application framework.\n* [go-vitotrol](https:\/\/github.com\/maxatome\/go-vitotrol) - Client library to Viessmann Vitotrol web service.\n* [Gollum](https:\/\/github.com\/trivago\/gollum) - A n:m multiplexer that gathers messages from different sources and broadcasts them to a set of destinations.\n* [golongpoll](https:\/\/github.com\/jcuga\/golongpoll) - HTTP longpoll server library that makes web pub-sub simple.\n* [goose](https:\/\/github.com\/ian-kent\/goose) - Server Sent Events in Go.\n* [gopush-cluster](https:\/\/github.com\/Terry-Mao\/gopush-cluster) - gopush-cluster is a go push server cluster.\n* [gorush](https:\/\/github.com\/appleboy\/gorush) - Push notification server using [APNs2](https:\/\/github.com\/sideshow\/apns2) and google [GCM](https:\/\/github.com\/google\/go-gcm).\n* [guble](https:\/\/github.com\/smancke\/guble) - Messaging server using push notifications (Google Firebase Cloud Messaging, Apple Push Notification services, SMS) as well as websockets, a REST API, featuring distributed operation and message-persistence.\n* [hub](https:\/\/github.com\/leandro-lugaresi\/hub) - A Message\/Event Hub for Go applications, using publish\/subscribe pattern with support for alias like rabbitMQ exchanges.\n* [machinery](https:\/\/github.com\/RichardKnop\/machinery) - Asynchronous task queue\/job queue based on distributed message passing.\n* [mangos](https:\/\/github.com\/go-mangos\/mangos) - Pure go implementation of the Nanomsg (\"Scalable Protocols\") with transport interoperability.\n* [melody](https:\/\/github.com\/olahol\/melody) - Minimalist framework for dealing with websocket sessions, includes broadcasting and automatic ping\/pong handling.\n* [messagebus](https:\/\/github.com\/vardius\/message-bus) - messagebus is a Go simple async message bus, perfect for using as event bus when doing event sourcing, CQRS, DDD.\n* [NATS Go Client](https:\/\/github.com\/nats-io\/nats) - Lightweight and high performance publish-subscribe and distributed queueing messaging system - this is the Go library.\n* [nsq-event-bus](https:\/\/github.com\/rafaeljesus\/nsq-event-bus) - A tiny wrapper around NSQ topic and channel.\n* [oplog](https:\/\/github.com\/dailymotion\/oplog) - Generic oplog\/replication system for REST APIs.\n* [pubsub](https:\/\/github.com\/tuxychandru\/pubsub) - Simple pubsub package for go.\n* [rabbus](https:\/\/github.com\/rafaeljesus\/rabbus) - A tiny wrapper over amqp exchanges and queues.\n* [rabtap](https:\/\/github.com\/jandelgado\/rabtap) - RabbitMQ swiss army knife cli app.\n* [RapidMQ](https:\/\/github.com\/sybrexsys\/RapidMQ) - RapidMQ is a lightweight and reliable library for managing of the local messages queue.\n* [sarama](https:\/\/github.com\/Shopify\/sarama) - Go library for Apache Kafka.\n* [Uniqush-Push](https:\/\/github.com\/uniqush\/uniqush-push) - Redis backed unified push service for server-side notifications to mobile devices.\n* [zmq4](https:\/\/github.com\/pebbe\/zmq4) - Go interface to ZeroMQ version 4. Also available for [version 3](https:\/\/github.com\/pebbe\/zmq3) and [version 2](https:\/\/github.com\/pebbe\/zmq2).\n\n## Miscellaneous\n\n*These libraries were placed here because none of the other categories seemed to fit.*\n\n* [alice](https:\/\/github.com\/magic003\/alice) - Additive dependency injection container for Golang.\n* [anagent](https:\/\/github.com\/mudler\/anagent) - Minimalistic, pluggable Golang evloop\/timer handler with dependency-injection.\n* [antch](https:\/\/github.com\/antchfx\/antch) - A fast, powerful and extensible web crawling & scraping framework.\n* [archiver](https:\/\/github.com\/mholt\/archiver) - Library and command for making and extracting .zip and .tar.gz archives.\n* [autoflags](https:\/\/github.com\/artyom\/autoflags) - Go package to automatically define command line flags from struct fields.\n* [avgRating](https:\/\/github.com\/kirillDanshin\/avgRating) - Calculate average score and rating based on Wilson Score Equation.\n* [banner](https:\/\/github.com\/dimiro1\/banner) - Add beautiful banners into your Go applications.\n* [base64Captcha](https:\/\/github.com\/mojocn\/base64Captcha) - Base64captch supports digit, number, alphabet, arithmetic, audio and digit-alphabet captcha.\n* [battery](https:\/\/github.com\/distatus\/battery) - Cross-platform, normalized battery information library.\n* [bitio](https:\/\/github.com\/icza\/bitio) - Highly optimized bit-level Reader and Writer for Go.\n* [browscap_go](https:\/\/github.com\/digitalcrab\/browscap_go) - GoLang Library for [Browser Capabilities Project](http:\/\/browscap.org\/).\n* [captcha](https:\/\/github.com\/steambap\/captcha) - Package captcha provides an easy to use, unopinionated API for captcha generation.\n* [conv](https:\/\/github.com\/cstockton\/go-conv) - Package conv provides fast and intuitive conversions across Go types.\n* [datacounter](https:\/\/github.com\/miolini\/datacounter) - Go counters for readers\/writer\/http.ResponseWriter.\n* [errors](https:\/\/github.com\/pkg\/errors) - Package that provides simple error handling primitives.\n* [ffmt](https:\/\/github.com\/go-ffmt\/ffmt) - Beautify data display for Humans.\n* [ghorg](https:\/\/github.com\/gabrie30\/ghorg) - Clone all repos from a GitHub org into a single directory.\n* [go-chat-bot](https:\/\/github.com\/go-chat-bot\/bot) - IRC, Slack & Telegram bot written in Go.\n* [go-commons-pool](https:\/\/github.com\/jolestar\/go-commons-pool) - Generic object pool for Golang.\n* [go-multierror](https:\/\/github.com\/hashicorp\/go-multierror) - Go (golang) package for representing a list of errors as a single error.\n* [go-openapi](https:\/\/github.com\/go-openapi) - Collection of packages to parse and utilize open-api schemas.\n* [go-resiliency](https:\/\/github.com\/eapache\/go-resiliency) - Resiliency patterns for golang.\n* [go-sarah](https:\/\/github.com\/oklahomer\/go-sarah) - Framework to build bot for desired chat services including LINE, Slack, Gitter and more.\n* [go-unarr](https:\/\/github.com\/gen2brain\/go-unarr) - Decompression library for RAR, TAR, ZIP and 7z archives.\n* [go.uuid](https:\/\/github.com\/satori\/go.uuid) - Implementation of Universally Unique Identifier (UUID). Supported both creation and parsing of UUIDs.\n* [gofakeit](https:\/\/github.com\/brianvoe\/gofakeit) - Random data generator written in go.\n* [goid](https:\/\/github.com\/jakehl\/goid) - Generate and Parse RFC4122 compliant V4 UUIDs.\n* [gommit](https:\/\/github.com\/antham\/gommit) - Analyze git commit messages to ensure they follow defined patterns\n* [gopsutil](https:\/\/github.com\/shirou\/gopsutil) - Cross-platform library for retrieving process and system utilization(CPU, Memory, Disks, etc).\n* [gosh](https:\/\/github.com\/osamingo\/gosh) - Provide Go Statistics Handler, Struct, Measure Method.\n* [gosms](https:\/\/github.com\/haxpax\/gosms) - Your own local SMS gateway in Go that can be used to send SMS.\n* [gountries](https:\/\/github.com\/pariz\/gountries) - Package that exposes country and subdivision data.\n* [hanu](https:\/\/github.com\/sbstjn\/hanu) - Framework for writing Slack bots.\n* [health](https:\/\/github.com\/dimiro1\/health) - Easy to use, extensible health check library.\n* [healthcheck](https:\/\/github.com\/etherlabsio\/healthcheck) - An opinionated and concurrent health-check HTTP handler for RESTful services.\n* [hostutils](https:\/\/github.com\/Wing924\/hostutils) - A golang library for packing and unpacking FQDNs list.\n* [indigo](https:\/\/github.com\/osamingo\/indigo) - Distributed unique ID generator of using Sonyflake and encoded by Base58.\n* [jobs](https:\/\/github.com\/albrow\/jobs) - Persistent and flexible background jobs library.\n* [lk](https:\/\/github.com\/hyperboloide\/lk) - A simple licensing library for golang.\n* [margelet](https:\/\/github.com\/zhulik\/margelet) - Framework for building Telegram bots.\n* [morse](https:\/\/github.com\/alwindoss\/morse) - Library to convert to and from morse code.\n* [pdfgen](https:\/\/github.com\/hyperboloide\/pdfgen) - HTTP service to generate PDF from Json requests.\n* [persian](https:\/\/github.com\/mavihq\/persian) - Some utilities for Persian language in go.\n* [sandid](https:\/\/github.com\/sheng\/sandid) - Every grain of sand on earth has its own ID.\n* [secdl](https:\/\/github.com\/xor-gate\/secdl) - Lighttpd ModSecDownload algorithm ported to go to secure download urls.\n* [shellwords](https:\/\/github.com\/Wing924\/shellwords) - A Golang library to manipulate strings according to the word parsing rules of the UNIX Bourne shell.\n* [shortid](https:\/\/github.com\/teris-io\/shortid) - Distributed generation of super short, unique, non-sequential, URL friendly IDs.\n* [slacker](https:\/\/github.com\/shomali11\/slacker) - Easy to use framework to create Slack bots.\n* [stats](https:\/\/github.com\/go-playground\/stats) - Monitors Go MemStats + System stats such as Memory, Swap and CPU and sends via UDP anywhere you want for logging etc...\n* [strutil](https:\/\/github.com\/ozgio\/strutil) - String utilities\n* [turtle](https:\/\/github.com\/hackebrot\/turtle) - Emojis for Go.\n* [url-shortener](https:\/\/github.com\/pantrif\/url-shortener) - A modern, powerful, and robust URL shortener microservice with mysql support.\n* [uuid](https:\/\/github.com\/agext\/uuid) - Generate, encode, and decode UUIDs v1 with fast or cryptographic-quality random node identifier.\n* [uuid](https:\/\/github.com\/gofrs\/uuid) - Implementation of Universally Unique Identifier (UUID). Supports both creation and parsing of UUIDs. Actively maintained fork of satori uuid.\n* [VarHandler](https:\/\/github.com\/azr\/generators\/tree\/master\/varhandler) - Generate boilerplate http input and ouput handling.\n* [werr](https:\/\/github.com\/txgruppi\/werr) - Error Wrapper creates an wrapper for the error type in Go which captures the File, Line and Stack of where it was called.\n* [wuid](https:\/\/github.com\/edwingeng\/wuid) - An extremely fast unique number generator, 10-135 times faster than UUID.\n* [xkg](https:\/\/github.com\/go-xkg\/xkg) - X Keyboard Grabber.\n* [xstrings](https:\/\/github.com\/huandu\/xstrings) - Collection of useful string functions ported from other languages.\n\n## Natural Language Processing\n\n*Libraries for working with human languages.*\n\n* [getlang](https:\/\/github.com\/rylans\/getlang) - Fast natural language detection package.\n* [go-eco](https:\/\/github.com\/ThePaw\/go-eco) - Similarity, dissimilarity and distance matrices; diversity, equitability and inequality measures; species richness estimators; coenocline models.\n* [go-i18n](https:\/\/github.com\/nicksnyder\/go-i18n\/) - Package and an accompanying tool to work with localized text.\n* [go-mystem](https:\/\/github.com\/dveselov\/mystem) - CGo bindings to Yandex.Mystem - russian morphology analyzer.\n* [go-nlp](https:\/\/github.com\/nuance\/go-nlp) - Utilities for working with discrete probability distributions and other tools useful for doing NLP work.\n* [go-stem](https:\/\/github.com\/agonopol\/go-stem) - Implementation of the porter stemming algorithm.\n* [go-unidecode](https:\/\/github.com\/mozillazg\/go-unidecode) - ASCII transliterations of Unicode text.\n* [go2vec](https:\/\/github.com\/danieldk\/go2vec) - Reader and utility functions for word2vec embeddings.\n* [gojieba](https:\/\/github.com\/yanyiwu\/gojieba) - This is a Go implementation of [jieba](https:\/\/github.com\/fxsjy\/jieba) which a Chinese word splitting algorithm.\n* [golibstemmer](https:\/\/github.com\/rjohnsondev\/golibstemmer) - Go bindings for the snowball libstemmer library including porter 2.\n* [gounidecode](https:\/\/github.com\/fiam\/gounidecode) - Unicode transliterator (also known as unidecode) for Go.\n* [gse](https:\/\/github.com\/go-ego\/gse) - Go efficient text segmentation; support english, chinese, japanese and other.\n* [icu](https:\/\/github.com\/goodsign\/icu) - Cgo binding for icu4c C library detection and conversion functions. Guaranteed compatibility with version 50.1.\n* [libtextcat](https:\/\/github.com\/goodsign\/libtextcat) - Cgo binding for libtextcat C library. Guaranteed compatibility with version 2.2.\n* [MMSEGO](https:\/\/github.com\/awsong\/MMSEGO) - This is a GO implementation of [MMSEG](http:\/\/technology.chtsai.org\/mmseg\/) which a Chinese word splitting algorithm.\n* [nlp](https:\/\/github.com\/Shixzie\/nlp) - Extract values from strings and fill your structs with nlp.\n* [nlp](https:\/\/github.com\/james-bowman\/nlp) - Go Natural Language Processing library supporting LSA (Latent Semantic Analysis).\n* [paicehusk](https:\/\/github.com\/rookii\/paicehusk) - Golang implementation of the Paice\/Husk Stemming Algorithm.\n* [petrovich](https:\/\/github.com\/striker2000\/petrovich) - Petrovich is the library which inflects Russian names to given grammatical case.\n* [porter](https:\/\/github.com\/a2800276\/porter) - This is a fairly straightforward port of Martin Porter's C implementation of the Porter stemming algorithm.\n* [porter2](https:\/\/github.com\/zhenjl\/porter2) - Really fast Porter 2 stemmer.\n* [prose](https:\/\/github.com\/jdkato\/prose) - Library for text processing that supports tokenization, part-of-speech tagging, named-entity extraction, and more.\n* [RAKE.go](https:\/\/github.com\/Obaied\/RAKE.go) - Go port of the Rapid Automatic Keyword Extraction Algorithm (RAKE).\n* [segment](https:\/\/github.com\/blevesearch\/segment) - Go library for performing Unicode Text Segmentation as described in [Unicode Standard Annex #29](http:\/\/www.unicode.org\/reports\/tr29\/)\n* [sentences](https:\/\/github.com\/neurosnap\/sentences) - Sentence tokenizer:  converts text into a list of sentences.\n* [shamoji](https:\/\/github.com\/osamingo\/shamoji) - The shamoji is word filtering package written in Go.\n* [snowball](https:\/\/github.com\/goodsign\/snowball) - Snowball stemmer port (cgo wrapper) for Go. Provides word stem extraction functionality [Snowball native](http:\/\/snowball.tartarus.org\/).\n* [stemmer](https:\/\/github.com\/dchest\/stemmer) - Stemmer packages for Go programming language. Includes English and German stemmers.\n* [textcat](https:\/\/github.com\/pebbe\/textcat) - Go package for n-gram based text categorization, with support for utf-8 and raw text.\n* [whatlanggo](https:\/\/github.com\/abadojack\/whatlanggo) - Natural language detection package for Go. Supports 84 languages and 24 scripts (writing systems e.g. Latin, Cyrillic, etc).\n* [when](https:\/\/github.com\/olebedev\/when) - Natural EN and RU language date\/time parser with pluggable rules.\n\n## Networking\n\n*Libraries for working with various layers of the network.*\n\n* [arp](https:\/\/github.com\/mdlayher\/arp) - Package arp implements the ARP protocol, as described in RFC 826.\n* [buffstreams](https:\/\/github.com\/stabbycutyou\/buffstreams) - Streaming protocolbuffer data over TCP made easy.\n* [canopus](https:\/\/github.com\/zubairhamed\/canopus) - CoAP Client\/Server implementation (RFC 7252).\n* [cidranger](https:\/\/github.com\/yl2chen\/cidranger) - Fast IP to CIDR lookup for Go.\n* [dhcp6](https:\/\/github.com\/mdlayher\/dhcp6) - Package dhcp6 implements a DHCPv6 server, as described in RFC 3315.\n* [dns](https:\/\/github.com\/miekg\/dns) - Go library for working with DNS.\n* [ether](https:\/\/github.com\/songgao\/ether) - Cross-platform Go package for sending and receiving ethernet frames.\n* [ethernet](https:\/\/github.com\/mdlayher\/ethernet) - Package ethernet implements marshaling and unmarshaling of IEEE 802.3 Ethernet II frames and IEEE 802.1Q VLAN tags.\n* [fasthttp](https:\/\/github.com\/valyala\/fasthttp) - Package fasthttp is a fast HTTP implementation for Go, up to 10 times faster than net\/http.\n* [fortio](https:\/\/github.com\/fortio\/fortio) - Load testing library and command line tool, advanced echo server and web UI. Allows to specify a set query-per-second load and record latency histograms and other useful stats and graph them. Tcp, Http, gRPC.\n* [ftp](https:\/\/github.com\/jlaffaye\/ftp) - Package ftp implements a FTP client as described in [RFC 959](http:\/\/tools.ietf.org\/html\/rfc959).\n* [gNxI](https:\/\/github.com\/google\/gnxi) - A collection of tools for Network Management that use the gNMI and gNOI protocols.\n* [go-getter](https:\/\/github.com\/hashicorp\/go-getter) - Go library for downloading files or directories from various sources using a URL.\n* [go-stun](https:\/\/github.com\/ccding\/go-stun) - Go implementation of the STUN client (RFC 3489 and RFC 5389).\n* [gobgp](https:\/\/github.com\/osrg\/gobgp) - BGP implemented in the Go Programming Language.\n* [golibwireshark](https:\/\/github.com\/sunwxg\/golibwireshark) - Package golibwireshark use libwireshark library to decode pcap file and analyse dissection data.\n* [gopacket](https:\/\/github.com\/google\/gopacket) - Go library for packet processing with libpcap bindings.\n* [gopcap](https:\/\/github.com\/akrennmair\/gopcap) - Go wrapper for libpcap.\n* [goshark](https:\/\/github.com\/sunwxg\/goshark) - Package goshark use tshark to decode IP packet and create data struct to analyse packet.\n* [gosnmp](https:\/\/github.com\/soniah\/gosnmp) - Native Go library for performing SNMP actions.\n* [gotcp](https:\/\/github.com\/gansidui\/gotcp) - Go package for quickly writing tcp applications.\n* [grab](https:\/\/github.com\/cavaliercoder\/grab) - Go package for managing file downloads.\n* [graval](https:\/\/github.com\/koofr\/graval) - Experimental FTP server framework.\n* [HTTPLab](https:\/\/github.com\/gchaincl\/httplab) - HTTPLabs let you inspect HTTP requests and forge responses.\n* [jazigo](https:\/\/github.com\/udhos\/jazigo) - Jazigo is a tool written in Go for retrieving configuration for multiple network devices.\n* [kcp-go](https:\/\/github.com\/xtaci\/kcp-go) - KCP - Fast and Reliable ARQ Protocol.\n* [kcptun](https:\/\/github.com\/xtaci\/kcptun) - Extremely simple & fast udp tunnel based on KCP protocol.\n* [lhttp](https:\/\/github.com\/fanux\/lhttp) - Powerful websocket framework, build your IM server more easily.\n* [linkio](https:\/\/github.com\/ian-kent\/linkio) - Network link speed simulation for Reader\/Writer interfaces.\n* [llb](https:\/\/github.com\/kirillDanshin\/llb) - It's a very simple but quick backend for proxy servers. Can be useful for fast redirection to predefined domain with zero memory allocation and fast response.\n* [mdns](https:\/\/github.com\/hashicorp\/mdns) - Simple mDNS (Multicast DNS) client\/server library in Golang.\n* [mqttPaho](https:\/\/eclipse.org\/paho\/clients\/golang\/) - The Paho Go Client provides an MQTT client library for connection to MQTT brokers via TCP, TLS or WebSockets.\n* [NFF-Go](https:\/\/github.com\/intel-go\/nff-go) - Framework for rapid development of performant network functions for cloud and bare-metal (former YANFF).\n* [packet](https:\/\/github.com\/aerogo\/packet) - Send packets over TCP and UDP. It can buffer messages and hot-swap connections if needed.\n* [peerdiscovery](https:\/\/github.com\/schollz\/peerdiscovery) - Pure Go library for cross-platform local peer discovery using UDP multicast\n* [portproxy](https:\/\/github.com\/aybabtme\/portproxy) - Simple TCP proxy which adds CORS support to API's which don't support it.\n* [publicip](https:\/\/github.com\/polera\/publicip) - Package publicip returns your public facing IPv4 address (internet egress).\n* [quic-go](https:\/\/github.com\/lucas-clemente\/quic-go) - An implementation of the QUIC protocol in pure Go.\n* [raw](https:\/\/github.com\/mdlayher\/raw) - Package raw enables reading and writing data at the device driver level for a network interface.\n* [sftp](https:\/\/github.com\/pkg\/sftp) - Package sftp implements the SSH File Transfer Protocol as described in https:\/\/filezilla-project.org\/specs\/draft-ietf-secsh-filexfer-02.txt.\n* [ssh](https:\/\/github.com\/gliderlabs\/ssh) - Higher-level API for building SSH servers (wraps crypto\/ssh).\n* [sslb](https:\/\/github.com\/eduardonunesp\/sslb) - It's a Super Simples Load Balancer, just a little project to achieve some kind of performance.\n* [stun](https:\/\/github.com\/go-rtc\/stun) - Go implementation of RFC 5389 STUN protocol.\n* [tcp_server](https:\/\/github.com\/firstrow\/tcp_server) - Go library for building tcp servers faster.\n* [utp](https:\/\/github.com\/anacrolix\/utp) - Go uTP micro transport protocol implementation.\n* [water](https:\/\/github.com\/songgao\/water) - Simple TUN\/TAP library.\n* [winrm](https:\/\/github.com\/masterzen\/winrm) - Go WinRM client to remotely execute commands on Windows machines.\n* [xtcp](https:\/\/github.com\/xfxdev\/xtcp) - TCP Server Framework with simultaneous full duplex communication,graceful shutdown,custom protocol.\n\n## OpenGL\n\n*Libraries for using OpenGL in Go.*\n\n* [gl](https:\/\/github.com\/go-gl\/gl) - Go bindings for OpenGL (generated via glow).\n* [glfw](https:\/\/github.com\/go-gl\/glfw) - Go bindings for GLFW 3.\n* [goxjs\/gl](https:\/\/github.com\/goxjs\/gl) - Go cross-platform OpenGL bindings (OS X, Linux, Windows, browsers, iOS, Android).\n* [goxjs\/glfw](https:\/\/github.com\/goxjs\/glfw) - Go cross-platform glfw library for creating an OpenGL context and receiving events.\n* [mathgl](https:\/\/github.com\/go-gl\/mathgl) - Pure Go math package specialized for 3D math, with inspiration from GLM.\n\n## ORM\n\n*Libraries that implement Object-Relational Mapping or datamapping techniques.*\n\n* [beego orm](https:\/\/github.com\/astaxie\/beego\/tree\/master\/orm) - Powerful orm framework for go. Support: pq\/mysql\/sqlite3.\n* [go-pg](https:\/\/github.com\/go-pg\/pg) - PostgreSQL ORM with focus on PostgreSQL specific features and performance.\n* [go-queryset](https:\/\/github.com\/jirfag\/go-queryset) - 100% type-safe ORM with code generation and MySQL, PostgreSQL, Sqlite3, SQL Server support based on GORM.\n* [go-sqlbuilder](https:\/\/github.com\/huandu\/go-sqlbuilder) - A flexible and powerful SQL string builder library plus a zero-config ORM.\n* [go-store](https:\/\/github.com\/gosuri\/go-store) - Simple and fast Redis backed key-value store library for Go.\n* [gomodel](https:\/\/github.com\/cosiner\/gomodel) - Lightweight, fast, orm-like library helps interactive with database.\n* [GORM](https:\/\/github.com\/jinzhu\/gorm) - The fantastic ORM library for Golang, aims to be developer friendly.\n* [gorp](https:\/\/github.com\/go-gorp\/gorp) - Go Relational Persistence, ORM-ish library for Go.\n* [grimoire](https:\/\/github.com\/Fs02\/grimoire) - Grimoire is a database access layer and validation for golang. (Support: MySQL, PostgreSQL and SQLite3).\n* [lore](https:\/\/github.com\/abrahambotros\/lore) - Simple and lightweight pseudo-ORM\/pseudo-struct-mapping environment for Go.\n* [Marlow](https:\/\/github.com\/dadleyy\/marlow) - Generated ORM from project structs for compile time safety assurances.\n* [pop\/soda](https:\/\/github.com\/gobuffalo\/pop) - Database migration, creation, ORM, etc... for MySQL, PostgreSQL, and SQLite.\n* [QBS](https:\/\/github.com\/coocood\/qbs) - Stands for Query By Struct. A Go ORM.\n* [reform](https:\/\/github.com\/go-reform\/reform) - Better ORM for Go, based on non-empty interfaces and code generation.\n* [SQLBoiler](https:\/\/github.com\/volatiletech\/sqlboiler) - ORM generator. Generate a featureful and blazing-fast ORM tailored to your database schema.\n* [upper.io\/db](https:\/\/github.com\/upper\/db) - Single interface for interacting with different data sources through the use of adapters that wrap mature database drivers.\n* [Xorm](https:\/\/github.com\/go-xorm\/xorm) - Simple and powerful ORM for Go.\n* [Zoom](https:\/\/github.com\/albrow\/zoom) - Blazing-fast datastore and querying engine built on Redis.\n\n## Package Management\n\n*Official tooling for package management*\n\n* [dep](https:\/\/github.com\/golang\/dep) - Go dependency tool.\n* [vgo](https:\/\/go.googlesource.com\/vgo\/) - Versioned Go.\n\n*Unofficial libraries for package and dependency management.*\n\n* [gigo](https:\/\/github.com\/LyricalSecurity\/gigo) - PIP-like dependency tool for golang, with support for private repositories and hashes.\n* [glide](https:\/\/github.com\/Masterminds\/glide) - Manage your golang vendor and vendored packages with ease. Inspired by tools like Maven, Bundler, and Pip.\n* [godep](https:\/\/github.com\/tools\/godep) - dependency tool for go, godep helps build packages reproducibly by fixing their dependencies.\n* [gom](https:\/\/github.com\/mattn\/gom) - Go Manager - bundle for go.\n* [goop](https:\/\/github.com\/nitrous-io\/goop) - Simple dependency manager for Go (golang), inspired by Bundler.\n* [gop](https:\/\/github.com\/lunny\/gop) - Build and manage your Go applications out of GOPATH\n* [gopm](https:\/\/github.com\/gpmgo\/gopm) - Go Package Manager.\n* [govendor](https:\/\/github.com\/kardianos\/govendor) - Go Package Manager. Go vendor tool that works with the standard vendor file.\n* [gpm](https:\/\/github.com\/pote\/gpm) - Barebones dependency manager for Go.\n* [gvt](https:\/\/github.com\/FiloSottile\/gvt) - `gvt` is a simple vendoring tool made for Go native vendoring (aka GO15VENDOREXPERIMENT), based on gb-vendor.\n* [johnny-deps](https:\/\/github.com\/VividCortex\/johnny-deps) - Minimal dependency version using Git.\n* [nut](https:\/\/github.com\/jingweno\/nut) - Vendor Go dependencies.\n* [VenGO](https:\/\/github.com\/DamnWidget\/VenGO) - create and manage exportable isolated go virtual environments.\n\n## Query Language\n\n* [gojsonq](https:\/\/github.com\/thedevsaddam\/gojsonq) - A simple Go package to Query over JSON Data.\n* [graphql](https:\/\/github.com\/tmc\/graphql) - graphql parser + utilities.\n* [graphql](https:\/\/github.com\/sevki\/graphql) - GraphQL implementation in go.\n* [graphql](https:\/\/github.com\/neelance\/graphql-go) - GraphQL server with a focus on ease of use.\n* [graphql-go](https:\/\/github.com\/graphql-go\/graphql) - Implementation of GraphQL for Go.\n* [jsonql](https:\/\/github.com\/elgs\/jsonql) - JSON query expression library in Golang.\n* [jsonslice](https:\/\/github.com\/bhmj\/jsonslice) - Jsonpath queries with advanced filters.\n* [rql](https:\/\/github.com\/a8m\/rql) - Resource Query Language for REST API.\n\n## Resource Embedding\n\n* [esc](https:\/\/github.com\/mjibson\/esc) - Embeds files into Go programs and provides http.FileSystem interfaces to them.\n* [fileb0x](https:\/\/github.com\/UnnoTed\/fileb0x) - Simple tool to embed files in go with focus on \"customization\" and ease to use.\n* [go-embed](https:\/\/github.com\/pyros2097\/go-embed) - Generates go code to embed resource files into your library or executable.\n* [go-resources](https:\/\/github.com\/omeid\/go-resources) - Unfancy resources embedding with Go.\n* [go.rice](https:\/\/github.com\/GeertJohan\/go.rice) - go.rice is a Go package that makes working with resources such as html,js,css,images and templates very easy.\n* [packr](https:\/\/github.com\/gobuffalo\/packr) - The simple and easy way to embed static files into Go binaries.\n* [statics](https:\/\/github.com\/go-playground\/statics) - Embeds static resources into go files for single binary compilation + works with http.FileSystem + symlinks.\n* [statik](https:\/\/github.com\/rakyll\/statik) - Embeds static files into a Go executable.\n* [templify](https:\/\/github.com\/wlbr\/templify) - Embed external template files into Go code to create single file binaries.\n* [vfsgen](https:\/\/github.com\/shurcooL\/vfsgen) - Generates a vfsdata.go file that statically implements the given virtual filesystem.\n\n## Science and Data Analysis\n\n*Libraries for scientific computing and data analyzing.*\n\n* [blas](https:\/\/github.com\/ziutek\/blas) - Implementation of BLAS (Basic Linear Algebra Subprograms).\n* [chart](https:\/\/github.com\/vdobler\/chart) - Simple Chart Plotting library for Go. Supports many graphs types.\n* [evaler](https:\/\/github.com\/soniah\/evaler) - Simple floating point arithmetic expression evaluator.\n* [ewma](https:\/\/github.com\/VividCortex\/ewma) - Exponentially-weighted moving averages.\n* [geom](https:\/\/github.com\/skelterjohn\/geom) - 2D geometry for golang.\n* [go-dsp](https:\/\/github.com\/mjibson\/go-dsp) - Digital Signal Processing for Go.\n* [go-fn](https:\/\/github.com\/ematvey\/go-fn) - Mathematical functions written in Go language, that are not covered by math pkg.\n* [go-gt](https:\/\/github.com\/ThePaw\/go-gt) - Graph theory algorithms written in \"Go\" language.\n* [go.matrix](https:\/\/github.com\/skelterjohn\/go.matrix) - linear algebra for go (has been stalled).\n* [gocomplex](https:\/\/github.com\/varver\/gocomplex) - Complex number library for the Go programming language.\n* [goent](https:\/\/github.com\/kzahedi\/goent) - GO Implementation of Entropy Measures\n* [gofrac](https:\/\/github.com\/anschelsc\/gofrac) - (goinstallable) fractions library for go with support for basic arithmetic.\n* [gohistogram](https:\/\/github.com\/VividCortex\/gohistogram) - Approximate histograms for data streams.\n* [gonum\/mat64](https:\/\/github.com\/gonum\/matrix) - The general purpose package for matrix computation. Package mat64 provides basic linear algebra operations for float64 matrices.\n* [gonum\/plot](https:\/\/github.com\/gonum\/plot) - gonum\/plot provides an API for building and drawing plots in Go.\n* [goraph](https:\/\/github.com\/gyuho\/goraph) - Pure Go graph theory library(data structure, algorith visualization).\n* [gosl](https:\/\/github.com\/cpmech\/gosl) - Go scientific library for linear algebra, FFT, geometry, NURBS, numerical methods, probabilities, optimisation, differential equations, and more.\n* [gostat](https:\/\/github.com\/ematvey\/gostat) - Statistics library for the go language.\n* [GoStats](https:\/\/github.com\/OGFris\/GoStats) - GoStats is an Open Source GoLang library for math statistics mostly used in Machine Learning domains, it covers most of the Statistical measures functions.\n* [graph](https:\/\/github.com\/yourbasic\/graph) - Library of basic graph algorithms.\n* [ode](https:\/\/github.com\/ChristopherRabotin\/ode) - Ordinary differential equation (ODE) solver which supports extended states and channel-based iteration stop conditions.\n* [orb](https:\/\/github.com\/paulmach\/orb) - 2D geometry types with clipping, GeoJSON and Mapbox Vector Tile support.\n* [pagerank](https:\/\/github.com\/alixaxel\/pagerank) - Weighted PageRank algorithm implemented in Go.\n* [PiHex](https:\/\/github.com\/claygod\/PiHex) - Implementation of the \"Bailey-Borwein-Plouffe\" algorithm for the hexadecimal number Pi.\n* [sparse](https:\/\/github.com\/james-bowman\/sparse) - Go Sparse matrix formats for linear algebra supporting scientific and machine learning applications, compatible with gonum matrix libraries.\n* [stats](https:\/\/github.com\/montanaflynn\/stats) - Statistics package with common functions missing from the Golang standard library.\n* [streamtools](https:\/\/github.com\/nytlabs\/streamtools) - general purpose, graphical tool for dealing with streams of data.\n* [TextRank](https:\/\/github.com\/DavidBelicza\/TextRank) - TextRank implementation in Golang with extendable features (summarization, weighting, phrase extraction) and multithreading (goroutine) support.\n* [vectormath](https:\/\/github.com\/spate\/vectormath) - Vectormath for Go, an adaptation of the scalar C functions from Sony's Vector Math library, as found in the Bullet-2.79 source code (currently inactive).\n\n## Security\n\n*Libraries that are used to help make your application more secure.*\n\n* [acmetool](https:\/\/github.com\/hlandau\/acme) - ACME (Let's Encrypt) client tool with automatic renewal.\n* [acra](https:\/\/github.com\/cossacklabs\/acra) - Network encryption proxy to protect database-based applications from data leaks: strong selective encryption, SQL injections prevention, intrusion detection system.\n* [argon2pw](https:\/\/github.com\/raja\/argon2pw) - Argon2 password hash generation with constant-time password comparison.\n* [autocert](https:\/\/godoc.org\/golang.org\/x\/crypto\/acme\/autocert) - Auto provision Let's Encrypt certificates and start a TLS server.\n* [BadActor](https:\/\/github.com\/jaredfolkins\/badactor) - In-memory, application-driven jailer built in the spirit of fail2ban.\n* [Cameradar](https:\/\/github.com\/Ullaakut\/cameradar) - Tool and library to remotely hack RTSP streams from surveillance cameras.\n* [go-yara](https:\/\/github.com\/hillu\/go-yara) - Go Bindings for [YARA](https:\/\/github.com\/plusvic\/yara), the \"pattern matching swiss knife for malware researchers (and everyone else)\".\n* [goArgonPass](https:\/\/github.com\/dwin\/goArgonPass) - Argon2 password hash and verification designed to be compatible with existing Python and PHP implementations.\n* [goSecretBoxPassword](https:\/\/github.com\/dwin\/goSecretBoxPassword) - A probably paranoid package for securely hashing and encrypting passwords.\n* [lego](https:\/\/github.com\/xenolf\/lego) - Pure Go ACME client library and CLI tool (for use with Let's Encrypt).\n* [memguard](https:\/\/github.com\/awnumar\/memguard) - A pure Go library for handling sensitive values in memory.\n* [nacl](https:\/\/github.com\/kevinburke\/nacl) - Go implementation of the NaCL set of API's.\n* [passlib](https:\/\/github.com\/hlandau\/passlib) - Futureproof password hashing library.\n* [secure](https:\/\/github.com\/unrolled\/secure) - HTTP middleware for Go that facilitates some quick security wins.\n* [simple-scrypt](https:\/\/github.com\/elithrar\/simple-scrypt) - Scrypt package with a simple, obvious API and automatic cost calibration built-in.\n* [ssh-vault](https:\/\/github.com\/ssh-vault\/ssh-vault) - encrypt\/decrypt using ssh keys.\n\n## Serialization\n\n*Libraries and tools for binary serialization.*\n\n* [asn1](https:\/\/github.com\/PromonLogicalis\/asn1) - Asn.1 BER and DER encoding library for golang.\n* [bambam](https:\/\/github.com\/glycerine\/bambam) - generator for Cap'n Proto schemas from go.\n* [colfer](https:\/\/github.com\/pascaldekloe\/colfer) - Code generation for the Colfer binary format.\n* [csvutil](https:\/\/github.com\/jszwec\/csvutil) - High Performance, idiomatic CSV record encoding and decoding to native Go structures.\n* [fwencoder](https:\/\/github.com\/o1egl\/fwencoder) - Fixed width file parser (encoding and decoding library) for Go.\n* [go-capnproto](https:\/\/github.com\/glycerine\/go-capnproto) - Cap'n Proto library and parser for go.\n* [go-codec](https:\/\/github.com\/ugorji\/go) - High Performance, feature-Rich, idiomatic encode, decode and rpc library for msgpack, cbor and json, with runtime-based OR code-generation support.\n* [gogoprotobuf](https:\/\/github.com\/gogo\/protobuf) - Protocol Buffers for Go with Gadgets.\n* [goprotobuf](https:\/\/github.com\/golang\/protobuf) - Go support, in the form of a library and protocol compiler plugin, for Google's protocol buffers.\n* [jsoniter](https:\/\/github.com\/json-iterator\/go) - High-performance 100% compatible drop-in replacement of \"encoding\/json\".\n* [mapstructure](https:\/\/github.com\/mitchellh\/mapstructure) - Go library for decoding generic map values into native Go structures.\n* [php_session_decoder](https:\/\/github.com\/yvasiyarov\/php_session_decoder) - GoLang library for working with PHP session format and PHP Serialize\/Unserialize functions.\n* [structomap](https:\/\/github.com\/tuvistavie\/structomap) - Library to easily and dynamically generate maps from static structures.\n* [structs](https:\/\/github.com\/fatih\/structs) - Library with support for converting structs to maps, struct keys\/values to slices, and more.\n\n## Server Applications\n\n* [algernon](https:\/\/github.com\/xyproto\/algernon) - HTTP\/2 web server with built-in support for Lua, Markdown, GCSS and Amber.\n* [Caddy](https:\/\/github.com\/mholt\/caddy) - Caddy is an alternative, HTTP\/2 web server that's easy to configure and use.\n* [consul](https:\/\/www.consul.io\/) - Consul is a tool for service discovery, monitoring and configuration.\n* [devd](https:\/\/github.com\/cortesi\/devd) - Local webserver for developers.\n* [discovery](https:\/\/github.com\/Bilibili\/discovery) - A registry for resilient mid-tier load balancing and failover.\n* [etcd](https:\/\/github.com\/coreos\/etcd) - Highly-available key value store for shared configuration and service discovery.\n* [Fider](https:\/\/github.com\/getfider\/fider) - Fider is an open platform to collect and organize customer feedback.\n* [Flagr](https:\/\/github.com\/checkr\/flagr) - Flagr is an open-source feature flagging and A\/B testing service.\n* [jackal](https:\/\/github.com\/ortuman\/jackal) - An XMPP server written in Go.\n* [minio](https:\/\/github.com\/minio\/minio) - Minio is a distributed object storage server.\n* [nsq](http:\/\/nsq.io\/) - A realtime distributed messaging platform.\n* [yakvs](https:\/\/git.sci4me.com\/sci4me\/yakvs) - Small, networked, in-memory key-value store.\n\n## Template Engines\n\n*Libraries and tools for templating and lexing.*\n\n* [ace](https:\/\/github.com\/yosssi\/ace) - Ace is an HTML template engine for Go, inspired by Slim and Jade. Ace is a refinement of Gold.\n* [amber](https:\/\/github.com\/eknkc\/amber) - Amber is an elegant templating engine for Go Programming Language It is inspired from HAML and Jade.\n* [damsel](https:\/\/github.com\/dskinner\/damsel) - Markup language featuring html outlining via css-selectors, extensible via pkg html\/template and others.\n* [ego](https:\/\/github.com\/benbjohnson\/ego) - Lightweight templating language that lets you write templates in Go. Templates are translated into Go and compiled.\n* [extemplate](https:\/\/github.com\/dannyvankooten\/extemplate) - Tiny wrapper around html\/template to allow for easy file-based template inheritance.\n* [fasttemplate](https:\/\/github.com\/valyala\/fasttemplate) - Simple and fast template engine. Substitutes template placeholders up to 10x faster than [text\/template](http:\/\/golang.org\/pkg\/text\/template\/).\n* [gofpdf](https:\/\/github.com\/jung-kurt\/gofpdf) - PDF document generator with high level support for text, drawing and images.\n* [hero](https:\/\/github.com\/shiyanhui\/hero) - Hero is a handy, fast and powerful go template engine.\n* [jet](https:\/\/github.com\/CloudyKit\/jet) - Jet template engine.\n* [kasia.go](https:\/\/github.com\/ziutek\/kasia.go) - Templating system for HTML and other text documents - go implementation.\n* [liquid](https:\/\/github.com\/osteele\/liquid) - Go implementation of Shopify Liquid templates.\n* [mustache](https:\/\/github.com\/hoisie\/mustache) - Go implementation of the Mustache template language.\n* [pongo2](https:\/\/github.com\/flosch\/pongo2) - Django-like template-engine for Go.\n* [quicktemplate](https:\/\/github.com\/valyala\/quicktemplate) - Fast, powerful, yet easy to use template engine. Converts templates into Go code and then compiles it.\n* [raymond](https:\/\/github.com\/aymerick\/raymond) - Complete handlebars implementation in Go.\n* [Razor](https:\/\/github.com\/sipin\/gorazor) - Razor view engine for Golang.\n* [Soy](https:\/\/github.com\/robfig\/soy) - Closure templates (aka Soy templates) for Go, following the [official spec](https:\/\/developers.google.com\/closure\/templates\/).\n* [velvet](https:\/\/github.com\/gobuffalo\/velvet) - Complete handlebars implementation in Go.\n\n## Testing\n\n*Libraries for testing codebases and generating test data.*\n\n* Testing Frameworks\n    * [assert](https:\/\/github.com\/go-playground\/assert) - Basic Assertion Library used along side native go testing, with building blocks for custom assertions.\n    * [badio](https:\/\/github.com\/cavaliercoder\/badio) - Extensions to Go's `testing\/iotest` package.\n    * [baloo](https:\/\/github.com\/h2non\/baloo) - Expressive and versatile end-to-end HTTP API testing made easy.\n    * [biff](https:\/\/github.com\/fulldump\/biff) - Bifurcation testing framework, BDD compatible.\n    * [bro](https:\/\/github.com\/marioidival\/bro) - Watch files in directory and run tests for them.\n    * [charlatan](https:\/\/github.com\/percolate\/charlatan) - Tool to generate fake interface implementations for tests.\n    * [cupaloy](https:\/\/github.com\/bradleyjkemp\/cupaloy) - Simple snapshot testing addon for your test framework.\n    * [dbcleaner](https:\/\/github.com\/khaiql\/dbcleaner) - Clean database for testing purpose, inspired by `database_cleaner` in Ruby.\n    * [dsunit](https:\/\/github.com\/viant\/dsunit) - Datastore testing for SQL, NoSQL, structured files.\n    * [endly](https:\/\/github.com\/viant\/endly) - Declarative end to end functional testing.\n    * [frisby](https:\/\/github.com\/verdverm\/frisby) - REST API testing framework.\n    * [ginkgo](http:\/\/onsi.github.io\/ginkgo\/) - BDD Testing Framework for Go.\n    * [go-carpet](https:\/\/github.com\/msoap\/go-carpet) - Tool for viewing test coverage in terminal.\n    * [go-cmp](https:\/\/github.com\/google\/go-cmp) - Package for comparing Go values in tests\n    * [go-mutesting](https:\/\/github.com\/zimmski\/go-mutesting) - Mutation testing for Go source code.\n    * [go-testdeep](https:\/\/github.com\/maxatome\/go-testdeep) - Extremely flexible golang deep comparison, extends the go testing package.\n    * [go-vcr](https:\/\/github.com\/dnaeon\/go-vcr) - Record and replay your HTTP interactions for fast, deterministic and accurate tests.\n    * [goblin](https:\/\/github.com\/franela\/goblin) - Mocha like testing framework fo Go.\n    * [gocheck](http:\/\/labix.org\/gocheck) - More advanced testing framework alternative to gotest.\n    * [GoConvey](https:\/\/github.com\/smartystreets\/goconvey\/) - BDD-style framework with web UI and live reload.\n    * [gocrest](https:\/\/github.com\/corbym\/gocrest) - Composable hamcrest-like matchers for Go assertions.\n    * [godog](https:\/\/github.com\/DATA-DOG\/godog) - Cucumber or Behat like BDD framework for Go.\n    * [gofight](https:\/\/github.com\/appleboy\/gofight) - API Handler Testing for Golang Router framework.\n    * [gogiven](https:\/\/github.com\/corbym\/gogiven) - YATSPEC-like BDD testing framework for Go.\n    * [gomega](http:\/\/onsi.github.io\/gomega\/) - Rspec like matcher\/assertion library.\n    * [GoSpec](https:\/\/github.com\/orfjackal\/gospec) - BDD-style testing framework for the Go programming language.\n    * [gospecify](https:\/\/github.com\/stesla\/gospecify) - This provides a BDD syntax for testing your Go code. It should be familiar to anybody who has used libraries such as rspec.\n    * [gosuite](https:\/\/github.com\/pavlo\/gosuite) - Brings lightweight test suites with setup\/teardown facilities to `testing` by leveraging Go1.7's Subtests.\n    * [Hamcrest](https:\/\/github.com\/rdrdr\/hamcrest) - fluent framework for declarative Matcher objects that, when applied to input values, produce self-describing results.\n    * [httpexpect](https:\/\/github.com\/gavv\/httpexpect) - Concise, declarative, and easy to use end-to-end HTTP and REST API testing.\n    * [restit](https:\/\/github.com\/yookoala\/restit) - Go micro framework to help writing RESTful API integration test.\n    * [testfixtures](https:\/\/github.com\/go-testfixtures\/testfixtures) - A helper for Rails' like test fixtures to test database applications.\n    * [Testify](https:\/\/github.com\/stretchr\/testify) - Sacred extension to the standard go testing package.\n    * [Tt](https:\/\/github.com\/vcaesar\/tt) - Simple and colorful test tools.\n    * [wstest](https:\/\/github.com\/posener\/wstest) - Websocket client for unit-testing a websocket http.Handler.\n\n* Mock\n    * [counterfeiter](https:\/\/github.com\/maxbrunsfeld\/counterfeiter) - Tool for generating self-contained mock objects.\n    * [go-sqlmock](https:\/\/github.com\/DATA-DOG\/go-sqlmock) - Mock SQL driver for testing database interactions.\n    * [go-txdb](https:\/\/github.com\/DATA-DOG\/go-txdb) - Single transaction based database driver mainly for testing purposes.\n    * [gock](https:\/\/github.com\/h2non\/gock) - Versatile HTTP mocking made easy.\n    * [gomock](https:\/\/github.com\/golang\/mock) - Mocking framework for the Go programming language.\n    * [govcr](https:\/\/github.com\/seborama\/govcr) - HTTP mock for Golang: record and replay HTTP interactions for offline testing.\n    * [minimock](https:\/\/github.com\/gojuno\/minimock) - Mock generator for Go interfaces.\n    * [mockhttp](https:\/\/github.com\/tv42\/mockhttp) - Mock object for Go http.ResponseWriter.\n\n* Fuzzing and delta-debugging\/reducing\/shrinking.\n    * [go-fuzz](https:\/\/github.com\/dvyukov\/go-fuzz) - Randomized testing system.\n    * [gofuzz](https:\/\/github.com\/google\/gofuzz) - Library for populating go objects with random values.\n    * [Tavor](https:\/\/github.com\/zimmski\/tavor) - Generic fuzzing and delta-debugging framework.\n\n* Selenium and browser control tools.\n    * [cdp](https:\/\/github.com\/mafredri\/cdp) - Type-safe bindings for the Chrome Debugging Protocol that can be used with browsers or other debug targets that implement it.\n    * [chromedp](https:\/\/github.com\/knq\/chromedp) - a way to drive\/test Chrome, Safari, Edge, Android Webviews, and other browsers supporting the Chrome Debugging Protocol.\n    * [ggr](https:\/\/github.com\/aerokube\/ggr) - a lightweight server that routes and proxies Selenium Wedriver requests to multiple Selenium hubs.\n    * [selenoid](https:\/\/github.com\/aerokube\/selenoid) - alternative Selenium hub server that launches browsers within containers.\n\n## Text Processing\n\n*Libraries for parsing and manipulating texts.*\n\n* Specific Formats\n    * [align](https:\/\/github.com\/Guitarbum722\/align) - A general purpose application that aligns text.\n    * [allot](https:\/\/github.com\/sbstjn\/allot) - Placeholder and wildcard text parsing for CLI tools and bots.\n    * [bbConvert](https:\/\/github.com\/CalebQ42\/bbConvert) - Converts bbCode to HTML that allows you to add support for custom bbCode tags.\n    * [blackfriday](https:\/\/github.com\/russross\/blackfriday) - Markdown processor in Go.\n    * [bluemonday](https:\/\/github.com\/microcosm-cc\/bluemonday) - HTML Sanitizer.\n    * [colly](https:\/\/github.com\/asciimoo\/colly) - Fast and Elegant Scraping Framework for Gophers\n    * [commonregex](https:\/\/github.com\/mingrammer\/commonregex) - A collection of common regular expressions for Go\n    * [dataflowkit](https:\/\/github.com\/slotix\/dataflowkit) - Web scraping Framework to turn websites into structured data.\n    * [doi](https:\/\/github.com\/hscells\/doi) - Document object identifier (doi) parser in Go.\n    * [editorconfig-core-go](https:\/\/github.com\/editorconfig\/editorconfig-core-go) - Editorconfig file parser and manipulator for Go.\n    * [enca](https:\/\/github.com\/endeveit\/enca) - Minimal cgo bindings for [libenca](http:\/\/cihar.com\/software\/enca\/).\n    * [encdec](https:\/\/github.com\/mickep76\/encdec) - Package provides a generic interface to encoders and decodersa.\n    * [genex](https:\/\/github.com\/alixaxel\/genex) - Count and expand Regular Expressions into all matching Strings.\n    * [github_flavored_markdown](https:\/\/godoc.org\/github.com\/shurcooL\/github_flavored_markdown) - GitHub Flavored Markdown renderer (using blackfriday) with fenced code block highlighting, clickable header anchor links.\n    * [go-fixedwidth](https:\/\/github.com\/ianlopshire\/go-fixedwidth) - Fixed-width text formatting (encoder\/decoder with reflection).\n    * [go-humanize](https:\/\/github.com\/dustin\/go-humanize) - Formatters for time, numbers, and memory size to human readable format.\n    * [go-nmea](https:\/\/github.com\/adrianmo\/go-nmea) - NMEA parser library for the Go language.\n    * [go-runewidth](https:\/\/github.com\/mattn\/go-runewidth) - Functions to get fixed width of the character or string.\n    * [go-slugify](https:\/\/github.com\/mozillazg\/go-slugify) - Make pretty slug with multiple languages support.\n    * [go-vcard](https:\/\/github.com\/emersion\/go-vcard) - Parse and format vCard.\n    * [gofeed](https:\/\/github.com\/mmcdole\/gofeed) - Parse RSS and Atom feeds in Go.\n    * [gographviz](https:\/\/github.com\/awalterschulze\/gographviz) - Parses the Graphviz DOT language.\n    * [gommon\/bytes](https:\/\/github.com\/labstack\/gommon\/tree\/master\/bytes) - Format bytes to string.\n    * [gonameparts](https:\/\/github.com\/polera\/gonameparts) - Parses human names into individual name parts.\n    * [goq](https:\/\/github.com\/andrewstuart\/goq) - Declarative unmarshaling of HTML using struct tags with jQuery syntax (uses GoQuery).\n    * [GoQuery](https:\/\/github.com\/PuerkitoBio\/goquery) - GoQuery brings a syntax and a set of features similar to jQuery to the Go language.\n    * [goregen](https:\/\/github.com\/zach-klippenstein\/goregen) - Library for generating random strings from regular expressions.\n    * [gotext](https:\/\/github.com\/leonelquinteros\/gotext) - GNU gettext utilities for Go.\n    * [guesslanguage](https:\/\/github.com\/endeveit\/guesslanguage) - Functions to determine the natural language of a unicode text.\n    * [inject](https:\/\/github.com\/facebookgo\/inject) - Package inject provides a reflect based injector.\n    * [mxj](https:\/\/github.com\/clbanning\/mxj) - Encode \/ decode XML as JSON or map[string]interface{}; extract values with dot-notation paths and wildcards. Replaces x2j and j2x packages.\n    * [sdp](https:\/\/github.com\/gortc\/sdp) - SDP: Session Description Protocol [[RFC 4566](https:\/\/tools.ietf.org\/html\/rfc4566)].\n    * [sh](https:\/\/github.com\/mvdan\/sh) - Shell parser and formatter.\n    * [slug](https:\/\/github.com\/gosimple\/slug) - URL-friendly slugify with multiple languages support.\n    * [Slugify](https:\/\/github.com\/avelino\/slugify) - Go slugify application that handles string.\n    * [syndfeed](https:\/\/github.com\/zhengchun\/syndfeed) - A syndication feed for Atom 1.0 and RSS 2.0.\n    * [toml](https:\/\/github.com\/BurntSushi\/toml) - TOML configuration format (encoder\/decoder with reflection).\n* Utility\n    * [gotabulate](https:\/\/github.com\/bndr\/gotabulate) - Easily pretty-print your tabular data with Go.\n    * [kace](https:\/\/github.com\/codemodus\/kace) - Common case conversions covering common initialisms.\n    * [parseargs-go](https:\/\/github.com\/nproc\/parseargs-go) - string argument parser that understands quotes and backslashes.\n    * [parth](https:\/\/github.com\/codemodus\/parth) - URL path segmentation parsing.\n    * [radix](https:\/\/github.com\/yourbasic\/radix) - fast string sorting algorithm.\n    * [xj2go](https:\/\/github.com\/stackerzzq\/xj2go) - Convert xml or json to go struct.\n    * [xurls](https:\/\/github.com\/mvdan\/xurls) - Extract urls from text.\n\n## Third-party APIs\n\n*Libraries for accessing third party APIs.*\n\n* [amazon-product-advertising-api](https:\/\/github.com\/ngs\/go-amazon-product-advertising-api) - Go Client Library for [Amazon Product Advertising API](https:\/\/affiliate-program.amazon.com\/gp\/advertising\/api\/detail\/main.html).\n* [anaconda](https:\/\/github.com\/ChimeraCoder\/anaconda) - Go client library for the Twitter 1.1 API.\n* [aws-sdk-go](https:\/\/github.com\/aws\/aws-sdk-go) - The official AWS SDK for the Go programming language.\n* [brewerydb](https:\/\/github.com\/naegelejd\/brewerydb) - Go library for accessing the BreweryDB API.\n* [cachet](https:\/\/github.com\/andygrunwald\/cachet) - Go client library for [Cachet (open source status page system)](https:\/\/cachethq.io\/).\n* [circleci](https:\/\/github.com\/jszwedko\/go-circleci) - Go client library for interacting with CircleCI's API.\n* [clarifai](https:\/\/github.com\/samuelcouch\/clarifai) - Go client library for interfacing with the Clarifai API.\n* [codeship-go](https:\/\/github.com\/codeship\/codeship-go) - Go client library for interacting with Codeship's API v2.\n* [discordgo](https:\/\/github.com\/bwmarrin\/discordgo) - Go bindings for the Discord Chat API.\n* [ethrpc](https:\/\/github.com\/onrik\/ethrpc) - Go bindings for Ethereum JSON RPC API.\n* [facebook](https:\/\/github.com\/huandu\/facebook) - Go Library that supports the Facebook Graph API.\n* [fcm](https:\/\/github.com\/maddevsio\/fcm) - Go library for Firebase Cloud Messaging.\n* [gads](https:\/\/github.com\/emiddleton\/gads) - Google Adwords Unofficial API.\n* [gami](https:\/\/github.com\/bit4bit\/gami) - Go library for Asterisk Manager Interface.\n* [gcm](https:\/\/github.com\/Aorioli\/gcm) - Go library for Google Cloud Messaging.\n* [geo-golang](https:\/\/github.com\/codingsince1985\/geo-golang) - Go Library to access [Google Maps](https:\/\/developers.google.com\/maps\/documentation\/geocoding\/intro), [MapQuest](http:\/\/open.mapquestapi.com\/geocoding\/), [Nominatim](https:\/\/developer.mapquest.com\/documentation\/open\/nominatim-search), [OpenCage](http:\/\/geocoder.opencagedata.com\/api.html), [Bing](https:\/\/msdn.microsoft.com\/en-us\/library\/ff701715.aspx), [Mapbox](https:\/\/www.mapbox.com\/developers\/api\/geocoding\/), and [OpenStreetMap](https:\/\/wiki.openstreetmap.org\/wiki\/Nominatim) geocoding \/ reverse geocoding APIs.\n* [github](https:\/\/github.com\/google\/go-github) - Go library for accessing the GitHub REST API v3.\n* [githubql](https:\/\/github.com\/shurcooL\/githubql) - Go library for accessing the GitHub GraphQL API v4.\n* [go-chronos](https:\/\/github.com\/axelspringer\/go-chronos) - Go library for interacting with the [Chronos](https:\/\/mesos.github.io\/chronos\/) Job Scheduler\n* [go-hacknews](https:\/\/github.com\/PaulRosset\/go-hacknews) - Tiny Go client for HackerNews API.\n* [go-imgur](https:\/\/github.com\/koffeinsource\/go-imgur) - Go client library for [imgur](https:\/\/imgur.com)\n* [go-jira](https:\/\/github.com\/andygrunwald\/go-jira) - Go client library for [Atlassian JIRA](https:\/\/www.atlassian.com\/software\/jira)\n* [go-marathon](https:\/\/github.com\/gambol99\/go-marathon) - Go library for interacting with Mesosphere's Marathon PAAS.\n* [go-myanimelist](https:\/\/github.com\/nstratos\/go-myanimelist) - Go client library for accessing the [MyAnimeList API](http:\/\/myanimelist.net\/modules.php?go=api).\n* [go-sptrans](https:\/\/github.com\/sergioaugrod\/go-sptrans) - Go client library for the SPTrans Olho Vivo API.\n* [go-telegraph](https:\/\/github.com\/toby3d\/go-telegraph) - Telegraph publishing platform API client.\n* [go-tgbot](https:\/\/github.com\/olebedev\/go-tgbot) - Pure Golang Telegram Bot API wrapper, generated from swagger file, session-based router and middleware.\n* [go-trending](https:\/\/github.com\/andygrunwald\/go-trending) - Go library for accessing [trending repositories](https:\/\/github.com\/trending) and [developers](https:\/\/github.com\/trending\/developers) at Github.\n* [go-twitch](https:\/\/github.com\/knspriggs\/go-twitch) - Go client for interacting with the Twitch v3 API.\n* [go-twitter](https:\/\/github.com\/dghubble\/go-twitter) - Go client library for the Twitter v1.1 APIs.\n* [go-unsplash](https:\/\/github.com\/hbagdi\/go-unsplash) - Go client library for the [Unsplash.com](https:\/\/unsplash.com) API.\n* [go-xkcd](https:\/\/github.com\/nishanths\/go-xkcd) - Go client for the xkcd API.\n* [goamz](https:\/\/github.com\/mitchellh\/goamz) - Popular fork of [goamz](https:\/\/launchpad.net\/goamz) which adds some missing API calls to certain packages.\n* [golyrics](https:\/\/github.com\/mamal72\/golyrics) - Golyrics is a Go library to fetch music lyrics data from the Wikia website.\n* [GoMusicBrainz](https:\/\/github.com\/michiwend\/gomusicbrainz) - Go MusicBrainz WS2 client library.\n* [google](https:\/\/github.com\/google\/google-api-go-client) - Auto-generated Google APIs for Go.\n* [google-analytics](https:\/\/github.com\/chonthu\/go-google-analytics) - Simple wrapper for easy google analytics reporting.\n* [google-cloud](https:\/\/github.com\/GoogleCloudPlatform\/gcloud-golang) - Google Cloud APIs Go Client Library.\n* [google-email-audit-api](https:\/\/github.com\/ngs\/go-google-email-audit-api) - Go client library for [Google G Suite Email Audit API](https:\/\/developers.google.com\/admin-sdk\/email-audit\/).\n* [gostorm](https:\/\/github.com\/jsgilmore\/gostorm) - GoStorm is a Go library that implements the communications protocol required to write Storm spouts and Bolts in Go that communicate with the Storm shells.\n* [govkbot](https:\/\/github.com\/nikepan\/govkbot) - Simple Go [VK](https:\/\/vk.com) bot library.\n* [hipchat](https:\/\/github.com\/andybons\/hipchat) - This project implements a golang client library for the Hipchat API.\n* [hipchat (xmpp)](https:\/\/github.com\/daneharrigan\/hipchat) - A golang package to communicate with HipChat over XMPP.\n* [igdb](https:\/\/github.com\/Henry-Sarabia\/igdb) - Go client for the [Internet Game Database API](https:\/\/api.igdb.com\/).\n* [Medium](https:\/\/github.com\/Medium\/medium-sdk-go) - Golang SDK for Medium's OAuth2 API.\n* [megos](https:\/\/github.com\/andygrunwald\/megos) - Client library for accessing an [Apache Mesos](http:\/\/mesos.apache.org\/) cluster.\n* [micha](https:\/\/github.com\/onrik\/micha) - Go Library for Telegram bot api.\n* [minio-go](https:\/\/github.com\/minio\/minio-go) - Minio Go Library for Amazon S3 compatible cloud storage.\n* [mixpanel](https:\/\/github.com\/dukex\/mixpanel) - Mixpanel is a library for tracking events and sending Mixpanel profile updates to Mixpanel from your go applications.\n* [patreon-go](https:\/\/github.com\/mxpv\/patreon-go) - Go library for Patreon API.\n* [paypal](https:\/\/github.com\/logpacker\/paypalsdk) - Wrapper for PayPal payment API.\n* [playlyfe](https:\/\/github.com\/playlyfe\/playlyfe-go-sdk) - The Playlyfe Rest API Go SDK.\n* [pushover](https:\/\/github.com\/gregdel\/pushover) - Go wrapper for the Pushover API.\n* [rrdaclient](https:\/\/github.com\/Omie\/rrdaclient) - Go Library to access statdns.com API, which is in turn RRDA API. DNS Queries over HTTP.\n* [shopify](https:\/\/github.com\/rapito\/go-shopify) - Go Library to make CRUD request to the Shopify API.\n* [slack](https:\/\/github.com\/nlopes\/slack) - Slack API in Go.\n* [smite](https:\/\/github.com\/sergiotapia\/smitego) - Go package to wraps access to the Smite game API.\n* [spotify](https:\/\/github.com\/rapito\/go-spotify) - Go Library to access Spotify WEB API.\n* [steam](https:\/\/github.com\/sostronk\/go-steam) - Go Library to interact with Steam game servers.\n* [stripe](https:\/\/github.com\/stripe\/stripe-go) - Go client for the Stripe API.\n* [tbot](https:\/\/github.com\/yanzay\/tbot) - Telegram bot server with API similar to net\/http.\n* [telebot](https:\/\/github.com\/tucnak\/telebot) - Telegram bot framework written in Go.\n* [telegram-bot-api](https:\/\/github.com\/Syfaro\/telegram-bot-api) - Simple and clean Telegram bot client.\n* [textbelt](https:\/\/github.com\/dietsche\/textbelt) - Go client for the textbelt.com txt messaging API.\n* [TheMovieDb](https:\/\/github.com\/jbrodriguez\/go-tmdb) - Simple golang package to communicate with [themoviedb.org](https:\/\/themoviedb.org).\n* [translate](https:\/\/github.com\/poorny\/translate) - Go online translation package.\n* [Trello](https:\/\/github.com\/adlio\/trello) - Go wrapper for the Trello API.\n* [tumblr](https:\/\/github.com\/mattcunningham\/gumblr) - Go wrapper for the Tumblr v2 API.\n* [uptimerobot](https:\/\/github.com\/bitfield\/uptimerobot) - Go wrapper and command-line client for the Uptime Robot v2 API.\n* [webhooks](https:\/\/github.com\/go-playground\/webhooks) - Webhook receiver for GitHub and Bitbucket.\n* [zooz](https:\/\/github.com\/gojuno\/go-zooz) - Go client for the Zooz API.\n\n## Utilities\n\n*General utilities and tools to make your life easier.*\n\n* [abutil](https:\/\/github.com\/bahlo\/abutil) - Collection of often-used Golang helpers.\n* [apm](https:\/\/github.com\/topfreegames\/apm) - Process manager for Golang applications with an HTTP API.\n* [backscanner](https:\/\/github.com\/icza\/backscanner) - A scanner similar to bufio.Scanner, but it reads and returns lines in reverse order, starting at a given position and going backward.\n* [boilr](https:\/\/github.com\/tmrts\/boilr) - Blazingly fast CLI tool for creating projects from boilerplate templates.\n* [chyle](https:\/\/github.com\/antham\/chyle) - Changelog generator using a git repository with multiple configuration possibilities.\n* [circuit](https:\/\/github.com\/cep21\/circuit) - An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.\n* [circuitbreaker](https:\/\/github.com\/rubyist\/circuitbreaker) - Circuit Breakers in Go.\n* [clockwerk](http:\/\/github.com\/onatm\/clockwerk) - Go package to schedule periodic jobs using a simple, fluent syntax.\n* [clockwork](https:\/\/github.com\/whiteShtef\/clockwork) - Simple and intuitive job scheduling library in Go.\n* [command](https:\/\/github.com\/txgruppi\/command) - Command pattern for Go with thread safe serial and parallel dispatcher.\n* [coop](https:\/\/github.com\/rakyll\/coop) - Cheat sheet for some of the common concurrent flows in Go.\n* [copy-pasta](https:\/\/github.com\/jutkko\/copy-pasta) - Universal multi-workstation clipboard that uses S3 like backend for the storage.\n* [ctop](https:\/\/github.com\/bcicen\/ctop) - [Top-like](http:\/\/ctop.sh) interface (e.g. htop) for container metrics.\n* [Death](https:\/\/github.com\/vrecan\/death) - Managing go application shutdown with signals.\n* [Deepcopier](https:\/\/github.com\/ulule\/deepcopier) - Simple struct copying for Go.\n* [delve](https:\/\/github.com\/derekparker\/delve) - Go debugger.\n* [dlog](https:\/\/github.com\/kirillDanshin\/dlog) - Compile-time controlled logger to make your release smaller without removing debug calls.\n* [ergo](https:\/\/github.com\/cristianoliveira\/ergo) - The management of multiple local services running over different ports made easy.\n* [evaluator](https:\/\/github.com\/nullne\/evaluator) - Evaluate an expression dynamicly based on s-expression. It's simple and easy to extend.\n* [excelize](https:\/\/github.com\/360EntSecGroup-Skylar\/excelize) - Golang library for reading and writing Microsoft Excel™ (XLSX) files.\n* [fastlz](https:\/\/github.com\/digitalcrab\/fastlz) - Wrap over [FastLz](http:\/\/fastlz.org\/) (free, open-source, portable real-time compression library) for GoLang.\n* [filetype](https:\/\/github.com\/h2non\/filetype) - Small package to infer the file type checking the magic numbers signature.\n* [filler](https:\/\/github.com\/yaronsumel\/filler) - small utility to fill structs using \"fill\" tag.\n* [fpGo](https:\/\/github.com\/TeaEntityLab\/fpGo) - Monad, Functional Programming features for Golang\n* [fzf](https:\/\/github.com\/junegunn\/fzf) - Command-line fuzzy finder written in Go.\n* [gaper](https:\/\/github.com\/maxcnunes\/gaper) - Builds and restarts a Go project when it crashes or some watched file changes.\n* [generate](https:\/\/github.com\/go-playground\/generate) - runs go generate recursively on a specified path or environment variable and can filter by regex.\n* [gentleman](https:\/\/github.com\/h2non\/gentleman) - Full-featured plugin-driven HTTP client library.\n* [git-time-metric](https:\/\/github.com\/git-time-metric\/gtm) - Simple, seamless, lightweight time tracking for Git.\n* [GJSON](https:\/\/github.com\/tidwall\/gjson) - Get a JSON value with one line of code.\n* [go-astitodo](https:\/\/github.com\/asticode\/go-astitodo) - Parse TODOs in your GO code.\n* [go-bind-plugin](https:\/\/github.com\/wendigo\/go-bind-plugin) - go:generate tool for wrapping symbols exported by golang plugins (1.8 only).\n* [go-cron](https:\/\/github.com\/rk\/go-cron) - Simple Cron library for go that can execute closures or functions at varying intervals, from once a second to once a year on a specific date and time. Primarily for web applications and long running daemons.\n* [go-dry](https:\/\/github.com\/ungerik\/go-dry) - DRY (don't repeat yourself) package for Go.\n* [go-excel](https:\/\/github.com\/szyhf\/go-excel) - A simple and light reader to read a relate-db-like excel as a table.\n* [go-funk](https:\/\/github.com\/thoas\/go-funk) - Modern Go utility library which provides helpers (map, find, contains, filter, chunk, reverse, ...).\n* [go-health](https:\/\/github.com\/Talento90\/go-health) - Health package simplifies the way you add health check to your services.\n* [go-httpheader](https:\/\/github.com\/mozillazg\/go-httpheader) - Go library for encoding structs into Header fields.\n* [go-rate](https:\/\/github.com\/beefsack\/go-rate) - Timed rate limiter for Go.\n* [go-respond](https:\/\/github.com\/nicklaw5\/go-respond) - Go package for handling common HTTP JSON responses.\n* [go-sitemap-generator](https:\/\/github.com\/ikeikeikeike\/go-sitemap-generator) - XML Sitemap generator written in Go.\n* [go-torch](https:\/\/github.com\/uber\/go-torch) - Stochastic flame graph profiler for Go programs.\n* [go-trigger](https:\/\/github.com\/sadlil\/go-trigger) - Go-lang global event triggerer, Register Events with an id and trigger the event from anywhere from your project.\n* [go-underscore](https:\/\/github.com\/tobyhede\/go-underscore) - Useful collection of helpfully functional Go collection utilities.\n* [goback](https:\/\/github.com\/carlescere\/goback) - Go simple exponential backoff package.\n* [godaemon](https:\/\/github.com\/VividCortex\/godaemon) - Utility to write daemons.\n* [godropbox](https:\/\/github.com\/dropbox\/godropbox) - Common libraries for writing Go services\/applications from Dropbox.\n* [gohper](https:\/\/github.com\/cosiner\/gohper) - Various tools\/modules help for development.\n* [gojq](https:\/\/github.com\/elgs\/gojq) - JSON query in Golang.\n* [gojson](https:\/\/github.com\/ChimeraCoder\/gojson) - Automatically generate Go (golang) struct definitions from example JSON.\n* [golarm](https:\/\/github.com\/msempere\/golarm) - Fire alarms with system events.\n* [golog](https:\/\/github.com\/mlimaloureiro\/golog) - Easy and lightweight CLI tool to time track your tasks.\n* [gopencils](https:\/\/github.com\/bndr\/gopencils) - Small and simple package to easily consume REST APIs.\n* [goplaceholder](https:\/\/github.com\/michiwend\/goplaceholder) - a small golang lib to generate placeholder images.\n* [goreleaser](https:\/\/github.com\/goreleaser\/goreleaser) - Deliver Go binaries as fast and easily as possible.\n* [goreporter](https:\/\/github.com\/wgliang\/goreporter) - Golang tool that does static analysis, unit testing, code review and generate code quality report.\n* [goreq](https:\/\/github.com\/franela\/goreq) - Minimal and simple request library for Go language.\n* [goreq](https:\/\/github.com\/smallnest\/goreq) - Enhanced simplified HTTP client based on gorequest.\n* [gorequest](https:\/\/github.com\/parnurzeal\/gorequest) - Simplified HTTP client with rich features for Go.\n* [goseaweedfs](https:\/\/github.com\/linxGnu\/goseaweedfs) - SeaweedFS client library with almost full features.\n* [gotenv](https:\/\/github.com\/subosito\/gotenv) - Load environment variables from `.env` or any `io.Reader` in Go.\n* [goxlsxwriter](https:\/\/github.com\/fterrag\/goxlsxwriter) - Golang bindings for libxlsxwriter for writing XLSX (Microsoft Excel) files.\n* [gpath](https:\/\/github.com\/tenntenn\/gpath) - Library to simplify access struct fields with Go's expression in reflection.\n* [grequests](https:\/\/github.com\/levigross\/grequests) - Elegant and simple `net\/http` wrapper that follows Python's requests library.\n* [gron](https:\/\/github.com\/roylee0704\/gron) - Define time-based tasks using a simple Go API and Gron’s scheduler will run them accordingly.\n* [gubrak](https:\/\/gubrak.github.io\/) - Golang utility library with syntactic sugar. It's like lodash, but for golang.\n* [htcat](https:\/\/github.com\/htcat\/htcat) - Parallel and Pipelined HTTP GET Utility.\n* [httpcontrol](https:\/\/github.com\/facebookgo\/httpcontrol) - Package httpcontrol allows for HTTP transport level control around timeouts and retries.\n* [hub](https:\/\/github.com\/github\/hub) - wrap git commands with additional functionality to interact with github from the terminal.\n* [hystrix-go](https:\/\/github.com\/afex\/hystrix-go) - Implements Hystrix patterns of programmer-defined fallbacks aka circuit breaker.\n* [immortal](https:\/\/github.com\/immortal\/immortal) - \\*nix cross-platform (OS agnostic) supervisor.\n* [intrinsic](https:\/\/github.com\/mengzhuo\/intrinsic) - Use x86 SIMD without writing any assembly code.\n* [JobRunner](https:\/\/github.com\/bamzi\/jobrunner) - Smart and featureful cron job scheduler with job queuing and live monitoring built in.\n* [jsonapi-errors](https:\/\/github.com\/AmuzaTkts\/jsonapi-errors) - Go bindings based on the JSON API errors reference.\n* [jsonf](https:\/\/github.com\/miolini\/jsonf) - Console tool for highlighted formatting and struct query fetching JSON.\n* [jsongo](https:\/\/github.com\/ricardolonga\/jsongo) - Fluent API to make it easier to create Json objects.\n* [jsonhal](https:\/\/github.com\/RichardKnop\/jsonhal) - Simple Go package to make custom structs marshal into HAL compatible JSON responses.\n* [kazaam](https:\/\/github.com\/Qntfy\/kazaam) - API for arbitrary transformation of JSON documents.\n* [lrserver](https:\/\/github.com\/jaschaephraim\/lrserver) - LiveReload server for Go.\n* [mc](https:\/\/github.com\/minio\/mc) - Minio Client provides minimal tools to work with Amazon S3 compatible cloud storage and filesystems.\n* [mergo](https:\/\/github.com\/imdario\/mergo) - Helper to merge structs and maps in Golang. Useful for configuration default values, avoiding messy if-statements.\n* [minify](https:\/\/github.com\/tdewolff\/minify) - Fast minifiers for HTML, CSS, JS, XML, JSON and SVG file formats.\n* [minquery](https:\/\/github.com\/icza\/minquery) - MongoDB \/ mgo.v2 query that supports efficient pagination (cursors to continue listing documents where we left off).\n* [mmake](https:\/\/github.com\/tj\/mmake) - Modern Make.\n* [moldova](https:\/\/github.com\/StabbyCutyou\/moldova) - Utility for generating random data based on an input template.\n* [mp](https:\/\/github.com\/sanbornm\/mp) - Simple cli email parser. It currently takes stdin and outputs JSON.\n* [mssqlx](https:\/\/github.com\/linxGnu\/mssqlx) - Database client library, proxy for any master slave, master master structures. Lightweight and auto balancing in mind.\n* [multitick](https:\/\/github.com\/VividCortex\/multitick) - Multiplexor for aligned tickers.\n* [myhttp](https:\/\/github.com\/inancgumus\/myhttp) - Simple API to make HTTP GET requests with timeout support.\n* [netbug](https:\/\/github.com\/e-dard\/netbug) - Easy remote profiling of your services.\n* [okrun](https:\/\/github.com\/xta\/okrun) - go run error steamroller.\n* [onecache](https:\/\/github.com\/adelowo\/onecache) - Caching library with support for multiple backend stores (Redis, Memcached, filesystem etc).\n* [panicparse](https:\/\/github.com\/maruel\/panicparse) - Groups similar goroutines and colorizes stack dump.\n* [peco](https:\/\/github.com\/peco\/peco) - Simplistic interactive filtering tool.\n* [pester](https:\/\/github.com\/sethgrid\/pester) - Go HTTP client calls with retries, backoff, and concurrency.\n* [pm](https:\/\/github.com\/VividCortex\/pm) - Process (i.e. goroutine) manager with an HTTP API.\n* [profile](https:\/\/github.com\/pkg\/profile) - Simple profiling support package for Go.\n* [rclient](https:\/\/github.com\/zpatrick\/rclient) - Readable, flexible, simple-to-use client for REST APIs.\n* [realize](https:\/\/github.com\/tockins\/realize) - Go build system with file watchers and live reload. Run, build and watch file changes with custom paths.\n* [repeat](https:\/\/github.com\/ssgreg\/repeat) - Go implementation of different backoff strategies useful for retrying operations and heartbeating.\n* [request](https:\/\/github.com\/mozillazg\/request) - Go HTTP Requests for Humans™.\n* [rerate](https:\/\/github.com\/abo\/rerate) - Redis-based rate counter and rate limiter for Go.\n* [rerun](https:\/\/github.com\/ivpusic\/rerun) - Recompiling and rerunning go apps when source changes.\n* [resty](https:\/\/github.com\/go-resty\/resty) - Simple HTTP and REST client for Go inspired by Ruby rest-client.\n* [retry](https:\/\/github.com\/kamilsk\/retry) - Functional mechanism based on context to perform actions repetitively until successful.\n* [retry](https:\/\/github.com\/percolate\/retry) - A simple but highly configurable retry package for Go.\n* [retry](https:\/\/github.com\/thedevsaddam\/retry) - Simple and easy retry mechanism package for Go.\n* [retry](https:\/\/github.com\/shafreeck\/retry) - A pretty simple library to ensure your work to be done.\n* [retry-go](https:\/\/github.com\/rafaeljesus\/retry-go) - Retrying made simple and easy for golang.\n* [robustly](https:\/\/github.com\/VividCortex\/robustly) - Runs functions resiliently, catching and restarting panics.\n* [rq](https:\/\/github.com\/ddo\/rq) - A nicer interface for golang stdlib HTTP client.\n* [scheduler](https:\/\/github.com\/carlescere\/scheduler) - Cronjobs scheduling made easy.\n* [sling](https:\/\/github.com\/dghubble\/sling) - Go HTTP requests builder for API clients.\n* [spinner](https:\/\/github.com\/briandowns\/spinner) - Go package to easily provide a terminal spinner with options.\n* [sprbox](https:\/\/github.com\/oblq\/sprbox) - Build-environment aware toolbox factory and agnostic config parser (YAML, TOML, JSON and Environment vars).\n* [sqlx](https:\/\/github.com\/jmoiron\/sqlx) - provides a set of extensions on top of the excellent built-in database\/sql package.\n* [Storm](https:\/\/github.com\/asdine\/storm) - Simple and powerful toolkit for BoltDB.\n* [structs](https:\/\/github.com\/PumpkinSeed\/structs) - Implement simple functions to manipulate structs.\n* [Task](https:\/\/github.com\/go-task\/task) - simple \"Make\" alternative.\n* [toolbox](https:\/\/github.com\/viant\/toolbox) - Slice, map, multimap, struct, function, data conversion utilities. Service router, macro evaluator, tokenizer.\n* [ugo](https:\/\/github.com\/alxrm\/ugo) - ugo is slice toolbox with concise syntax for Go.\n* [UNIS](https:\/\/github.com\/esemplastic\/unis) - Common Architecture™ for String Utilities in Go.\n* [usql](https:\/\/github.com\/knq\/usql) - usql is a universal command-line interface for SQL databases.\n* [util](https:\/\/github.com\/shomali11\/util) - Collection of useful utility functions. (strings, concurrency, manipulations, ...).\n* [wuzz](https:\/\/github.com\/asciimoo\/wuzz) - Interactive cli tool for HTTP inspection.\n* [xferspdy](https:\/\/github.com\/monmohan\/xferspdy) - Xferspdy provides binary diff and patch library in golang.\n* [xlsx](https:\/\/github.com\/tealeg\/xlsx) - Library to simplify reading the XML format used by recent version of Microsoft Excel in Go programs.\n* [xlsx](https:\/\/github.com\/plandem\/xlsx) - Fast and safe way to read\/update your existing Microsoft Excel files in Go programs.\n\n## Validation\n\n*Libraries for validation.*\n\n* [govalidator](https:\/\/github.com\/asaskevich\/govalidator) - Validators and sanitizers for strings, numerics, slices and structs.\n* [govalidator](https:\/\/github.com\/thedevsaddam\/govalidator) - Validate Golang request data with simple rules. Highly inspired by Laravel's request validation.\n* [ozzo-validation](https:\/\/github.com\/go-ozzo\/ozzo-validation) - Supports validation of various data types (structs, strings, maps, slices, etc.) with configurable and extensible validation rules specified in usual code constructs instead of struct tags.\n* [validate](https:\/\/github.com\/markbates\/validate) - This package provides a framework for writing validations for Go applications.\n* [validator](https:\/\/github.com\/go-playground\/validator) - Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving.\n\n## Version Control\n\n*Libraries for version control.*\n\n* [gh](https:\/\/github.com\/rjeczalik\/gh) - Scriptable server and net\/http middleware for GitHub Webhooks.\n* [git2go](https:\/\/github.com\/libgit2\/git2go) - Go bindings for libgit2.\n* [go-vcs](https:\/\/github.com\/sourcegraph\/go-vcs) - manipulate and inspect VCS repositories in Go.\n* [hgo](https:\/\/github.com\/beyang\/hgo) - Hgo is a collection of Go packages providing read-access to local Mercurial repositories.\n\n## Video\n\n*Libraries for manipulating video.*\n\n* [gmf](https:\/\/github.com\/3d0c\/gmf) - Go bindings for FFmpeg av\\* libraries.\n* [go-astisub](https:\/\/github.com\/asticode\/go-astisub) - Manipulate subtitles in GO (.srt, .stl, .ttml, .webvtt, .ssa\/.ass, teletext, .smi, etc.).\n* [go-astits](https:\/\/github.com\/asticode\/go-astits) - Parse and demux MPEG Transport Streams (.ts) natively in GO.\n* [goav](https:\/\/github.com\/giorgisio\/goav) - Comphrensive Go bindings for FFmpeg.\n* [gst](https:\/\/github.com\/ziutek\/gst) - Go bindings for GStreamer.\n* [libgosubs](https:\/\/github.com\/wargarblgarbl\/libgosubs) - Subtitle format support for go. Supports .srt, .ttml, and .ass.\n* [v4l](https:\/\/github.com\/korandiz\/v4l) - Video capture library for Linux, written in Go.\n\n## Web Frameworks\n\n*Full stack web frameworks.*\n\n* [aah](https:\/\/aahframework.org) - Scalable, performant, rapid development Web framework for Go.\n* [Aero](https:\/\/github.com\/aerogo\/aero) - High-performance web framework for Go, reaches top scores in Lighthouse.\n* [Air](https:\/\/github.com\/sheng\/air) - Ideal RESTful web framework for Go.\n* [Banjo](https:\/\/github.com\/nsheremet\/banjo) - Very simple and fast web framework for Go.\n* [Beego](https:\/\/github.com\/astaxie\/beego) - beego is an open-source, high-performance web framework for the Go programming language.\n* [Buffalo](http:\/\/gobuffalo.io) - Bringing the productivity of Rails to Go!\n* [Echo](https:\/\/github.com\/labstack\/echo) - High performance, minimalist Go web framework.\n* [Fireball](https:\/\/github.com\/zpatrick\/fireball) - More \"natural\" feeling web framework.\n* [Florest](https:\/\/github.com\/jabong\/florest-core) - High-performance workflow based REST API framework.\n* [Gem](https:\/\/github.com\/go-gem\/gem) - Simple and fast web framework, friendly to REST API.\n* [Gin](https:\/\/github.com\/gin-gonic\/gin) - Gin is a web framework written in Go! It features a martini-like API with much better performance, up to 40 times faster. If you need performance and good productivity.\n* [Gizmo](https:\/\/github.com\/NYTimes\/gizmo) - Microservice toolkit used by the New York Times.\n* [go-json-rest](https:\/\/github.com\/ant0ine\/go-json-rest) - Quick and easy way to setup a RESTful JSON API.\n* [go-relax](https:\/\/github.com\/codehack\/go-relax) - Framework of pluggable components to build RESTful API's.\n* [go-rest](https:\/\/github.com\/ungerik\/go-rest) - Small and evil REST framework for Go.\n* [goa](https:\/\/github.com\/raphael\/goa) - Framework for developing microservices based on the design of Ruby's Praxis.\n* [Golax](https:\/\/github.com\/fulldump\/golax) - A non Sinatra fast HTTP framework with support for Google custom methods, deep interceptors, recursion and more.\n* [Golf](https:\/\/github.com\/dinever\/golf) - Golf is a fast, simple and lightweight micro-web framework for Go. It comes with powerful features and has no dependencies other than the Go Standard Library.\n* [Gondola](https:\/\/github.com\/rainycape\/gondola) - The web framework for writing faster sites, faster.\n* [gongular](https:\/\/github.com\/mustafaakin\/gongular) - Fast Go web framework with input mapping\/validation and (DI) Dependency Injection.\n* [Macaron](https:\/\/github.com\/go-macaron\/macaron) - Macaron is a high productive and modular design web framework in Go.\n* [mango](https:\/\/github.com\/paulbellamy\/mango) - Mango is a modular web-application framework for Go, inspired by Rack, and PEP333.\n* [Microservice](https:\/\/github.com\/claygod\/microservice) - The framework for the creation of microservices, written in Golang.\n* [neo](https:\/\/github.com\/ivpusic\/neo) - Neo is minimal and fast Go Web Framework with extremely simple API.\n* [Resoursea](https:\/\/github.com\/resoursea\/api) - REST framework for quickly writing resource based services.\n* [REST Layer](http:\/\/rest-layer.io) - Framework to build REST\/GraphQL API on top of databases with mostly configuration over code.\n* [Revel](https:\/\/github.com\/revel\/revel) - High-productivity web framework for the Go language.\n* [rex](https:\/\/github.com\/goanywhere\/rex) - Rex is a library for modular development built upon gorilla\/mux, fully compatible with `net\/http`.\n* [sawsij](https:\/\/github.com\/jaybill\/sawsij) - lightweight, open-source web framework for building high-performance, data-driven web applications.\n* [tango](https:\/\/github.com\/lunny\/tango) - Micro & pluggable web framework for Go.\n* [tigertonic](https:\/\/github.com\/rcrowley\/go-tigertonic) - Go framework for building JSON web services inspired by Dropwizard.\n* [traffic](https:\/\/github.com\/pilu\/traffic) - Sinatra inspired regexp\/pattern mux and web framework for Go.\n* [utron](https:\/\/github.com\/gernest\/utron) - Lightweight MVC framework for Go(Golang).\n* [violetear](https:\/\/github.com\/nbari\/violetear) - Go HTTP router.\n* [WebGo](https:\/\/github.com\/bnkamalesh\/webgo) - A micro-framework to build web apps; with handler chaining, middleware and context injection. With standard library compliant HTTP handlers(i.e. http.HandlerFunc).\n* [YARF](https:\/\/github.com\/yarf-framework\/yarf) - Fast micro-framework designed to build REST APIs and web services in a fast and simple way.\n* [Zerver](https:\/\/github.com\/cosiner\/zerver) - Zerver is an expressive, modular, feature completed RESTful framework.\n\n### Middlewares\n\n#### Actual middlewares\n\n* [client-timing](https:\/\/github.com\/posener\/client-timing) - An HTTP client for Server-Timing header.\n* [CORS](https:\/\/github.com\/rs\/cors) - Easily add CORS capabilities to your API.\n* [formjson](https:\/\/github.com\/rs\/formjson) - Transparently handle JSON input as a standard form POST.\n* [go-server-timing](https:\/\/github.com\/mitchellh\/go-server-timing) - Add\/parse Server-Timing header.\n* [Limiter](https:\/\/github.com\/ulule\/limiter) - Dead simple rate limit middleware for Go.\n* [Tollbooth](https:\/\/github.com\/didip\/tollbooth) - Rate limit HTTP request handler.\n* [XFF](https:\/\/github.com\/sebest\/xff) - Handle `X-Forwarded-For` header and friends.\n\n#### Libraries for creating HTTP middlewares\n\n* [alice](https:\/\/github.com\/justinas\/alice) - Painless middleware chaining for Go.\n* [catena](https:\/\/github.com\/codemodus\/catena) - http.Handler wrapper catenation (same API as \"chain\").\n* [chain](https:\/\/github.com\/codemodus\/chain) - Handler wrapper chaining with scoped data (net\/context-based \"middleware\").\n* [go-wrap](https:\/\/github.com\/go-on\/wrap) - Small middlewares package for net\/http.\n* [gores](https:\/\/github.com\/alioygur\/gores) - Go package that handles HTML, JSON, XML and etc. responses. Useful for RESTful APIs.\n* [interpose](https:\/\/github.com\/carbocation\/interpose) - Minimalist net\/http middleware for golang.\n* [muxchain](https:\/\/github.com\/stephens2424\/muxchain) - Lightweight middleware for net\/http.\n* [negroni](https:\/\/github.com\/urfave\/negroni) - Idiomatic HTTP middleware for Golang.\n* [render](https:\/\/github.com\/unrolled\/render) - Go package for easily rendering JSON, XML, and HTML template responses.\n* [renderer](https:\/\/github.com\/thedevsaddam\/renderer) - Simple, lightweight and faster response (JSON, JSONP, XML, YAML, HTML, File) rendering package for Go.\n* [rye](https:\/\/github.com\/InVisionApp\/rye) - Tiny Go middleware library (with canned Middlewares) that supports JWT, CORS, Statsd, and Go 1.7 context.\n* [stats](https:\/\/github.com\/thoas\/stats) - Go middleware that stores various information about your web application.\n* [Volatile](https:\/\/github.com\/volatile\/core) - Minimalist middleware stack promoting flexibility, good practices and clean code.\n\n### Routers\n\n* [alien](https:\/\/github.com\/gernest\/alien) - Lightweight and fast http router from outer space.\n* [Bone](https:\/\/github.com\/go-zoo\/bone) - Lightning Fast HTTP Multiplexer.\n* [Bxog](https:\/\/github.com\/claygod\/Bxog) - Simple and fast HTTP router for Go. It works with routes of varying difficulty, length and nesting. And he knows how to create a URL from the received parameters.\n* [chi](https:\/\/github.com\/go-chi\/chi) - Small, fast and expressive HTTP router built on net\/context.\n* [fasthttprouter](https:\/\/github.com\/buaazp\/fasthttprouter) - High performance router forked from `httprouter`. The first router fit for `fasthttp`.\n* [FastRouter](https:\/\/github.com\/razonyang\/fastrouter) - a fast, flexible HTTP router written in Go.\n* [gocraft\/web](https:\/\/github.com\/gocraft\/web) - Mux and middleware package in Go.\n* [Goji](https:\/\/github.com\/goji\/goji) - Goji is a minimalistic and flexible HTTP request multiplexer with support for `net\/context`.\n* [GoRouter](https:\/\/github.com\/vardius\/gorouter) - GoRouter is a Server\/API micro framwework, HTTP request router, multiplexer, mux that provides request router with middleware supporting `net\/context`.\n* [gowww\/router](https:\/\/github.com\/gowww\/router) - Lightning fast HTTP router fully compatible with the net\/http.Handler interface.\n* [httprouter](https:\/\/github.com\/julienschmidt\/httprouter) - High performance router. Use this and the standard http handlers to form a very high performance web framework.\n* [httptreemux](https:\/\/github.com\/dimfeld\/httptreemux) - High-speed, flexible tree-based HTTP router for Go. Inspiration from httprouter.\n* [lars](https:\/\/github.com\/go-playground\/lars) - Is a lightweight, fast and extensible zero allocation HTTP router for Go used to create customizable frameworks.\n* [medeina](https:\/\/github.com\/imdario\/medeina) - Medeina is a HTTP routing tree based on HttpRouter, inspired by Roda and Cuba.\n* [mux](https:\/\/github.com\/gorilla\/mux) - Powerful URL router and dispatcher for golang.\n* [ozzo-routing](https:\/\/github.com\/go-ozzo\/ozzo-routing) - An extremely fast Go (golang) HTTP router that supports regular expression route matching. Comes with full support for building RESTful APIs.\n* [pat](https:\/\/github.com\/bmizerany\/pat) - Sinatra style pattern muxer for Go’s net\/http library, by the author of Sinatra.\n* [pure](https:\/\/github.com\/go-playground\/pure) - Is a lightweight HTTP router that sticks to the std \"net\/http\" implementation.\n* [Siesta](https:\/\/github.com\/VividCortex\/siesta) - Composable framework to write middleware and handlers.\n* [vestigo](https:\/\/github.com\/husobee\/vestigo) - Performant, stand-alone, HTTP compliant URL Router for go web applications.\n* [xmux](https:\/\/github.com\/rs\/xmux) - High performance muxer based on `httprouter` with `net\/context` support.\n* [xujiajun\/gorouter](https:\/\/github.com\/xujiajun\/gorouter) - A simple and fast HTTP router for Go.\n* [zeus](https:\/\/github.com\/daryl\/zeus) - Very simple and fast HTTP router for Go.\n\n## Windows\n\n* [d3d9](https:\/\/github.com\/gonutz\/d3d9) - Go bindings for Direct3D9.\n* [go-ole](https:\/\/github.com\/go-ole\/go-ole) - Win32 OLE implementation for golang.\n\n## XML\n\n*Libraries and tools for manipulating XML.*\n\n* [XML-Comp](https:\/\/github.com\/xml-comp\/xml-comp) - Simple command line XML comparer that generates diffs of folders, files and tags.\n* [xmlwriter](https:\/\/github.com\/shabbyrobe\/xmlwriter) - Procedural XML generation API based on libxml2's xmlwriter module.\n* [xpath](https:\/\/github.com\/antchfx\/xpath) - XPath package for Go.\n* [xquery](https:\/\/github.com\/antchfx\/xquery) - XQuery lets you extract data from HTML\/XML documents using XPath expression.\n\n# Tools\n\n*Go software and plugins.*\n\n## Code Analysis\n\n* [apicompat](https:\/\/github.com\/bradleyfalzon\/apicompat) - Checks recent changes to a Go project for backwards incompatible changes.\n* [dupl](https:\/\/github.com\/mibk\/dupl) - Tool for code clone detection.\n* [errcheck](https:\/\/github.com\/kisielk\/errcheck) - Errcheck is a program for checking for unchecked errors in Go programs.\n* [gcvis](https:\/\/github.com\/davecheney\/gcvis) - Visualise Go program GC trace data in real time.\n* [Go Metalinter](https:\/\/github.com\/alecthomas\/gometalinter) - Metalinter is a tool to automatically apply all static analysis tool and report their output in normalized form.\n* [go-checkstyle](https:\/\/github.com\/qiniu\/checkstyle) - checkstyle is a style check tool like java checkstyle. This tool inspired by java checkstyle, golint. The style refered to some points in Go Code Review Comments.\n* [go-cleanarch](https:\/\/github.com\/roblaszczak\/go-cleanarch) - go-cleanarch was created to validate Clean Architecture rules, like a The Dependency Rule and interaction between packages in your Go projects.\n* [go-critic](https:\/\/github.com\/go-critic\/go-critic) - source code linter that brings checks that are currently not implemented in other linters.\n* [go-outdated](https:\/\/github.com\/firstrow\/go-outdated) - Console application that displays outdated packages.\n* [goast-viewer](https:\/\/github.com\/yuroyoro\/goast-viewer) - Web based Golang AST visualizer.\n* [GoCover.io](http:\/\/gocover.io\/) - GoCover.io offers the code coverage of any golang package as a service.\n* [goimports](https:\/\/godoc.org\/golang.org\/x\/tools\/cmd\/goimports) - Tool to fix (add, remove) your Go imports automatically.\n* [GolangCI](https:\/\/golangci.com\/) - GolangCI is an automated Golang code review service for GitHub pull requests. Service is open source and it's free for open source projects.\n* [GoLint](https:\/\/github.com\/golang\/lint) - Golint is a linter for Go source code.\n* [Golint online](http:\/\/go-lint.appspot.com\/) - Lints online Go source files on GitHub, Bitbucket and Google Project Hosting using the golint package.\n* [goreturns](https:\/\/sourcegraph.com\/github.com\/sqs\/goreturns) - Adds zero-value return statements to match the func return types.\n* [gosimple](https:\/\/github.com\/dominikh\/go-tools\/tree\/master\/cmd\/gosimple) - gosimple is a linter for Go source code that specialises on simplifying code.\n* [gostatus](https:\/\/github.com\/shurcooL\/gostatus) - Command line tool, shows the status of repositories that contain Go packages.\n* [interfacer](https:\/\/github.com\/mvdan\/interfacer) - Linter that suggests interface types.\n* [lint](https:\/\/github.com\/surullabs\/lint) - Run linters as part of go test.\n* [php-parser](https:\/\/github.com\/z7zmey\/php-parser) - A Parser for PHP written in Go.\n* [staticcheck](https:\/\/github.com\/dominikh\/go-tools\/tree\/master\/cmd\/staticcheck) - staticcheck is `go vet` on steroids, applying a ton of static analysis checks you might be used to from tools like ReSharper for C#.\n* [tarp](https:\/\/github.com\/verygoodsoftwarenotvirus\/tarp) - tarp finds functions and methods without direct unit tests in Go source code.\n* [unconvert](https:\/\/github.com\/mdempsky\/unconvert) - Remove unnecessary type conversions from Go source.\n* [unused](https:\/\/github.com\/dominikh\/go-tools\/tree\/master\/cmd\/unused) - unused checks Go code for unused constants, variables, functions and types.\n* [validate](https:\/\/github.com\/mccoyst\/validate) - Automatically validates struct fields with tags.\n\n## Editor Plugins\n\n* [Go plugin for JetBrains IDEs](https:\/\/plugins.jetbrains.com\/plugin\/9568-go) - Go plugin for JetBrains IDEs.\n* [go-language-server](https:\/\/github.com\/theia-ide\/go-language-server) - A wrapper to turn the VSCode go extension into a language server supporting the language-server-protocol.\n* [go-mode](https:\/\/github.com\/dominikh\/go-mode.el) - Go mode for GNU\/Emacs.\n* [go-plus](https:\/\/github.com\/joefitzgerald\/go-plus) - Go (Golang) Package For Atom That Adds Autocomplete, Formatting, Syntax Checking, Linting and Vetting.\n* [Goclipse](https:\/\/github.com\/GoClipse\/goclipse) - Eclipse plugin for Go.\n* [gocode](https:\/\/github.com\/nsf\/gocode) - Autocompletion daemon for the Go programming language.\n* [GoSublime](https:\/\/github.com\/DisposaBoy\/GoSublime) - Golang plugin collection for the text editor SublimeText 3 providing code completion and other IDE-like features.\n* [gounit-vim](https:\/\/github.com\/hexdigest\/gounit-vim) - Vim plugin for generating Go tests based on the function's or method's signature.\n* [theia-go-extension](https:\/\/github.com\/theia-ide\/theia-go-extension) - Go language support for the Theia IDE.\n* [velour](https:\/\/github.com\/velour\/velour) - IRC client for the acme editor.\n* [vim-compiler-go](https:\/\/github.com\/rjohnsondev\/vim-compiler-go) - Vim plugin to highlight syntax errors on save.\n* [vim-go](https:\/\/github.com\/fatih\/vim-go) - Go development plugin for Vim.\n* [vscode-go](https:\/\/github.com\/Microsoft\/vscode-go) - Extension for Visual Studio Code (VS Code) which provides support for the Go language.\n* [Watch](https:\/\/github.com\/eaburns\/Watch) - Runs a command in an acme win on file changes.\n\n## Go Generate Tools\n\n* [generic](https:\/\/github.com\/usk81\/generic) - flexible data type for Go.\n* [genny](https:\/\/github.com\/cheekybits\/genny) - Elegant generics for Go.\n* [gocontracts](https:\/\/github.com\/Parquery\/gocontracts) - brings design-by-contract to Go by synchronizing the code with the documentation.\n* [gonerics](http:\/\/github.com\/bouk\/gonerics) - Idiomatic Generics in Go.\n* [gotests](https:\/\/github.com\/cweill\/gotests) - Generate Go tests from your source code.\n* [gounit](https:\/\/github.com\/hexdigest\/gounit) - Generate Go tests using your own templates.\n* [re2dfa](https:\/\/github.com\/opennota\/re2dfa) - Transform regular expressions into finite state machines and output Go source code.\n\n## Go Tools\n\n* [colorgo](https:\/\/github.com\/songgao\/colorgo) - Wrapper around `go` command for colorized `go build` output.\n* [depth](https:\/\/github.com\/KyleBanks\/depth) - Visualize dependency trees of any package by analyzing imports.\n* [gb](https:\/\/getgb.io\/) - An easy to use project based build tool for the Go programming language.\n* [generator-go-lang](https:\/\/github.com\/axelspringer\/generator-go-lang) - A [Yeoman](http:\/\/yeoman.io) generator to get new Go projects started.\n* [go-callvis](https:\/\/github.com\/TrueFurby\/go-callvis) - Visualize call graph of your Go program using dot format.\n* [go-pkg-complete](https:\/\/github.com\/skelterjohn\/go-pkg-complete) - Bash completion for go and wgo.\n* [go-swagger](https:\/\/github.com\/go-swagger\/go-swagger) - Swagger 2.0 implementation for go. Swagger is a simple yet powerful representation of your RESTful API.\n* [OctoLinker](https:\/\/github.com\/OctoLinker\/browser-extension) - Navigate through go files efficiently with the OctoLinker browser extension for GitHub.\n* [richgo](https:\/\/github.com\/kyoh86\/richgo) - Enrich `go test` outputs with text decorations.\n* [rts](https:\/\/github.com\/galeone\/rts) - RTS: response to struct. Generates Go structs from server responses.\n\n## Software Packages\n\n*Software written in Go.*\n\n### DevOps Tools\n\n* [aptly](https:\/\/github.com\/smira\/aptly) - aptly is a Debian repository management tool.\n* [aurora](https:\/\/github.com\/xuri\/aurora) - Cross-platform web-based Beanstalkd queue server console.\n* [awsenv](https:\/\/github.com\/soniah\/awsenv) - Small binary that loads Amazon (AWS) environment variables for a profile.\n* [Banshee](https:\/\/github.com\/eleme\/banshee) - Anomalies detection system for periodic metrics.\n* [Blast](https:\/\/github.com\/dave\/blast) - A simple tool for API load testing and batch jobs.\n* [bombardier](https:\/\/github.com\/codesenberg\/bombardier) - Fast cross-platform HTTP benchmarking tool.\n* [bosun](https:\/\/github.com\/bosun-monitor\/bosun) - Time Series Alerting Framework.\n* [dogo](https:\/\/github.com\/liudng\/dogo) - Monitoring changes in the source file and automatically compile and run (restart).\n* [drone-jenkins](https:\/\/github.com\/appleboy\/drone-jenkins) - Trigger downstream Jenkins jobs using a binary, docker or Drone CI.\n* [drone-scp](https:\/\/github.com\/appleboy\/drone-scp) - Copy files and artifacts via SSH using a binary, docker or Drone CI.\n* [Dropship](https:\/\/github.com\/chrismckenzie\/dropship) - Tool for deploying code via cdn.\n* [easyssh-proxy](https:\/\/github.com\/appleboy\/easyssh-proxy) - Golang package for easy remote execution through SSH and SCP downloading via `ProxyCommand`.\n* [fac](https:\/\/github.com\/mkchoi212\/fac) - Command-line user interface to fix git merge conflicts\n* [Gitea](https:\/\/github.com\/go-gitea\/gitea) - Fork of Gogs, entirely community driven.\n* [Go Metrics](https:\/\/github.com\/rcrowley\/go-metrics) - Go port of Coda Hale's Metrics library: https:\/\/github.com\/codahale\/metrics.\n* [go-selfupdate](https:\/\/github.com\/sanbornm\/go-selfupdate) - Enable your Go applications to self update.\n* [gobrew](https:\/\/github.com\/cryptojuice\/gobrew) - gobrew lets you easily switch between multiple versions of go.\n* [godbg](https:\/\/github.com\/sirnewton01\/godbg) - Web-based gdb front-end application.\n* [Gogs](https:\/\/gogs.io\/) - A Self Hosted Git Service in the Go Programming Language.\n* [gonative](https:\/\/github.com\/inconshreveable\/gonative) - Tool which creates a build of Go that can cross compile to all platforms while still using the Cgo-enabled versions of the stdlib packages.\n* [govvv](https:\/\/github.com\/ahmetalpbalkan\/govvv) - “go build” wrapper to easily add version information into Go binaries.\n* [gox](https:\/\/github.com\/mitchellh\/gox) - Dead simple, no frills Go cross compile tool.\n* [goxc](https:\/\/github.com\/laher\/goxc) - build tool for Go, with a focus on cross-compiling and packaging.\n* [grapes](https:\/\/github.com\/yaronsumel\/grapes) - Lightweight tool designed to distribute commands over ssh with ease.\n* [GVM](https:\/\/github.com\/moovweb\/gvm) - GVM provides an interface to manage Go versions.\n* [Hey](https:\/\/github.com\/rakyll\/hey) - Hey is a tiny program that sends some load to a web application.\n* [kala](https:\/\/github.com\/ajvb\/kala) - Simplistic, modern, and performant job scheduler.\n* [kcli](https:\/\/github.com\/cswank\/kcli) - Command line tool for inspecting kafka topics\/partitions\/messages.\n* [kubernetes](https:\/\/github.com\/kubernetes\/kubernetes) - Container Cluster Manager from Google.\n* [lstags](https:\/\/github.com\/ivanilves\/lstags) - Tool and API to sync Docker images across different registries.\n* [lwc](https:\/\/github.com\/timdp\/lwc) - A live-updating version of the UNIX wc command.\n* [manssh](https:\/\/github.com\/xwjdsh\/manssh) - manssh is a command line tool for managing your ssh alias config easily.\n* [Moby](https:\/\/github.com\/moby\/moby) - Collaborative project for the container ecosystem to assemble container-based systems.\n* [Mora](https:\/\/github.com\/emicklei\/mora) - REST server for accessing MongoDB documents and meta data.\n* [ostent](https:\/\/github.com\/ostrost\/ostent) - collects and displays system metrics and optionally relays to Graphite and\/or InfluxDB.\n* [Packer](https:\/\/github.com\/mitchellh\/packer) - Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\n* [Pewpew](https:\/\/github.com\/bengadbois\/pewpew) - Flexible HTTP command line stress tester.\n* [Rodent](https:\/\/github.com\/alouche\/rodent) - Rodent helps you manage Go versions, projects and track dependencies.\n* [s3gof3r](https:\/\/github.com\/rlmcpherson\/s3gof3r) - Small utility\/library optimized for high speed transfer of large objects into and out of Amazon S3.\n* [Scaleway-cli](https:\/\/github.com\/scaleway\/scaleway-cli) - Manage BareMetal Servers from Command Line (as easily as with Docker).\n* [sg](https:\/\/github.com\/ChristopherRabotin\/sg) - Benchmarks a set of HTTP endpoints (like ab), with possibility to use the reponse code and data between each call for specific server stress based on its previous response.\n* [skm](https:\/\/github.com\/TimothyYe\/skm) - SKM is a simple and powerful SSH Keys Manager, it helps you to manage your multiple SSH keys easily!\n* [StatusOK](https:\/\/github.com\/sanathp\/statusok) - Monitor your Website and REST APIs.Get Notified through Slack, E-mail when your server is down or response time is more than expected.\n* [traefik](https:\/\/github.com\/containous\/traefik) - Reverse proxy and load balancer with support for multiple backends.\n* [Vegeta](https:\/\/github.com\/tsenart\/vegeta) - HTTP load testing tool and library. It's over 9000!\n* [webhook](https:\/\/github.com\/adnanh\/webhook) - Tool which allows user to create HTTP endpoints (hooks) that execute commands on the server.\n* [Wide](https:\/\/wide.b3log.org\/login) - Web-based IDE for Teams using Golang.\n* [winrm-cli](https:\/\/github.com\/masterzen\/winrm-cli) - Cli tool to remotely execute commands on Windows machines.\n\n### Other Software\n* [borg](https:\/\/github.com\/crufter\/borg) - Terminal based search engine for bash snippets.\n* [boxed](https:\/\/github.com\/tejo\/boxed) - Dropbox based blog engine.\n* [Cherry](https:\/\/github.com\/rafael-santiago\/cherry) - Tiny webchat server in Go.\n* [Circuit](https:\/\/github.com\/gocircuit\/circuit) - Circuit is a programmable platform-as-a-service (PaaS) and\/or Infrastructure-as-a-Service (IaaS), for management, discovery, synchronization and orchestration of services and hosts comprising cloud applications.\n* [Comcast](https:\/\/github.com\/tylertreat\/Comcast) - Simulate bad network connections.\n* [confd](https:\/\/github.com\/kelseyhightower\/confd) - Manage local application configuration files using templates and data from etcd or consul.\n* [DDNS](https:\/\/github.com\/skibish\/ddns) - Personal DDNS client with Digital Ocean Networking DNS as backend.\n* [Docker](http:\/\/www.docker.com\/) - Open platform for distributed applications for developers and sysadmins.\n* [Documize](https:\/\/github.com\/documize\/community) - Modern wiki software that integrates data from SaaS tools.\n* [Duplicacy](https:\/\/github.com\/gilbertchen\/duplicacy) - A cross-platform network and cloud backup tool based on the idea of lock-free deduplication.\n* [fleet](https:\/\/github.com\/coreos\/fleet) - Distributed init System.\n* [Go Package Store](https:\/\/github.com\/shurcooL\/Go-Package-Store) - App that displays updates for the Go packages in your GOPATH.\n* [GoBoy](https:\/\/github.com\/Humpheh\/goboy) - Nintendo Game Boy Color emulator written in Go.\n* [gocc](https:\/\/github.com\/goccmack\/gocc) - Gocc is a compiler kit for Go written in Go.\n* [GoDNS](https:\/\/github.com\/timothyye\/godns) - A dynamic DNS client tool, supports DNSPod & HE.net, written in Go.\n* [GoDocTooltip](https:\/\/github.com\/diankong\/GoDocTooltip) - Chrome extension for Go Doc sites, which shows function description as tooltip at funciton list.\n* [GoLand](https:\/\/jetbrains.com\/go) - Full featured cross-platform Go IDE.\n* [Gor](https:\/\/github.com\/buger\/gor) - Http traffic replication tool, for replaying traffic from production to stage\/dev environments in real-time.\n* [hugo](http:\/\/gohugo.io\/) - Fast and Modern Static Website Engine.\n* [ide](https:\/\/github.com\/thestrukture\/ide) - Browser accessible IDE. Designed for Go with Go.\n* [ipe](https:\/\/github.com\/dimiro1\/ipe) - Open source Pusher server implementation compatible with Pusher client libraries written in GO.\n* [JayDiff](https:\/\/github.com\/yazgazan\/jaydiff) - JSON diff utility written in Go.\n* [joincap](https:\/\/github.com\/assafmo\/joincap) - Command-line utility for merging multiple pcap files together.\n* [Juju](https:\/\/jujucharms.com\/) - Cloud-agnostic service deployment and orchestration - supports EC2, Azure, Openstack, MAAS and more.\n* [Leaps](https:\/\/github.com\/jeffail\/leaps) - Pair programming service using Operational Transforms.\n* [lgo](https:\/\/github.com\/yunabe\/lgo) - Interactive Go programming with Jupyter. It supports code completion, code inspection and 100% Go compatibility.\n* [limetext](http:\/\/limetext.org\/) - Lime Text is a powerful and elegant text editor primarily developed in Go that aims to be a Free and open-source software successor to Sublime Text.\n* [LiteIDE](https:\/\/github.com\/visualfc\/liteide) - LiteIDE is a simple, open source, cross-platform Go IDE.\n* [mockingjay](https:\/\/github.com\/quii\/mockingjay-server) - Fake HTTP servers and consumer driven contracts from one configuration file. You can also make the server randomly misbehave to help do more realistic performance tests.\n* [myLG](https:\/\/github.com\/mehrdadrad\/mylg) - Command Line Network Diagnostic tool written in Go.\n* [naclpipe](https:\/\/github.com\/unix4fun\/naclpipe) - Simple NaCL EC25519 based crypto pipe tool written in Go.\n* [nes](https:\/\/github.com\/fogleman\/nes) - Nintendo Entertainment System (NES) emulator written in Go.\n* [orange-cat](https:\/\/github.com\/noraesae\/orange-cat) - Markdown previewer written in Go.\n* [Orbit](https:\/\/github.com\/gulien\/orbit) - A simple tool for running commands and generating files from templates.\n* [peg](https:\/\/github.com\/pointlander\/peg) - Peg, Parsing Expression Grammar, is an implementation of a Packrat parser generator.\n* [Pipe](https:\/\/github.com\/b3log\/pipe) - A small and beautiful blogging platform.\n* [Postman](https:\/\/github.com\/zachlatta\/postman) - Command-line utility for batch-sending email.\n* [restic](https:\/\/github.com\/restic\/restic) - De-duplicating backup program.\n* [rkt](https:\/\/github.com\/coreos\/rkt) - App Container runtime that integrates with init systems, is compatible with other container formats like Docker, and supports alternative execution engines like KVM.\n* [Seaweed File System](https:\/\/github.com\/chrislusf\/seaweedfs) - Fast, Simple and Scalable Distributed File System with O(1) disk seek.\n* [shell2http](https:\/\/github.com\/msoap\/shell2http) - Executing shell commands via http server (for prototyping or remote control).\n* [snap](https:\/\/github.com\/intelsdi-x\/snap) - Powerful telemetry framework.\n* [Snitch](https:\/\/github.com\/lucasgomide\/snitch) - Simple way to notify your team and many tools when someone has deployed any application via Tsuru.\n* [Stack Up](https:\/\/github.com\/pressly\/sup) - Stack Up, a super simple deployment tool - just Unix - think of it like 'make' for a network of servers.\n* [syncthing](https:\/\/syncthing.net\/) - Open, decentralized file synchronization tool and protocol.\n* [Tenyks](https:\/\/github.com\/kyleterry\/tenyks) - Service oriented IRC bot using Redis and JSON for messaging.\n* [term-quiz](https:\/\/github.com\/crazcalm\/term-quiz) - Quizzes for your terminal.\n* [toto](https:\/\/github.com\/blogcin\/ToTo) - Simple proxy server written in Go language, can be used together with browser.\n* [toxiproxy](https:\/\/github.com\/shopify\/toxiproxy) - Proxy to simulate network and system conditions for automated tests.\n* [tsuru](https:\/\/tsuru.io\/) - Extensible and open source Platform as a Service software.\n* [vFlow](https:\/\/github.com\/VerizonDigital\/vflow) - High-performance, scalable and reliable IPFIX, sFlow and Netflow collector.\n* [websysd](https:\/\/github.com\/ian-kent\/websysd) - Web based process manager (like Marathon or Upstart).\n* [wellington](https:\/\/github.com\/wellington\/wellington) - Sass project management tool, extends the language with sprite functions (like Compass).\n\n# Resources\n\n*Where to discover new Go libraries.*\n\n## Benchmarks\n\n* [autobench](https:\/\/github.com\/davecheney\/autobench) - Framework to compare the performance between different Go versions.\n* [go-benchmark-app](https:\/\/github.com\/mrLSD\/go-benchmark-app) - Powerful HTTP-benchmark tool mixed with Аb, Wrk, Siege tools. Gathering statistics and various parameters for benchmarks and comparison results.\n* [go-benchmarks](https:\/\/github.com\/tylertreat\/go-benchmarks) - Few miscellaneous Go microbenchmarks. Compare some language features to alternative approaches.\n* [go-http-routing-benchmark](https:\/\/github.com\/julienschmidt\/go-http-routing-benchmark) - Go HTTP request router benchmark and comparison.\n* [go-type-assertion-benchmark](https:\/\/github.com\/hgfischer\/go-type-assertion-benchmark) - Naive performance test of two ways to do type assertion in Go.\n* [go-web-framework-benchmark](https:\/\/github.com\/smallnest\/go-web-framework-benchmark) - Go web framework benchmark.\n* [go_serialization_benchmarks](https:\/\/github.com\/alecthomas\/go_serialization_benchmarks) - Benchmarks of Go serialization methods.\n* [gocostmodel](https:\/\/github.com\/PuerkitoBio\/gocostmodel) - Benchmarks of common basic operations for the Go language.\n* [golang-micro-benchmarks](https:\/\/github.com\/amscanne\/golang-micro-benchmarks) - Tiny collection of Go micro benchmarks. The intent is to compare some language features to others.\n* [golang-sql-benchmark](https:\/\/github.com\/tyler-smith\/golang-sql-benchmark) - Collection of benchmarks for popular Go database\/SQL utilities.\n* [gospeed](https:\/\/github.com\/feyeleanor\/GoSpeed) - Go micro-benchmarks for calculating the speed of language constructs.\n* [kvbench](https:\/\/github.com\/jimrobinson\/kvbench) - Key\/Value database benchmark.\n* [skynet](https:\/\/github.com\/atemerev\/skynet) - Skynet 1M threads microbenchmark.\n* [speedtest-resize](https:\/\/github.com\/fawick\/speedtest-resize) - Compare various Image resize algorithms for the Go language.\n\n## Conferences\n\n* [Capital Go](http:\/\/www.capitalgolang.com) - Washington, D.C., USA\n* [dotGo](http:\/\/www.dotgo.eu) - Paris, France\n* [GoCon](http:\/\/gocon.connpass.com\/) - Tokyo, Japan\n* [GoLab](http:\/\/golab.io\/) - Florence, Italy\n* [GolangUK](http:\/\/golanguk.com\/) - London, UK\n* [GopherChina](http:\/\/gopherchina.org) - Shanghai, China\n* [GopherCon](http:\/\/www.gophercon.com\/) - Denver, USA\n* [GopherCon Brazil](https:\/\/gopherconbr.org) - Florianópolis, BR\n* [GopherCon Europe](https:\/\/gophercon.is\/) - Reykjavik, Iceland\n* [GopherCon India](https:\/\/www.gophercon.in\/) - Pune, India\n* [GopherCon Russia](https:\/\/www.gophercon-russia.ru) - Moscow, Russia\n* [GopherCon Singapore](https:\/\/gophercon.sg) - Mapletree Business City, Singapore\n* [GothamGo](http:\/\/gothamgo.com\/) - New York City, USA\n\n## E-Books\n\n* [A Go Developer's Notebook](https:\/\/leanpub.com\/GoNotebook\/read)\n* [An Introduction to Programming in Go](http:\/\/www.golang-book.com\/)\n* [Build Web Application with Golang](https:\/\/www.gitbook.com\/book\/astaxie\/build-web-application-with-golang\/details)\n* [Building Web Apps With Go](https:\/\/www.gitbook.com\/book\/codegangsta\/building-web-apps-with-go\/details)\n* [Go 101](https:\/\/go101.org) - A book focusing on Go syntax\/semantics and all kinds of details\n* [Go Bootcamp](http:\/\/golangbootcamp.com)\n* [GoBooks](https:\/\/github.com\/dariubs\/GoBooks) - A curated list of Go books.\n* [Learning Go](https:\/\/www.miek.nl\/downloads\/Go\/Learning-Go-latest.pdf)\n* [Network Programming With Go](https:\/\/jan.newmarch.name\/go\/)\n* [The Go Programming Language](http:\/\/www.gopl.io\/)\n* [Web Application with Go the Anti-Textbook](https:\/\/github.com\/thewhitetulip\/web-dev-golang-anti-textbook\/)\n* [Writing A Compiler In Go](https:\/\/compilerbook.com)\n* [Writing An Interpreter In Go](https:\/\/interpreterbook.com)\n\n## Gophers\n\n* [Go-gopher-Vector](https:\/\/github.com\/keygx\/Go-gopher-Vector) - Go gopher Vector Data [.ai, .svg]\n* [gopher-logos](https:\/\/github.com\/GolangUA\/gopher-logos) - adorable gopher logos\n* [gopher-stickers](https:\/\/github.com\/tenntenn\/gopher-stickers)\n* [gopher-vector](https:\/\/github.com\/golang-samples\/gopher-vector)\n* [gophericons](https:\/\/github.com\/shalakhin\/gophericons)\n* [gopherize.me](https:\/\/github.com\/matryer\/gopherize.me) - Gopherize yourself\n* [gophers](https:\/\/github.com\/ashleymcnamara\/gophers) - Gopher artworks by Ashley McNamara\n* [gophers](https:\/\/github.com\/egonelbre\/gophers) - Free gophers\n* [gophers](https:\/\/github.com\/rogeralsing\/gophers) - random gopher graphics\n* [gophers](https:\/\/github.com\/sillecelik\/go-gopher) - Gopher amigurumi toy pattern\n\n## Meetups\n\n* [Go Language NYC](https:\/\/www.meetup.com\/golanguagenewyork\/)\n* [Go London User Group](https:\/\/www.meetup.com\/Go-London-User-Group\/)\n* [Go Toronto](https:\/\/www.meetup.com\/go-toronto\/)\n* [Go User Group Atlanta](https:\/\/www.meetup.com\/Go-Users-Group-Atlanta\/)\n* [GoBridge, San Francisco, CA](https:\/\/www.meetup.com\/gobridge\/)\n* [GoJakarta](https:\/\/www.meetup.com\/GoJakarta\/)\n* [Golang Amsterdam](https:\/\/www.meetup.com\/golang-amsterdam\/)\n* [Golang Argentina](https:\/\/www.meetup.com\/Golang-Argentina\/)\n* [Golang Bangalore](https:\/\/www.meetup.com\/Golang-Bangalore\/)\n* [Golang Belo Horizonte - Brazil](https:\/\/www.meetup.com\/go-belo-horizonte\/)\n* [Golang Boston](https:\/\/www.meetup.com\/bostongo\/)\n* [Golang Bulgaria](https:\/\/www.meetup.com\/Golang-Bulgaria\/)\n* [Golang Cardiff, UK](https:\/\/www.meetup.com\/Cardiff-Go-Meetup\/)\n* [Golang Copenhagen](https:\/\/www.meetup.com\/Go-Cph\/)\n* [Golang DC, Arlington, VA](https:\/\/www.meetup.com\/Golang-DC\/)\n* [Golang Dorset, UK](https:\/\/www.meetup.com\/golang-dorset\/)\n* [Golang Hamburg - Germany](https:\/\/www.meetup.com\/Go-User-Group-Hamburg\/)\n* [Golang Israel](https:\/\/www.meetup.com\/Go-Israel\/)\n* [Golang Joinville - Brazil](https:\/\/www.meetup.com\/Joinville-Go-Meetup\/)\n* [Golang Lima - Peru](https:\/\/www.meetup.com\/Golang-Peru\/)\n* [Golang Lyon](https:\/\/www.meetup.com\/Golang-Lyon\/)\n* [Golang Melbourne](https:\/\/www.meetup.com\/golang-mel\/)\n* [Golang Mountain View](https:\/\/www.meetup.com\/Golang-Mountain-View\/)\n* [Golang New York](https:\/\/www.meetup.com\/nycgolang\/)\n* [Golang Paris](https:\/\/www.meetup.com\/Golang-Paris\/)\n* [Golang Pune](https:\/\/www.meetup.com\/Golang-Pune\/)\n* [Golang Singapore](https:\/\/www.meetup.com\/golangsg\/)\n* [Golang Stockholm](https:\/\/www.meetup.com\/Go-Stockholm\/)\n* [Golang Sydney, AU](https:\/\/www.meetup.com\/golang-syd\/)\n* [Golang São Paulo - Brazil](https:\/\/www.meetup.com\/golangbr\/)\n* [Golang Vancouver, BC](https:\/\/www.meetup.com\/golangvan\/)\n* [Golang Москва](https:\/\/www.meetup.com\/Golang-Moscow\/)\n* [Golang Питер](https:\/\/www.meetup.com\/Golang-Peter\/)\n* [Istanbul Golang](https:\/\/www.meetup.com\/Istanbul-Golang\/)\n* [Seattle Go Programmers](https:\/\/www.meetup.com\/golang\/)\n* [Ukrainian Golang User Groups](https:\/\/www.meetup.com\/uagolang\/)\n* [Utah Go User Group](https:\/\/www.meetup.com\/utahgophers\/)\n* [Women Who Go - San Francisco, CA](https:\/\/www.meetup.com\/Women-Who-Go\/)\n\n*Add the group of your city\/country here (send **PR**)*\n\n## Twitter\n\n* [@golang](https:\/\/twitter.com\/golang)\n* [@golang_news](https:\/\/twitter.com\/golang_news)\n* [@golangflow](https:\/\/twitter.com\/golangflow)\n* [@golangweekly](https:\/\/twitter.com\/golangweekly)\n\n## Websites\n\n* [Awesome Go @LibHunt](https:\/\/go.libhunt.com) - Your go-to Go Toolbox.\n* [Awesome Remote Job](https:\/\/github.com\/lukasz-madon\/awesome-remote-job) - Curated list of awesome remote jobs. A lot of them are looking for Go hackers.\n* [awesome-awesomeness](https:\/\/github.com\/bayandin\/awesome-awesomeness) - List of other amazingly awesome lists.\n* [Go Blog](http:\/\/blog.golang.org) - The official Go blog.\n* [Go Challenge](http:\/\/golang-challenge.org\/) - Learn Go by solving problems and getting feedback from Go experts.\n* [Go Forum](https:\/\/forum.golangbridge.org) - Forum to discuss Go.\n* [Go In 5 Minutes](https:\/\/www.goin5minutes.com\/) - 5 minute screencasts focused on getting one thing done.\n* [Go Projects](https:\/\/github.com\/golang\/go\/wiki\/Projects) - List of projects on the Go community wiki.\n* [Go Report Card](https:\/\/goreportcard.com) - A report card for your Go package.\n* [gocryforhelp](https:\/\/github.com\/ninedraft\/gocryforhelp) - Collection of Go projects that needs help. Good place to start your open-source way in Go.\n* [godoc.org](https:\/\/godoc.org\/) - Documentation for open source Go packages.\n* [Golang Flow](https:\/\/golangflow.io) - Post Updates, News, Packages and more.\n* [Golang News](https:\/\/golangnews.com) - Links and news about Go programming.\n* [golang-graphics](https:\/\/github.com\/mholt\/golang-graphics) - Collection of Go images, graphics, and art.\n* [golang-nuts](https:\/\/groups.google.com\/forum\/#!forum\/golang-nuts) - Go mailing list.\n* [Google Plus Community](https:\/\/plus.google.com\/communities\/114112804251407510571) - The Google+ community for #golang enthusiasts.\n* [Gopher Community Chat](https:\/\/invite.slack.golangbridge.org) - Join Our New Slack Community For Gophers ([Understand how it came](https:\/\/blog.gopheracademy.com\/gophers-slack-community\/)).\n* [gowalker.org](https:\/\/gowalker.org) - Go Project API documentation.\n* [justforfunc](https:\/\/www.youtube.com\/c\/justforfunc) - Youtube channel dedicated to Go programming language tips and tricks, hosted by  Francesc Campoy [@francesc](https:\/\/twitter.com\/francesc).\n* [r\/Golang](https:\/\/www.reddit.com\/r\/golang) - News about Go.\n* [Trending Go repositories on GitHub today](https:\/\/github.com\/trending?l=go) - Good place to find new Go libraries.\n\n### Tutorials\n\n* [50 Shades of Go](http:\/\/devs.cloudimmunity.com\/gotchas-and-common-mistakes-in-go-golang\/) - Traps, Gotchas, and Common Mistakes for New Golang Devs.\n* [A Tour of Go](http:\/\/tour.golang.org\/) - Interactive tour of Go.\n* [Build web application with Golang](https:\/\/github.com\/astaxie\/build-web-application-with-golang) - Golang ebook intro how to build a web app with golang.\n* [Building Go Web Applications and Microservices Using Gin](https:\/\/semaphoreci.com\/community\/tutorials\/building-go-web-applications-and-microservices-using-gin) - Get familiar with Gin and find out how it can help you reduce boilerplate code and build a request handling pipeline.\n* [Games With Go](http:\/\/gameswithgo.org\/) - A video series teaching programming and game development.\n* [Go By Example](https:\/\/gobyexample.com\/) - Hands-on introduction to Go using annotated example programs.\n* [Go Cheat Sheet](https:\/\/github.com\/a8m\/go-lang-cheat-sheet) - Go's reference card.\n* [Go database\/sql tutorial](http:\/\/go-database-sql.org\/) - Introduction to database\/sql.\n* [Golangbot](https:\/\/golangbot.com\/learn-golang-series\/) - Tutorials to get started with programming in Go.\n* [Hackr.io](https:\/\/hackr.io\/tutorials\/learn-golang) - Learn Go from the best online golang tutorials submitted & voted by the golang programming community.\n* [How to Use Godog for Behavior-driven Development in Go](https:\/\/semaphoreci.com\/community\/tutorials\/how-to-use-godog-for-behavior-driven-development-in-go) - Get started with Godog — a Behavior-driven development framework for building and testing Go applications.\n* [Learn Go with TDD](https:\/\/github.com\/quii\/learn-go-with-tests) - Learn Go with test-driven development.\n* [Working with Go](https:\/\/github.com\/mkaz\/working-with-go) - Intro to go for experienced programmers.\n* [Your basic Go](http:\/\/yourbasic.org\/golang) - Huge collection of tutorials and how to's",
          "Date Modified" : "2018-09-27 18:03:51 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:03:41 -0600"
        }
      ],
      "Tags" : [
        "awesome",
        "docs",
        "go"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:04:44 -0600",
      "Date Modified" : "2018-09-27 18:10:31 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-operators",
      "Fragments" : [
        {
          "Content" : "# Awesome Operators in the Wild\n\nOperators are Kubernetes native applications. We define native as being both managed using the Kubernetes APIs via kubectl and ran on Kubernetes as containers. Operators take advantage of Kubernetes’s extensibility to deliver the automation advantages of cloud services like provisioning, scaling, and backup\/restore while being able to run anywhere that Kubernetes can run.\n\nThis list is built by the community. Have you built or are you using an Operator that is not listed? Please send a pull request and we will add that Operator to the list.\n\nIf you want to start building an Operator, you should definitely look into the [Operator SDK](https:\/\/github.com\/operator-framework\/operator-sdk).\n\n| App Name | Github | Description |\n|----------|-------------|-------------|\n| Rook | [rook\/rook](https:\/\/github.com\/rook\/rook\/tree\/master\/cluster\/examples\/kubernetes) |  File, Block, and Object Storage Services for your Cloud-Native Environment |\n| ElasticSearch | [upmc-enterprises\/elasticsearch-operator](https:\/\/github.com\/upmc-enterprises\/elasticsearch-operator) | Elasticsearch is a distributed, RESTful search and analytics engine. This operator manages one or more elastic search clusters on Kubernetes. |\n| etcd | [coreos\/etcd-operator](https:\/\/github.com\/coreos\/etcd-operator) | etcd is a distributed key-value (k\/v) store. This operator manages etcd k\/v database clusters on Kubernetes. |\n| Prometheus | [coreos\/prometheus-operator](https:\/\/github.com\/coreos\/prometheus-operator) | Prometheus, a Cloud Native Computing Foundation project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts if some condition is observed to be true. The Prometheus Operator for Kubernetes provides easy monitoring definitions for Kubernetes services and deployment and management of Prometheus instances. |\n| Icinga2 operator | [appscode\/searchlight](https:\/\/github.com\/appscode\/searchlight) | Icinga is an open source computer system and network monitoring application. This operator provide alerts for Kubernetes |\n| OpenStack | [sapcc\/kubernetes-operators](https:\/\/github.com\/sapcc\/kubernetes-operators\/tree\/master\/openstack-operator) | SAP OpenStack operator creates various resources in OpenStack.\n| KubeVirt | [kubevirt\/kubevirt](https:\/\/github.com\/kubevirt\/kubevirt) | Kubernetes Virtualization Operator with API and runtime in order to define and manage virtual machines. |\n| Kafka #1 | [krallistic\/kafka-operator](https:\/\/github.com\/krallistic\/kafka-operator) | A Kafka Operator for Kubernetes |\n| Kafka #2 | [strimzi\/strimzi](https:\/\/github.com\/strimzi\/strimzi)| Operator for running Kafka and Kafka Connect on Kubernetes and OpenShift |\n| PostgreSQL #1 | [CrunchyData\/postgres-operator](https:\/\/github.com\/CrunchyData\/postgres-operator) | PostgreSQL Operator Creates\/Configures\/Manages PostgreSQL Clusters on Kubernetes |\n| PostgreSQL #2 | [zalando-incubator\/postgres-operator](https:\/\/github.com\/zalando-incubator\/postgres-operator) | Create and manage PostgreSQL HA clusters on Kubernetes using [Patroni](https:\/\/github.com\/zalando\/patroni) |\n| MongoDB (Official) | [mongodb\/mongodb-enterprise-kubernetes](https:\/\/github.com\/mongodb\/mongodb-enterprise-kubernetes) | MongoDB Enterprise Operator for Kubernetes |\n| Mongo #1| [kbst\/mongodb](https:\/\/github.com\/kbst\/mongodb) | MongoDB Operator for Kubernetes |\n| Mongo #2|[Ultimaker\/k8s-mongo-operator](https:\/\/github.com\/Ultimaker\/k8s-mongo-operator) | MongoDB Operator for MongoDB Replica Sets and Backups |\n| Kong | [upmc-enterprises\/kong-operator](https:\/\/github.com\/upmc-enterprises\/kong-operator) | Manages Kong clusters on Kubernetes. |\n| Tensorflow | [kubeflow\/tf-operator](https:\/\/github.com\/kubeflow\/tf-operator) | Tools for ML\/Tensorflow on Kubernetes. |\n| WebLogic | [oracle\/weblogic-kubernetes-operator](https:\/\/github.com\/oracle\/weblogic-kubernetes-operator) | Oracle Weblogic Server Kubernetes Operator |\n| Redis #1 | [spotahome\/redis-operator](https:\/\/github.com\/spotahome\/redis-operator) | Redis Operator creates\/configures\/manages redis clusters atop Kubernetes. |\n| Redis #2 | [jw-s\/redis-operator](https:\/\/github.com\/jw-s\/redis-operator) | Redis operator for Kubernetes |\n| Redis Cluster | [AmadeusITGroup\/Redis-Operator](https:\/\/github.com\/AmadeusITGroup\/Redis-Operator) | A Kubernetes operator for running Redis in Cluster mode |\n| Habitat | [habitat-sh\/habitat-operator](https:\/\/github.com\/habitat-sh\/habitat-operator) | A Kubernetes operator for Habitat services. |\n| TiDB #1 | [aliyx\/tidb-operator](https:\/\/github.com\/aliyx\/tidb-operator) | Tidb-operator creates\/configures\/manages tidb clusters atop Kubernetes. |\n| TiDB #2 | [pingcap\/tidb-operator](https:\/\/github.com\/pingcap\/tidb-operator) | TiDB operator creates and manages TiDB clusters running in Kubernetes. |\n| Memcached | [ianlewis\/memcached-operator](https:\/\/github.com\/ianlewis\/memcached-operator) | A Kubernetes operator for memcached |\n| MXNet | [deepinsight\/mxnet-operator](https:\/\/github.com\/deepinsight\/mxnet-operator ) | Apache MXNet is a modern open-source deep learning framework used to train, and deploy deep neural networks. This operator manages the tools for ML\/MXNet on Kubernetes. |\n| NATS | [nats-io\/nats-operator](https:\/\/github.com\/nats-io\/nats-operator) | NATS is an open-source, high-performance, lightweight and secure cloud native messaging system. This operator manages NATS clusters atop Kubernetes, automating their creation and administration. |\n| MySQL #1 | [grtl\/mysql-operator](https:\/\/github.com\/grtl\/mysql-operator) | MySQL is an Open Source SQL database management system. This creates a Kubernetes Custom Resource for MySQL. |\n| MySQL #2 | [oracle\/mysql-operator](https:\/\/github.com\/oracle\/mysql-operator) | MySQL is an Open Source SQL database management system. This operator creates, operates, and scales self-healing MySQL clusters in Kubernetes |\n| MySQL #3 | [presslabs\/mysql-operator](https:\/\/github.com\/presslabs\/mysql-operator) | MySQL is an Open Source SQL database management system. This operator manages all the necessary resources for deploying and managing a highly available MySQL cluster. It provides efortless backups, while keeping the cluster highly-available. |\n| Cassandra #1 | [instaclustr\/cassandra-operator](https:\/\/github.com\/instaclustr\/cassandra-operator) | Cassandra is a free and open-source distributed wide column store NoSQL database management system designed to handle large amounts of data. This is a Kubernetes operator for Apache Cassandra. |\n| Cassandra #2 | [vgkowski\/cassandra-operator](https:\/\/github.com\/vgkowski\/cassandra-operator) | Cassandra is a free and open-source distributed wide column store NoSQL database management system designed to handle large amounts of data. This ia a Kubernetes operator for Cassandra cluster automation. |\n| KubeDB | [kubedb\/operator](https:\/\/github.com\/kubedb\/operator) | KubeDB Operator |\n| Consul | [python\/consul-operator](https:\/\/github.com\/python\/consul-operator) | A Kubernetes operator for consul. |\n| ArangoDB | [arangodb\/kube-arangodb](https:\/\/github.com\/arangodb\/kube-arangodb) | ArangoDB Kubernetes Operator - Start ArangoDB on Kubernetes in 5min. |\n| RDS |  [MYOB-Technology\/ops-kube-db-operator](https:\/\/github.com\/MYOB-Technology\/ops-kube-db-operator) | Operator to control RDS DBs in AWS. |\n| CouchDB | [nicolai86\/couchdb-operator](https:\/\/github.com\/nicolai86\/couchdb-operator) | Prototype Kubernetes operator for couchDB. |\n| Zeebe | [zeebe-io\/zeebe-operator](https:\/\/github.com\/zeebe-io\/zeebe-operator) | Kubernetes Operator for Zeebe - Let me manage your https:\/\/zeebe.io cluster on K8s. |\n| InfluxDB | [gianarb\/influxdb-operator](https:\/\/github.com\/gianarb\/influxdb-operator) | InfluxDB is an open-source time series database. This is the Kubernetes operator for InfluxDB and the TICK stack. |\n| Aerospike | [travelaudience\/aerospike-operator](https:\/\/github.com\/travelaudience\/aerospike-operator) | Aerospike is a NoSQL distributed database. This Operator manages Aerospike clusters atop Kubernetes, automating their creation and administration. |\n| DynamoDB | [microdc\/k8s-dynamodb-operator](https:\/\/github.com\/microdc\/k8s-dynamodb-operator) | Amazon DynamoDB is a fully  proprietary NoSQL database service that supports key-value and document data structures. This is a Kubernetes operator for DynamoDB  |\n| Spark #1 | [GoogleCloudPlatform\/spark-on-k8s-operator](https:\/\/github.com\/GoogleCloudPlatform\/spark-on-k8s-operator) | Kubernetes CRD operator for specifying and running Apache Spark applications idiomatically on Kubernetes. |\n| Spark #2 | [jvm-operators\/spark-operator](https:\/\/github.com\/jvm-operators\/spark-operator) | ConfigMap-based operator for deploying ephemeral Apache Spark clusters and intelligent applications that spawn their own Spark clusters natively on Kubernetes and OpenShift. |\n| Airflow | [GoogleCloudPlatform\/airflow-operator](https:\/\/github.com\/GoogleCloudPlatform\/airflow-operator) | A Kubernetes operator to manage Apache Airflow. |\n| Vault #1 | [coreos\/vault-operator](https:\/\/github.com\/coreos\/vault-operator) | Vault secures, stores, and tightly controls access to tokens, passwords, certificates, API keys, and other secrets. This operator will run and manage Vault on Kubernetes simply and securely. |\n| Vault #2  | [banzaicloud\/bank-vaults](https:\/\/github.com\/banzaicloud\/bank-vaults)| Vault secures, stores, and tightly controls access to tokens, passwords, certificates, API keys, and other secrets. This operator offers a feature rich HA Vault operator with TLS, external API based re\/configuration, several\/automatic unseal options and more.|\n| Kanister | [kanisterio\/kanister](https:\/\/github.com\/kanisterio\/kanister) | Kanister is an extensible framework for application-level data management on Kubernetes |\n| cert-manager | [jetstack\/cert-manager](https:\/\/github.com\/jetstack\/cert-manager) | Automatically provision and manage TLS certificates in Kubernetes |\n| Ark | [heptio\/ark](https:\/\/github.com\/heptio\/ark) | Ark is a utility for managing disaster recovery, this operator manages the backup and restoration of cluster components (pv,pvc,deployments, etc.) to aid in disaster recovery |\n| PVC | [banzaicloud\/pvc-operator](https:\/\/github.com\/banzaicloud\/pvc-operator) | This operator helps to use Kubernetes Persistent Volumes easier on cloud providers by dynamically creating the required accounts, classes and more. |\n| WildFly | [banzaicloud\/wildfly-operator](https:\/\/github.com\/banzaicloud\/wildfly-operator) | Wildfly Operator let's you describe and deploy JEE application on Wildfly server by creating a Custom Resource Definitions in Kubernetes. |\n| Infinispan | [banzaicloud\/infinispan-operator](https:\/\/github.com\/banzaicloud\/infinispan-operator) |  Infinispan is a distributed in-memory key\/value data store. This operator deploys and runs an Infinispan cache cluster. |\n| Prometheus Jmx Exporter | [banzaicloud\/prometheus-jmx-exporter-operator](https:\/\/github.com\/banzaicloud\/prometheus-jmx-exporter-operator) | This operator using Jmx Exporter enables Java processes running ok Kubernetes Pods to expose metrics collected form mBeans via JMX to Prometheus. |\n| HPA Operator | [banzaicloud\/hpa-operator](https:\/\/github.com\/banzaicloud\/hpa-operator) | Horizontal Pod Autoscaler operator for Kubernetes. Annotate, and let HPA operator do the rest. |\n| Logging Operator | [banzaicloud\/logging-operator](https:\/\/github.com\/banzaicloud\/logging-operator) | Logging operator for Kubernetes based on Fluentd and Fluent-bit. |\n| MySQL Operator | [banzaicloud\/mysql-operator](https:\/\/github.com\/banzaicloud\/mysql-operator) | Create, operate and scale self-healing MySQL clusters in Kubernetes. |\n| Envoy | [solo-io\/envoy-operator](https:\/\/github.com\/solo-io\/envoy-operator)| Envoy is a Microservice Abstraction Layer (also known as an API Gateway, API Middleware or in some cases Service Mesh)Run and manage Envoy on Kubernetes simply and securely. |\n| CloudFormation | [linki\/cloudformation-operator](https:\/\/github.com\/linki\/cloudformation-operator)| AWS CloudFormation is a service that helps you model and set up your Amazon Web Services resources. Using this operator run and manage CloudFormation stacks and manage AWS resources from Kubernetes. |\n| ZooKeeper | [Nuance-Mobility\/zookeeper-operator](https:\/\/github.com\/Nuance-Mobility\/zookeeper-operator) | ZooKeeper is a centralized service for maintaining configuration information, naming, providing distributed synchronization, and providing group services. This is an operator for ZooKeeper 3.5.x |\n| AWS | [giantswarm\/aws-operator](https:\/\/github.com\/giantswarm\/aws-operator) | Manages Kubernetes clusters running on Amazon Web Services |\n| Unifiedpush | [aerogear\/ups-config-operator](https:\/\/github.com\/aerogear\/ups-config-operator) | UnifiedPush Server is a server that allows sending push notifications to different (mobile) platforms. Using this operator manage your Unifiedpush variants from Kubernetes and Openshift |\n| RethinkDB | [jmckind\/rethinkdb-operator](https:\/\/github.com\/jmckind\/rethinkdb-operator) | RethinkDB is a free and open-source, distributed document-oriented database. This is a Kubernetes operator to manage RethinkDB instances. |\n| Android SDK | [aerogear\/android-sdk-operator](https:\/\/github.com\/aerogear\/android-sdk-operator) | A Kubernetes operator to manage android sdk packages syncronization in a persistent volume. |\n| RBAC Manager | [reactiveops\/rbac-manager](https:\/\/github.com\/reactiveops\/rbac-manager) | This operator simplifies the management of RBAC Role Bindings in Kubernetes. |\n| Quobyte | [Quobyte\/Quobyte](https:\/\/github.com\/quobyte\/kubernetes\/tree\/master\/operator) |  [Quobyte’s](https:\/\/www.quobyte.com) next-generation file system unifies file, block and object storage for enterprise and scientific applications. |\n| RocketMQ | [huanwei\/rocketmq-operator](https:\/\/github.com\/huanwei\/rocketmq-operator) | Create, operate and scale self-healing Rocketmq clusters on Kubernetes. |\n| Jaeger | [jaegertracing\/jaeger-operator](https:\/\/github.com\/jaegertracing\/jaeger-operator) | Jaeger Operator for Kubernetes. |\n| Netperf | [piontec\/netperf-operator](https:\/\/github.com\/piontec\/netperf-operator) | This is a very simple operator that can be used to test network performance between 2 pods using the [netperf](https:\/\/hewlettpackard.github.io\/netperf\/) tool. It is also a good operator for learning puposes, as the code base is pretty small and it's described in detail in this [blog post](https:\/\/www.tailored.cloud\/kubernetes\/write-a-kubernetes-controller-operator-sdk\/). |",
          "Date Modified" : "2018-09-27 18:04:56 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:04:44 -0600"
        }
      ],
      "Tags" : [
        "awesome",
        "docs",
        "operators",
        "kubernetes",
        "golang"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:04:58 -0600",
      "Date Modified" : "2018-09-27 18:09:56 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-kubernetes",
      "Fragments" : [
        {
          "Content" : "Awesome-Kubernetes\n=======================================================================\n\n[![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome)\n[![Build Status](https:\/\/travis-ci.org\/ramitsurana\/awesome-kubernetes.svg?branch=master)](https:\/\/travis-ci.org\/ramitsurana\/awesome-kubernetes)\n[![Build Status](https:\/\/semaphoreci.com\/api\/v1\/ramitsurana\/awesome-kubernetes\/branches\/master\/badge.svg)](https:\/\/semaphoreci.com\/ramitsurana\/awesome-kubernetes)\n[![License](https:\/\/img.shields.io\/badge\/License-CC%204.0-brightgreen.svg?style=flat-square)](http:\/\/creativecommons.org\/licenses\/by-nc\/4.0\/)\n[![Docker Build Status](https:\/\/img.shields.io\/docker\/build\/ramitsurana\/awesome-kubernetes.svg?style=flat-square)](https:\/\/hub.docker.com\/r\/ramitsurana\/awesome-kubernetes)\n[![Slack Widget](https:\/\/img.shields.io\/badge\/Slack-Channel-blue.svg?style=flat-square)](https:\/\/kubernetes.slack.com\/messages\/awesome-kubernetes)\n\n\nA curated list for awesome kubernetes sources\nInspired by [@sindresorhus' awesome](https:\/\/github.com\/sindresorhus\/awesome)\n\n![final-k8s](https:\/\/cloud.githubusercontent.com\/assets\/8342133\/26794201\/62c1a006-4a3e-11e7-8bf9-4449814648f2.png)\n\n> \"Talent wins games, but teamwork and intelligence wins championships.\"\n>\n> -- Michael Jordan\n\nWithout the help from these [amazing contributors](https:\/\/github.com\/ramitsurana\/awesome-kubernetes\/graphs\/contributors),\nbuilding this awesome-repo would never has been possible. Thank You very much guys !!\n\n**Thanks to Gitbook.This awesome list can now be downloaded and read in the form of a book.Check it out -->  https:\/\/www.gitbook.com\/book\/ramitsurana\/awesome-kubernetes\/ .Keep Learning Keep Sharing !!**\n\n**If you see a package or project here that is no longer maintained or is not a good fit, please submit a pull request to improve this file. Thank you!**\n\n## What is Kubernetes? :ship:\n\n> Kubernetes is an open-source system for automating deployment, scaling, and management of containerized applications.\nIt groups containers that make up an application into logical units for easy management and discovery.\n\n_Source:_ [What is Kubernetes](http:\/\/kubernetes.io\/)\n\n\n## History:\n\n**Kubernetes is known to be a descendant of Google's system BORG**\n\n> The first unified container-management system developed at Google was the system we internally call Borg.\nIt was built to manage both long-running services and batch jobs, which had previously been handled by two separate\nsystems: Babysitter and the Global Work Queue. The latter’s architecture strongly influenced Borg, but was focused on\nbatch jobs; both predated Linux control groups.\n\n_Source:_ [Kubernetes Past](http:\/\/research.google.com\/pubs\/archive\/44843.pdf)\n\n## Date of Birth:\n\nKubernetes celebrates its birthday every year on 21st July. Kubernetes 1.0 was released on July 21 2015, after being first announced to the public at [Dockercon in June 2014](https:\/\/www.youtube.com\/watch?v=YrxnVKZeqK8).\n\n## Roadmap\n\nThe awesome-kubernetes will now soon be available in the form of different releases and package bundles, It means that you can\ndownload the awesome kubernetes release up to a certain period of time, The release for awesome kubernetes 2015 bundle is released.Checkout the releases column for more info.Stay tuned for more updates.\n\n-----------------------------------------------------------------------\n\n\nMenu\n=======================================================================\n\n* [Starting Point](#starting-point)\n* [Installers](#installers)\n* [Main Resources](#main-resources)\n* [Release Notes](#release-notes)\n* [Useful Articles](#useful-articles)\n* [Managed Kubernetes](#managed-kubernetes)\n  * [Cluster Managers](#cluster-manager)\n  * [Developer Platform](#developer-platform)\n  * [Enterprise Kubernetes Products](#enterprise-kubernetes-products)\n  * [Public\/Private Cloud](#publicprivate-cloud)\n  * [PaaS](#paas)\n* [Interactive Learning Environments](#interactive-learning-environments)\n* [MOOC Courses \/ Tutorials](#courses-or-tutorials)\n* [Case Studies](#case-studies)\n* [Persistent Volume Providers](#persistent-volume-providers)\n* [Useful Libraries\/Scripts](#developer-libraries-scripts)\n  * [Python](#python)\n  * [Jenkins](#jenkins)\n* [Projects](#projects)\n  * [Related Software](#related-software)\n* [Monitoring Services](#monitoring-services)\n* [Testing](#testing)\n* [Continuous Delivery](#continuous-delivery)\n* [Serverless Implementations](#serverless-implementations)\n* [Operators](#operators)\n* [Custom Schedulers](#custom-schedulers)\n* [Container Support](#container-support)\n* [Database\/NoSQL](#database)\n* [Networking](#networking)\n* [Service mesh](#service-mesh)\n* [RPC](#rpc)\n* [Secret generation and management](#secret-generation-and-management)\n* [Web applications](#web-applications)\n* [Desktop applications](#desktop-applications)\n* [Mobile applications](#mobile-applications)\n* [API\/CLI adaptors](#apicli-adaptors)\n* [Application deployment orchestration](#application-deployment-orchestration)\n* [Configuration](#configuration)\n* [Security](#security)\n* [Load balancing](#load-balancing)\n* [Developer platform](#developer-platform)\n* [Big Data](#big-data)\n* [Machine Learning](#machine-learning)\n* [Service Discovery](#service-discovery)\n* [Operating System](#operating-system)\n* [YAML\/JSON Config](#yamljson-config)\n* [Tuning](#tuning)\n* [Backup and Disaster Recovery](#backup-and-disaster-recovery)\n* [Raspberry Pi](#raspberry-pi)\n* [Books](#books) :books:\n* [Slide Presentations](#slide-presentations)\n* [Videos](#videos) :tv:\n  * [Main Account](#main-account)\n  * [Other Useful videos](#other-useful-videos)\n* [Interesting Twitter Accounts](#interesting-twitter-accounts)\n* [Amazing People](#amazing-people)\n* [Meetup Groups](#meetup-groups)\n* [Connecting with Kubernetes](#connecting-with-kubernetes)\n* [Conferences](#conferences)\n* [Contributing](#contributing)\n* [License](#license)\n\n\n-----------------------------------------------------------------------\n\n\nStarting Point\n=======================================================================\n\n*A place that marks the beginning of a journey*\n\n* [Kubernetes Community Overview and Contributions Guide](https:\/\/docs.google.com\/presentation\/d\/1JqcALpsg07eH665ZXQrIvOcin6SzzsIUjMRRVivrZMg\/edit?usp=sharing) by [Ihor Dvoretskyi](https:\/\/twitter.com\/idvoretskyi\/)\n* [Are you Ready to Manage your Infrastructure like Google?](http:\/\/blog.jetstack.io\/blog\/k8s-getting-started-part1\/)\n* [Google is years ahead when it comes to the cloud, but it's happy the world is catching up](http:\/\/www.businessinsider.in\/Google-is-years-ahead-when-it-comes-to-the-cloud-but-its-happy-the-world-is-catching-up\/articleshow\/47793327.cms)\n* [An Intro to Google’s Kubernetes and How to Use It](http:\/\/www.ctl.io\/developers\/blog\/post\/what-is-kubernetes-and-how-to-use-it\/) by [Laura Frank](https:\/\/twitter.com\/rhein_wein)\n* [Getting Started on Kubernetes](http:\/\/containertutorials.com\/get_started_kubernetes\/index.html) by [Rajdeep Dua](https:\/\/twitter.com\/rajdeepdua)\n* [Kubernetes: The Future of Cloud Hosting](https:\/\/github.com\/meteorhacks\/meteorhacks.github.io\/blob\/master\/_posts\/2015-04-22-learn-kubernetes-the-future-of-the-cloud.md) by [Meteorhacks](https:\/\/twitter.com\/meteorhacks)\n* [Kubernetes by Google](http:\/\/thevirtualizationguy.wordpress.com\/tag\/kubernetes\/) by [Gaston Pantana](https:\/\/twitter.com\/GastonPantana)\n* [Key Concepts](http:\/\/blog.arungupta.me\/key-concepts-kubernetes\/) by [Arun Gupta](https:\/\/twitter.com\/arungupta)\n* [Application Containers: Kubernetes and Docker from Scratch](http:\/\/keithtenzer.com\/2015\/06\/01\/application-containers-kubernetes-and-docker-from-scratch\/) by [Keith Tenzer](https:\/\/twitter.com\/keithtenzer)\n* [Learn the Kubernetes Key Concepts in 10 Minutes](http:\/\/omerio.com\/2015\/12\/18\/learn-the-kubernetes-key-concepts-in-10-minutes\/) by [Omer Dawelbeit](https:\/\/twitter.com\/omerio)\n* [Top Reasons Businesses Should Move to Kubernetes Now](http:\/\/supergiant.io\/blog\/top-reasons-businesses-should-move-to-kubernetes-now) by [Mike Johnston](https:\/\/github.com\/gopherstein)\n* [The Children's Illustrated Guide to Kubernetes](https:\/\/kubernetes.io\/blog\/2016\/06\/illustrated-childrens-guide-to-kubernetes\/) by [Deis](https:\/\/github.com\/deis)\n* [The ‘kubectl run’ command](http:\/\/medium.com\/@mhausenblas\/the-kubectl-run-command-27c68de5cb76#.mlwi5an7o) by [Michael Hausenblas](https:\/\/twitter.com\/mhausenblas)\n* [Docker Kubernetes Lab Handbook](https:\/\/github.com\/xiaopeng163\/docker-k8s-lab) by [Peng Xiao](https:\/\/twitter.com\/xiaopeng163)\n* [Curated Resources for Kubernetes](https:\/\/hackr.io\/tutorials\/learn-kubernetes)\n* [Kubernetes Comic](https:\/\/cloud.google.com\/kubernetes-engine\/kubernetes-comic\/) by [Google Cloud Plaatform](https:\/\/cloud.google.com\/)\n* [Kubernetes 101: Pods, Nodes, Containers, and Clusters](https:\/\/medium.com\/google-cloud\/kubernetes-101-pods-nodes-containers-and-clusters-c1509e409e16) by [Dan Sanche](https:\/\/medium.com\/@sanche)\n\n\nInstallers\n=======================================================================\n\n\n* [Minikube](https:\/\/github.com\/kubernetes\/minikube) - Run Kubernetes locally\n* [Kops](https:\/\/github.com\/kubernetes\/kops) - OS Agnostique - AWS\n* [Kube-deploy](https:\/\/github.com\/kubernetes\/kube-deploy)\n* [Kubeadm](http:\/\/kubernetes.io\/docs\/admin\/kubeadm\/) - OS Agnostique - Cloud Agnostique\n* [Kubespray](https:\/\/github.com\/kubernetes-incubator\/kubespray) - OS Agnostique - Cloud Agnostique\n* [Bootkube](https:\/\/github.com\/kubernetes-incubator\/bootkube) - CoreOS - Cloud Agnostique\n* [Kube-aws](https:\/\/github.com\/coreos\/kube-aws) - CoreOS - AWS\n* [Kismatic](https:\/\/github.com\/apprenda\/kismatic) - CentOS - Cloud Agnostique\n* [Juju](https:\/\/jujucharms.com\/canonical-kubernetes) - Ubuntu - Cloud Agnostique\n* [Terraform](https:\/\/github.com\/kz8s\/tack) - CoreOS - AWS\n* [Supergiant](http:\/\/supergiant.io\/) - CoreOS - Cloud Agnostique\n* [Archon](https:\/\/github.com\/kubeup\/archon) - OS Agnostique - Cloud Agnostique\n* [KubeNow](https:\/\/github.com\/kubenow\/KubeNow) - Ubuntu - Cloud Agnostique\n* [Kubicorn](https:\/\/github.com\/kubicorn\/kubicorn) - OS Agnostique - Cloud Agnostique\n* [Simplekube](https:\/\/github.com\/valentin2105\/Simplekube) - `systemd` OS - Cloud Agnostique\n* [Conjure-up](https:\/\/github.com\/conjure-up\/conjure-up) - Ubuntu - Cloud Agnostique\n* [Kube-ansible](https:\/\/github.com\/kairen\/kube-ansible) - OS Agnostique - Cloud Agnostique\n* [Kubernetes-Saltstack](https:\/\/github.com\/valentin2105\/Kubernetes-Saltstack) - `systemD` OS - Cloud Agnostique\n* [matchbox](https:\/\/github.com\/coreos\/matchbox) - CoreOS - Network boot and provision Container Linux clusters (e.g. etcd3, Kubernetes, more).\n* [RKE](https:\/\/github.com\/rancher\/rke) - OS Agnostique - Cloud Agnostique\n* [Typhoon](https:\/\/typhoon.psdn.io\/) - Container Linux - Cloud Agnostique\n* [Docker for Windows](https:\/\/store.docker.com\/editions\/community\/docker-ce-desktop-windows) - Run Kubernetes and Docker locally on your Windows PC (Edge Channel)\n* [Docker for MAC](https:\/\/store.docker.com\/editions\/community\/docker-ce-desktop-mac) - Run Kubernetes and Docker locally on your MAC (Edge Channel)\n* [MetalK8s](https:\/\/github.com\/scality\/metalk8s) - CentOS - On-Prem - Cloud Agnostique - [Apache-2.0](https:\/\/github.com\/scality\/metalk8s\/blob\/development\/1.1\/LICENSE)\n\nMain Resources\n=======================================================================\n\n*Official resources from the Kubernetes team*\n\n* [Kubernetes Documentation](https:\/\/kubernetes.io\/docs\/home\/)\n* [Kubernetes Source](https:\/\/github.com\/kubernetes\/kubernetes\/)\n* [Kubernetes Troubleshooting](https:\/\/kubernetes.io\/docs\/tasks\/debug-application-cluster\/troubleshooting\/)\n\nRelease Notes\n=======================================================================\n\n*Official release notes from the Kubernetes team on Stable Kubernetes Releases*\n\n* [Kubernetes-1.11](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.11.md)\n* [Kubernetes-1.10](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.10.md)\n* [Kubernetes-1.9](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.9.md)\n* [Kubernetes-1.8](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.8.md)\n* [Kubernetes-1.7](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.7.md)\n* [Kubernetes-1.6](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.6.md)\n* [Kubernetes-1.5](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.5.md)\n* [Kubernetes-1.4](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.4.md)\n* [Kubernetes-1.3](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.3.md)\n* [Kubernetes-1.2](https:\/\/github.com\/kubernetes\/kubernetes\/blob\/master\/CHANGELOG-1.2.md)\n\n\nUseful Articles\n=======================================================================\n\n*A piece of writing included with others in a newspaper, magazine, or other publication*\n\n* [Installation on Centos 7](http:\/\/severalnines.com\/blog\/installing-kubernetes-cluster-minions-centos7-manage-pods-services)\n*  [Packaging Multiple Resources together](http:\/\/blog.arungupta.me\/kubernetes-application-package-multiple-resources-together\/)\n*  [An Introduction to Kubernetes](http:\/\/www.digitalocean.com\/community\/tutorials\/an-introduction-to-kubernetes) by [Justin Ellingwood](https:\/\/twitter.com\/jmellingwood)\n*  [Scaling Docker with Kubernetes](http:\/\/www.infoq.com\/articles\/scaling-docker-with-kubernetes) by [Carlos Sanchez](https:\/\/twitter.com\/csanchez)\n* [Creating a Kubernetes Cluster to Run Docker Formatted Container Images](http:\/\/access.redhat.com\/articles\/1353773) by [Chris Negus](https:\/\/twitter.com\/linuxcricket)\n* [Containerizing Docker on Kubernetes !!](http:\/\/www.linkedin.com\/pulse\/containerizing-docker-kubernetes-ramit-surana) by [Ramit Surana](https:\/\/twitter.com\/ramitsurana)\n* [Quay: Introducing an Application Registry for Kubernetes](http:\/\/coreos.com\/blog\/quay-application-registry-for-kubernetes.html) by Antoine Legrand\n* [Play With Kubernetes Quickly Using Docker](http:\/\/zwischenzugs.wordpress.com\/2015\/04\/06\/play-with-kubernetes-quickly-using-docker\/)\n* [1 command to Kubernetes with Docker compose](http:\/\/sebgoa.blogspot.in\/2015\/04\/1-command-to-kubernetes-with-docker.html) by [Sebastien Goasguen](https:\/\/twitter.com\/sebgoa)\n* [Nginx Server Deployment using Kubernetes](http:\/\/containertutorials.com\/get_started_kubernetes\/k8s_example.html) by [Rajdeep Dua](https:\/\/www.twitter.com\/rajdeepdua)\n* [What even is a kubelet?](http:\/\/kamalmarhubi.com\/blog\/2015\/08\/27\/what-even-is-a-kubelet\/) by [Kamal Marhubi](https:\/\/twitter.com\/kamalmarhubi)\n* [Kubernetes from the ground up: the API server](http:\/\/kamalmarhubi.com\/blog\/2015\/09\/06\/kubernetes-from-the-ground-up-the-api-server\/) by [Kamal Marhubi](https:\/\/twitter.com\/kamalmarhubi)\n* [Kubernetes 101 – Networking](http:\/\/www.dasblinkenlichten.com\/kubernetes-101-networking\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Dynamic Kubernetes installation\/configuration with SaltStack](http:\/\/www.dasblinkenlichten.com\/dynamic-kubernetes-installationconfiguration-with-saltstack\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Deploying Kubernetes with SaltStack](http:\/\/www.dasblinkenlichten.com\/deploying-kubernetes-with-saltstack\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Logging in Kubernetes with Fluentd and Elasticsearch](http:\/\/www.dasblinkenlichten.com\/logging-in-kubernetes-with-fluentd-and-elasticsearch\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Corekube: Running Kubernetes on CoreOS via OpenStack](http:\/\/developer.rackspace.com\/blog\/running-coreos-and-kubernetes\/) by [Mike Metral](https:\/\/twitter.com\/mikemetral)\n* [CoreOS + Kubernetes Step By Step](https:\/\/coreos.com\/kubernetes\/docs\/latest\/getting-started.html) by [Coreos](https:\/\/twitter.com\/coreoslinux)\n* [Deploying to Kubernetes with Panamax](http:\/\/www.ctl.io\/developers\/blog\/post\/deploying-to-kubernetes-with-panamax\/) by [Brian DeHamer](https:\/\/twitter.com\/bdehamer)\n* [Deploy Kubernetes with a Single Command Using Atomicapp](http:\/\/www.projectatomic.io\/blog\/2015\/08\/fun-with-kubenetes-and-atomicapp\/) by [Jason Brooks](https:\/\/twitter.com\/jasonbrooks)\n* [Deploying a Bare Metal Kubernetes Cluster](http:\/\/blog.jameskyle.org\/2014\/08\/deploying-baremetal-kubernetes-cluster\/) by [James Kyle](https:\/\/twitter.com\/jameskyle75)\n* [AWS Advent 2014 - CoreOS and Kubernetes on AWS](http:\/\/awsadvent.tumblr.com\/post\/104260597799\/aws-advent-2014-coreos-and-kubernetes-on-aws) by [Tim Dsyinger](https:\/\/twitter.com\/dysinger)\n* [Kubernetes and AWS VPC Peering](http:\/\/ben.straub.cc\/2015\/08\/19\/kubernetes-aws-vpc-peering\/) by [Ben Straub](https:\/\/twitter.com\/benstraub)\n* [Deploy a Kubernetes development cluster with Juju!](http:\/\/insights.ubuntu.com\/2015\/07\/23\/deploy-a-kubernetes-development-cluster-with-juju-2\/) by [Matt Bruzek](https:\/\/twitter.com\/mattatcanonical)\n* [Try Kubernetes with Vagrant](http:\/\/lollyrock.com\/articles\/kubernetes-vagrant\/) by [Christoph Hartmann](https:\/\/twitter.com\/chri_hartmann)\n* [Keycloak on Kubernetes with OpenShift 3](http:\/\/blog.keycloak.org\/2015\/04\/keycloak-on-kubernetes-with-openshift-3.html) by [Marko Strukelj](https:\/\/twitter.com\/mstruk2000)\n* [Kubernetes clusters with Oh-My-Vagrant](http:\/\/ttboj.wordpress.com\/2015\/05\/02\/kubernetes-clusters-with-oh-my-vagrant\/) by [James](https:\/\/twitter.com\/#!\/purpleidea)\n* [Fleet Unit Files for Kubernetes on CoreOS](http:\/\/blog.michaelhamrah.com\/2015\/06\/fleet-unit-files-for-kubernetes-on-coreos\/) by [Michael Hamrah](https:\/\/twitter.com\/mhamrah)\n* [Kubernetes on AWS](http:\/\/coreos.com\/kubernetes\/docs\/latest\/kubernetes-on-aws.html) by [CoreOS](https:\/\/twitter.com\/coreoslinux)\n* [Testing Kubernetes on AWS](http:\/\/alanwill.me\/Testing-Kubernetes-on-AWS\/) by [Alan Will](https:\/\/twitter.com\/alanwill)\n* [Kubernetes: First steps on Amazon AWS](http:\/\/blog.dutchcoders.io\/kubernetes-first-steps-on-amazon-aws\/) by [Remco](http:\/\/blog.dutchcoders.io\/author\/remco\/)\n* [Kubernetes Container Orchestration through Java APIs](http:\/\/keithtenzer.com\/2015\/05\/04\/kubernetes-container-orchestration-through-java-apis\/) by [Keith Tenzer](https:\/\/twitter.com\/keithtenzer)\n* [Containers at Scale with Kubernetes on OpenStack](http:\/\/keithtenzer.com\/2015\/04\/15\/containers-at-scale-with-kubernetes-on-openstack\/) by [Keith Tenzer](https:\/\/twitter.com\/keithtenzer)\n* [Installing cAdvisor and Heapster on bare metal Kubernetes](http:\/\/www.dasblinkenlichten.com\/installing-cadvisor-and-heapster-on-bare-metal-kubernetes\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Docker Clustering Tools Compared: Kubernetes vs Docker Swarm](http:\/\/technologyconversations.com\/2015\/11\/04\/docker-clustering-tools-compared-kubernetes-vs-docker-swarm\/)\n* [Comparison of Networking Solutions for Kubernetes](http:\/\/machinezone.github.io\/research\/networking-solutions-for-kubernetes\/)\n* [Why Docker and Google Kubernetes Are Like PaaS Done Right](http:\/\/www.sdxcentral.com\/articles\/news\/why-docker-and-google-kubernetes-are-like-paas-done-right\/2015\/08\/)\n* [Kubernetes Authentication plugins and kubeconfig](http:\/\/www.dasblinkenlichten.com\/kubernetes-authentication-plugins-and-kubeconfig\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Kubernetes with SaltStack revisited](http:\/\/www.dasblinkenlichten.com\/kubernetes-with-saltstack-revisited\/) by [Jon Langemak](https:\/\/twitter.com\/blinken_lichten)\n* [Kubernetes Authentication - OpenID Connect](http:\/\/www.devoperandi.com\/kubernetes-authentication-openid-connect\/) by [Michael Ward](https:\/\/twitter.com\/DevoperandI)\n* [How to Monitor Kubernetes: A 4-Part Series](http:\/\/sysdig.com\/blog\/monitoring-kubernetes-with-sysdig-cloud\/)\n* [Logging - Kafka topic by namespace](http:\/\/www.devoperandi.com\/logging-kafka-topic-by-kubernetes-namespace\/) by [Michael Ward](https:\/\/twitter.com\/DevoperandI)\n* [Achieving CI\/CD with Kubernetes](http:\/\/ramitsurana.github.io\/myblog\/achieving-ci-cd-with-kubernetes) by [Ramit Surana](https:\/\/twitter.com\/ramitsurana)\n* [Kubernetes Monitoring Guide](http:\/\/www.datadoghq.com\/blog\/monitoring-kubernetes-era\/) by [JM Saponaro](http:\/\/github.com\/JayJayM)\n* [Deploying Kubernetes with Ansible and Terraform](http:\/\/solinea.com\/blog\/deploying-kubernetes-ansible-terraform)\n* [Cluster Consul using Kubernetes API](http:\/\/www.devoperandi.com\/cluster-consul-using-kubernetes-api\/)\n* [Continuous Deployment with Google Container Engine and Kubernetes](http:\/\/semaphoreci.com\/community\/tutorials\/continuous-deployment-with-google-container-engine-and-kubernetes)\n* [Handling Sensitive Data In A Docker Application with Kubernetes Secrets](http:\/\/scotch.io\/tutorials\/google-cloud-platform-iii-handling-sensitive-data-in-a-docker-application-with-kubernetes-secrets) by [John Kariuki ](https:\/\/twitter.com\/_kar_is)\n* [How to Create and Use Kubernetes Secrets](http:\/\/linoxide.com\/containers\/create-use-kubernetes-secrets\/) by [Mohamed Ez Ez](http:\/\/linoxide.com\/author\/mohamedez\/)\n* [Microservice Monitoring in Kubernetes with Netsil](http:\/\/netsil.com\/microservices-monitoring-kubernetes\/) by [Matt Baldwin](https:\/\/twitter.com\/baldwinmathew)\n* [Automate deep learning training with Kubernetes GPU-cluster](https:\/\/github.com\/Langhalsdino\/Kubernetes-GPU-Guide)\n* [Kubernetes Production Patterns (and Anti-Patterns)](https:\/\/github.com\/gravitational\/workshop\/blob\/master\/k8sprod.md)\n* [Manage Kubernetes Clusters on AWS Using Kops](https:\/\/aws.amazon.com\/blogs\/compute\/kubernetes-clusters-aws-kops\/)\n* [Kubernetes with SaltStack revisited](http:\/\/www.dasblinkenlichten.com\/kubernetes-with-saltstack-revisited\/)\n* [Introducing Kubic Project](https:\/\/www.suse.com\/communities\/blog\/introducing-kubic-project-new-open-source-project\/)\n* [Three post learn k8s](http:\/\/blog.alexellis.io\/tag\/learn-k8s\/)\n* [Kubernetes tips & tricks](http:\/\/opsnotice.xyz\/kubernetes-tips-tricks\/)\n* [Jenkins declarative pipelines with Kubernetes](http:\/\/radu-matei.com\/blog\/kubernetes-jenkins-azure\/)\n* [Kubernetes with OpenStack Cloud Provider: Current state and upcoming changes (part 1 of 2)](http:\/\/medium.com\/@arthur.souzamiranda\/kubernetes-with-openstack-cloud-provider-current-state-and-upcoming-changes-part-1-of-2-48b161ea449a)\n* [Choosing a CNI Provider for Kubernetes](http:\/\/chrislovecnm.com\/kuberentes\/cni\/choosing-a-cni-provider\/?1234) by [Chris Love](https:\/\/twitter.com\/chrislovecnm)\n* [Enable IPv6 on Kubernetes with Project Calico](https:\/\/www.projectcalico.org\/enable-ipv6-on-kubernetes-with-project-calico\/) by [Valentin Ouvrard](https:\/\/twitter.com\/Valentin_NC)\n* [Kubernetes in IPV6-only](http:\/\/opsnotice.xyz\/kubernetes-ipv6-only\/) by [Valentin Ouvrard](https:\/\/twitter.com\/Valentin_NC)\n* [Kubernetes and everything else - Introduction to Kubernetes and it's context](https:\/\/rinormaloku.com\/introduction-application-architecture\/) by [Rinor Maloku](https:\/\/twitter.com\/rinormaloku)\n* [GitOps: High-Velocity CI\/CD for Kubernetes](http:\/\/dzone.com\/articles\/gitops-high-velocity-cicd-for-kubernetes)\n* [Production grade Kubernetes on AWS: Primer (Part 1)](https:\/\/medium.com\/tailor-tech\/production-grade-kubernetes-on-aws-primer-5b83e71c024) by [Guy Maliar](https:\/\/github.com\/gmaliar)\n* [Production grade Kubernetes on AWS: 4 tools that made our lives easier (Part 2)](https:\/\/medium.com\/tailor-tech\/production-grade-kubernetes-on-aws-4-tools-that-made-our-lives-easier-29438e8b58ca) by [Guy Maliar](https:\/\/github.com\/gmaliar)\n* [Production grade Kubernetes on AWS: 3 tips for networking, ingress and microservices (Part 3)](https:\/\/medium.com\/tailor-tech\/production-grade-kubernetes-on-aws-3-tips-for-networking-ingress-and-microservices-8d28c355a6e0) by [Guy Maliar](https:\/\/github.com\/gmaliar)\n* [Production grade Kubernetes on AWS: 3 lessons learned scaling a cluster (Part 4)](https:\/\/medium.com\/tailor-tech\/production-grade-kubernetes-on-aws-3-lessons-learned-scaling-a-cluster-a421dfe786dd) by [Guy Maliar](https:\/\/github.com\/gmaliar)\n* [Kubernetes Security Guide](https:\/\/sysdig.com\/blog\/kubernetes-security-guide\/) - RBAC, TLS, Security policy, Network policy, etc.\n* [Setting Up a Kubernetes Cluster on Ubuntu 18.04](https:\/\/mherman.org\/blog\/2018\/08\/20\/setting-up-a-kubernetes-cluster-on-ubuntu\/) - this tutorial details how to spin up a Kubernetes cluster on Ubuntu 18.04 using kubeadm, kubelet, and kubectl. \n* [Running Flask on Kubernetes](https:\/\/testdriven.io\/running-flask-on-kubernetes)\n* [Creating a Kubernetes Cluster on DigitalOcean with Python and Fabric](https:\/\/testdriven.io\/creating-a-kubernetes-cluster-on-digitalocean)\n\nManaged Kubernetes\n=======================================================================\n\n  - [Platform9](http:\/\/platform9.com)\n  - [OpenShift Online](http:\/\/www.openshift.com\/devpreview\/index.html)\n  - [Eldarion Cloud](http:\/\/eldarion.cloud\/)\n  - [StackPoint Cloud](http:\/\/stackpoint.io\/)\n  - [Hasura](https:\/\/hasura.io\/)\n\n\n  ### [Cluster Managers](#cluster-manager)\n  - [Cisco Container Platform](https:\/\/www.cisco.com\/c\/en\/us\/products\/cloud-systems-management\/container-platform\/index.html)\n  - [Gardener](https:\/\/github.com\/gardener\/gardener) - AWS, Azure, GCP, and OpenStack cluster manager\n  - [Kubermatic](http:\/\/www.loodse.com\/)\n  - [Rancher](https:\/\/rancher.com\/)\n  - [PKS](https:\/\/pivotal.io\/platform\/pivotal-container-service) - Cluster manager by Pivotal, VMWare and Google\n  - [Telekube](https:\/\/gravitational.com\/telekube\/)\n  - [Kqueen](https:\/\/github.com\/Mirantis\/kqueen)\n\n  ### [Developer Platform](#developer-platform)\n\n  - [Fabric8](http:\/\/fabric8.io)\n  - [Spring Cloud integration](https:\/\/github.com\/fabric8io\/spring-cloud-kubernetes)\n  - [Mantl](https:\/\/github.com\/mantl\/mantl)\n  - [goPaddle](http:\/\/www.gopaddle.io)\n  - [VAMP](http:\/\/vamp.io)\n  - [Draft](https:\/\/draft.sh) - a tool for developers to create cloud native applications with Kubernetes\n  - [Knative](https:\/\/github.com\/knative\/) - Platform to build, deploy, and manage modern serverless workloads\n  - [DevSpace](https:\/\/github.com\/covexo\/devspace) - Build, test and run code directly inside any Kubernetes cluster\n  \n\n  ### [Enterprise Kubernetes Products](#enterprise-kubernetes-products)\n\n  - [CoreOS Tectonic](http:\/\/tectonic.com)\n  - [OpenShift - Container Platform](http:\/\/www.openshift.com\/container-platform\/index.html)\n  - [SUSE Container as a Service](http:\/\/www.suse.com\/betaprogram\/caasp-beta\/)\n  - [Kubermatic](http:\/\/www.loodse.com\/)\n  - [Canonical Distribution of Kubernetes - CDK](https:\/\/www.ubuntu.com\/kubernetes)\n  - [IBM Cloud Private](https:\/\/www.ibm.com\/cloud\/private)\n\n  ### [Public\/Private Cloud](#publicprivate-cloud)\n\n   - [GKE](https:\/\/cloud.google.com\/container-engine\/) - Google Kubernetes Engine\n   - [AWS EKS](https:\/\/aws.amazon.com\/eks\/) - Amazon Elastic Container Service\n   - [Azure AKS](https:\/\/docs.microsoft.com\/en-us\/azure\/aks\/) - Azure Kubernetes Service\n   - [Vsphere](http:\/\/www.vmware.com\/products\/vsphere.html) - VMWare VSphere\n   - [Rackspace](https:\/\/www.rackspace.com\/en-in) - Rackspace\n   - [Alibaba Cloud](https:\/\/www.alibabacloud.com\/product\/kubernetes) - Alibaba Cloud Container Service for Kubernetes\n   - [IKS](https:\/\/www.ibm.com\/cloud\/container-service) - IBM Cloud Kubernetes Service\n   - [Docker EE](https:\/\/www.docker.com\/enterprise-edition) - Docker Enterprise Edition 2.0\n\n  ### [PaaS](#paas)\n\n   *Kubernetes Platform as a Service providers*\n\n  - [Kel](http:\/\/www.kelproject.com)\n  - [WSO2](http:\/\/wso2.com)\n  - [Rancher](http:\/\/rancher.com\/running-kubernetes-aws-rancher\/)\n  - [OpenShift Origin (OKD)](http:\/\/www.okd.io)\n  - [OpenShift Online\/Dedicated\/Container Platform](https:\/\/www.openshift.com\/)\n  - [Eldarion Cloud](http:\/\/eldarion.cloud)\n  - [Alauda Container Platform](http:\/\/www.alauda.cn\/?lang=EN)\n  - [Hasura](http:\/\/www.hasura.io)\n  - [teresa](https:\/\/github.com\/luizalabs\/teresa) - Simple PAAS that runs on top of Kubernetes.\n  - [Containerum](https:\/\/containerum.io)\n\nInteractive Learning Environments\n=======================================================================\n\n*Learn Kubernetes using an interactive environment without requiring downloads or configuration*\n\n* [Katacoda](http:\/\/www.katacoda.com\/courses\/kubernetes)\n* [Play with Kubernetes](http:\/\/labs.play-with-k8s.com\/)\n* [Kubernetes Bootcamp](http:\/\/kubernetesbootcamp.github.io\/kubernetes-bootcamp\/)\n* [Magic Sandbox](https:\/\/magicsandbox.com\/)\n\nMOOC Courses \/ Tutorials\n=======================================================================\n\n*List of available free online courses([MOOC](https:\/\/en.wikipedia.org\/wiki\/Massive_open_online_course)) and tutorials*\n\n  ### [Courses](#coures)\n\n  - [Scalable Microservices with Kubernetes at Udacity](http:\/\/in.udacity.com\/course\/scalable-microservices-with-kubernetes--ud615)\n  - [Introduction to Kubernetes at edX](http:\/\/www.edx.org\/course\/introduction-kubernetes-linuxfoundationx-lfs158x)\n\n  ### [Tutorials](#tutorials)\n\n  - [Kubernetes Tutorials by Kubernetes Team](http:\/\/kubernetes.io\/docs\/tutorials\/)\n  - [Kubernetes By Example by OpenShift Team](http:\/\/kubernetesbyexample.com)\n  - [Kubernetes Tutorial by Tutorialspoint](http:\/\/www.tutorialspoint.com\/kubernetes\/)\n\nCase Studies\n=======================================================================\n\n*Study of Various different case studies*\n\n* [Building a Bank with Kubernetes](http:\/\/monzo.com\/blog\/2016\/09\/19\/building-a-modern-bank-backend\/)\n* [Bringing Pokemon Go to Google Cloud](http:\/\/cloudplatform.googleblog.com\/2016\/09\/bringing-Pokemon-GO-to-life-on-Google-Cloud.html)\n* [Monitoring Kubernetes at Wayblazer](http:\/\/sysdig.com\/blog\/monitoring-docker-kubernetes-wayblazer\/)\n* [Major League Soccer Monolith to Kubernetes Transition](http:\/\/sysdig.com\/blog\/monoliths-kubernetes-monitoring-transitioning-docker-major-league-soccer\/)\n* [Using Kubernetes on AWS](https:\/\/github.com\/hjacobs\/kubernetes-on-aws-users)\n* [Kubernetes at Github](http:\/\/githubengineering.com\/kubernetes-at-github\/)\n* [Kubernetes the hard way (installation from scratch)](http:\/\/github.com\/kelseyhightower\/kubernetes-the-hard-way\/)\n\nPersistent Volume Providers\n=======================================================================\n\n*List of some Persistent Volume Providers for Kubernetes.Check out [Persistent Volume Providers](https:\/\/github.com\/kubernetes\/examples\/tree\/master\/staging\/persistent-volume-provisioning) for more info*\n\n* [GCE](https:\/\/cloud.google.com\/compute\/)\n* [AWS](http:\/\/aws.amazon.com)\n* [Rook](http:\/\/rook.io\/)\n* [Glusterfs](http:\/\/www.gluster.org\/)\n* [OpenStack Cinder](http:\/\/wiki.openstack.org\/cinder)\n* [CephRBD](http:\/\/ceph.com\/ceph-storage\/block-storage\/)\n* [QuoByte](http:\/\/www.quobyte.com\/)\n* [Kube-Aliyun](https:\/\/github.com\/kubeup\/kube-aliyun)\n* [Portworx](http:\/\/portworx.com\/)\n* [Rancher Longhorn](https:\/\/github.com\/rancher\/longhorn)\n* [Stork](https:\/\/github.com\/libopenstorage\/stork)\n* [OpenEBS](http:\/\/github.com\/openebs\/openebs\/)\n* [StorageOS](http:\/\/storageos.com)\n\nDeveloper Libraries\/ Scripts\n=======================================================================\n\n*List of some libraries & scripts for executions and good referrals*\n\n  ### [Python](#python)\n\n   - [Pykube](https:\/\/github.com\/kelproject\/pykube)\n\n  ### [Jenkins](#jenkins)\n\n   - [Jenkinsfile with Helm, Go, Docker, Kubectl, JNLP](https:\/\/github.com\/lachie83\/croc-hunter\/blob\/master\/Jenkinsfile)\n\nProjects\n=======================================================================\n\n*Kubernetes-related projects that you might find helpful*\n\n\n## Related Software\n\n*Projects built to make life with Kubernetes even better, more powerful, more scalable*\n\n* [Argo](https:\/\/github.com\/argoproj\/argo) The Workflow Engine for Kubernetes\n* [Hypernetes](https:\/\/github.com\/hyperhq\/hypernetes)\n* [Kubernetes Cluster Federation (previously Ubernetes)](https:\/\/kubernetes.io\/docs\/concepts\/cluster-administration\/federation\/)\n* [kmachine](https:\/\/github.com\/skippbox\/kmachine)\n* [Kubefuse](http:\/\/opencredo.com\/introducing-kubefuse-file-system-kubernetes\/)\n* [KubeSpray](https:\/\/github.com\/kubespray)\n* [Kubernetes Ec2 Autoscaler](https:\/\/github.com\/openai\/kubernetes-ec2-autoscaler)\n* [Kubeform](http:\/\/capgemini.github.io\/kubeform\/)\n* [kube-openvpn](https:\/\/github.com\/pieterlange\/kube-openvpn)\n* [Archon](https:\/\/github.com\/kubeup\/archon)\n* [Client Libraries](https:\/\/github.com\/kubernetes\/community\/blob\/master\/contributors\/devel\/client-libraries.md)\n* [Kubic-Project](https:\/\/github.com\/kubic-project)\n* [Telepresence](http:\/\/www.telepresence.io) - Locally develop\/debug services against a remote Kubernetes cluster\n* [Fission Workflows](https:\/\/github.com\/fission\/fission-workflows) - Workflow-based serverless function composition\n* [Ambassador](http:\/\/www.getambassador.io) - API Gateway built on the Envoy Proxy\n\n## Package Managers\n\n* [Helm](http:\/\/helm.sh) - For further information, please check out - [Awesome Helm](https:\/\/github.com\/cdwv\/awesome-helm).\n\n## Monitoring Services\n\n*To maintain regular surveillance over kubernetes*\n\n* [Console](http:\/\/github.com\/kubernetes\/dashboard)\n* [Datadog](http:\/\/www.datadoghq.com\/)\n* [eventrouter](https:\/\/github.com\/heptiolabs\/eventrouter) - simple introspective kubernetes service that forwards events to a specified sink.\n* [Grafana Kubernetes App](https:\/\/github.com\/grafana\/kubernetes-app)\n* [Heapster](https:\/\/github.com\/kubernetes\/heapster)\n* [Instana](https:\/\/instana.com)\n* [Kubebox](https:\/\/github.com\/astefanutti\/kubebox) - Terminal console for Kubernetes\n* [Kubedash](https:\/\/github.com\/kubernetes\/kubedash)\n* [Kubernetes Operational View](https:\/\/github.com\/hjacobs\/kube-ops-view) - read-only system dashboard for multiple K8s clusters\n* [Kubetail](https:\/\/github.com\/johanhaleby\/kubetail)\n* [Kubewatch](https:\/\/github.com\/skippbox\/kubewatch)\n* [Netsil](https:\/\/github.com\/netsil\/manifests)\n* [Outcold Solutions](https:\/\/www.outcoldsolutions.com) - monitoring Kubernetes, OpenShift and Docker in Splunk Enterprise and Splunk Cloud (metrics and log forwarding)\n* [Prometheus](http:\/\/prometheus.io)\n* [Sysdig Monitoring](https:\/\/www.sysdig.com\/)\n* [Sysdig Open Source](http:\/\/www.sysdig.org\/)\n* [Weave Scope](http:\/\/www.weave.works\/products\/weave-scope\/)\n* [Searchlight](https:\/\/github.com\/appscode\/searchlight)\n* [Ingress Monitor Controller](https:\/\/github.com\/stakater\/IngressMonitorController) - A Kubernetes Controller to watch your ingresses and create liveness alerts for your endpoints\n\n## Testing\n\n*Test your applications running on Kubernetes*\n\n* [kube-monkey](https:\/\/github.com\/asobti\/kube-monkey) - Chaos Monkey for Kubernetes clusters\n* [k8s-testsuite](https:\/\/github.com\/mrahbar\/k8s-testsuite) - Helm chart for network and loadtesting of a Kubernetes cluster\n* [Test-Infra](https:\/\/github.com\/kubernetes\/test-infra)\n* [Sonobuoy](https:\/\/github.com\/heptio\/sonobuoy) - Diagnostic tool that runs Kubernetes conformance tests\n* [PowerfulSeal](https:\/\/github.com\/bloomberg\/powerfulseal) - kills targeted pods and machines to test your software reliability\n* [Litmus](https:\/\/github.com\/openebs\/litmus) - Chaos engineering for stateful workloads on Kubernetes\n* [Kubeadm-dind-cluster](https:\/\/github.com\/kubernetes-sigs\/kubeadm-dind-cluster) - multi-node test cluster based on kubeadm\n* [kind](https:\/\/github.com\/bsycorp\/kind) - A single node cluster to run your CI tests against thats ready in 30 seconds\n\n## Continuous Delivery\n\n*Build-test-deploy automated workflow software designed to make production environments more stable and life better for engineers*\n\n* [Jenkins](https:\/\/jenkins.io)\n   * [Jenkins-Kubernetes Plugin](https:\/\/github.com\/jenkinsci\/kubernetes-plugin) by [Carlos Sanchez](https:\/\/www.twitter.com\/csanchez)\n   * [Automated Image Builds with Jenkins, Packer, and Kubernetes](https:\/\/cloud.google.com\/solutions\/automated-build-images-with-jenkins-kubernetes#kubernetes_architecture)\n   * [On-demand Jenkins slaves with Kubernetes and the Google Container Engine](http:\/\/www.cloudbees.com\/blog\/demand-jenkins-slaves-kubernetes-and-google-container-engine)\n   * [Jenkins setups for Kubernetes and Docker Workflow](http:\/\/iocanel.blogspot.in\/2015\/09\/jenkins-setups-for-kubernetes-and.html)\n   * [Lab: Build a Continuous Deployment Pipeline with Jenkins and Kubernetes](https:\/\/github.com\/GoogleCloudPlatform\/continuous-deployment-on-kubernetes)\n* [Jenkins X](http:\/\/jenkins-x.io\/) - CI\/CD for Kubernetes using Jenkins\n* [kb8or](https:\/\/github.com\/UKHomeOffice\/kb8or)\n* [Wercker](http:\/\/blog.wercker.com\/topic\/kubernetes)\n* [Shippable](http:\/\/blog.shippable.com\/topic\/kubernetes)\n* [GitLab](http:\/\/blog.lwolf.org\/post\/how-to-easily-deploy-gitlab-on-kubernetes\/)\n* [Kontinuous](https:\/\/github.com\/AcalephStorage\/kontinuous)\n* [Kit](http:\/\/invisionapp.github.io\/kit\/)\n* [Spinnaker](http:\/\/www.spinnaker.io\/blog\/deploy-to-kubernetes-using-spinnaker)\n* [CircleCI](http:\/\/www.alexecollins.com\/continuous-delivery-with-kubernetes-and-circleci\/)\n* [KubeCI](https:\/\/www.kubeci.io\/)\n* [Vili](https:\/\/github.com\/airware\/vili)\n* [Keel](https:\/\/keel.sh\/)\n* [Apollo](https:\/\/github.com\/logzio\/apollo) - Open Source application providing teams with self service UI for creating and deploying their services to Kubernetes.\n* [Weave Flux – GitOps reconcoliation operator](https:\/\/github.com\/weaveworks\/flux)\n* [Codefresh](https:\/\/codefresh.io\/) - Kubernetes CI\/CD platform (with private Docker and Helm Chart repositories)\n\n## Serverless Implementations\n\n* [Funktion](https:\/\/github.com\/fabric8io\/funktion)\n* [Fission](https:\/\/github.com\/platform9\/fission)\n* [Kubeapps](https:\/\/github.com\/kubeapps\/kubeapps) - set of tools (application dashboard, Serverless framework, and Secret generator) to build FaaS apps on top of Kubernetes\n* [Kubeless](https:\/\/github.com\/skippbox\/kubeless)\n* [OpenWhisk](https:\/\/github.com\/openwhisk)\n* [Iron.io](http:\/\/iron.io)\n* [OpenFaaS](https:\/\/github.com\/alexellis\/faas)\n* [FaaS-netes](https:\/\/github.com\/alexellis\/faas-netes)\n* [Nuclio](https:\/\/github.com\/nuclio\/nuclio)\n* [Virtual Kubelet](https:\/\/github.com\/virtual-kubelet\/virtual-kubelet) - Allows nodes to be backed by other services and providers.\n\n## Operators\n\n* [Prometheus](https:\/\/github.com\/coreos\/prometheus-operator)\n* [Kong API](https:\/\/github.com\/upmc-enterprises\/kong-operator)\n* [Kubernetes Operators](https:\/\/github.com\/sapcc\/kubernetes-operators)\n* [K8s Operator Workshop](https:\/\/github.com\/lukebond\/cc-au-k8s-operators-workshop)\n* [Cert Operator](https:\/\/github.com\/giantswarm\/cert-operator)\n* [Cert manager](https:\/\/github.com\/kelseyhightower\/kube-cert-manager) by @kelseyhightower\n* [cert-manager](https:\/\/github.com\/jetstack\/cert-manager) by @jetstack\n* [Operator Kit](https:\/\/github.com\/rook\/operator-kit)\n* [Container Linux Update Operator](https:\/\/github.com\/coreos\/container-linux-update-operator)\n* [DB Operator](https:\/\/github.com\/k8sdb\/operator)\n* [etcd](https:\/\/github.com\/coreos\/etcd-operator)\n* [Elasticsearch](https:\/\/github.com\/upmc-enterprises\/elasticsearch-operator)\n* [Memcached](https:\/\/github.com\/kbst\/memcached)\n* [MySQL](https:\/\/github.com\/oracle\/mysql-operator)\n* [MongoDB](https:\/\/github.com\/kbst\/mongodb)\n* [PostgreSQL](https:\/\/github.com\/CrunchyData\/postgres-operator)\n* [PostgreSQL](https:\/\/github.com\/zalando-incubator\/postgres-operator) - manage PostgreSQL clusters using StatefulSets and [Patroni](https:\/\/github.com\/zalando\/patroni).\n* [Couchbase](https:\/\/blog.couchbase.com\/introducing-couchbase-operator\/)\n* [Kafka](https:\/\/github.com\/krallistic\/kafka-operator)\n* [KubeVirt](https:\/\/github.com\/kubevirt)\n* [Operator SDK](https:\/\/github.com\/operator-framework\/operator-sdk)\n* [kooper](https:\/\/github.com\/spotahome\/kooper) - Simple Go library to create Kubernetes operators and controllers\n\n## Custom Schedulers\n\n* [Scheduler](https:\/\/github.com\/kelseyhightower\/scheduler) - Cost based scheduler\n* [Sticky Node Scheduler](https:\/\/github.com\/philipn\/kubernetes-sticky-node-scheduler)\n* [ksched](https:\/\/github.com\/coreos\/ksched) - Experimental flow based scheduler\n* [escheduler](https:\/\/github.com\/agonzalezro\/escheduler) - Written in elixir\n* [bashScheduler](https:\/\/github.com\/rothgar\/bashScheduler) - Written in bash\n\n## Container Support\n\n*A list of linux containers supported by kubernetes.*\n\n* [Docker](http:\/\/docker.com):\n* [Rkt](http:\/\/coreos.com\/rkt)\n  * [Rktnetes](http:\/\/kubernetes.io\/docs\/getting-started-guides\/rkt\/)\n  * [rktlet](https:\/\/github.com\/kubernetes-incubator\/rktlet) - Rkt implementation of a Kubernetes\n* [containerd](https:\/\/github.com\/containerd\/containerd)\n* [cri-containerd](https:\/\/github.com\/kubernetes-incubator\/cri-containerd) - Containerd-based implementation of Kubernetes Container Runtime Interface\n* [CRI-O (OCI)](https:\/\/github.com\/kubernetes-incubator\/cri-o)\n* [Hyper.sh\/frakti](https:\/\/github.com\/kubernetes\/frakti) - Hypervisor-based container runtime\n* [virtlet](https:\/\/github.com\/Mirantis\/virtlet) - Kubernetes CRI implementation for running VM workloads\n* [infranetes](https:\/\/github.com\/apporbit\/infranetes)\n\n## Database\n\n* [Apache Ignite](https:\/\/apacheignite.readme.io\/docs\/kubernetes-deployment) - Memory-centric distributed database, caching, processing platform\n* [CockroachDB](http:\/\/www.cockroachlabs.com\/blog\/running-cockroachdb-on-kubernetes\/)\n* [Cassandra \/ DataStax](http:\/\/blog.kubernetes.io\/2016\/07\/thousand-instances-of-cassandra-using-kubernetes-pet-set.html)\n* [MongoDB](http:\/\/www.mongodb.com\/blog\/post\/running-mongodb-as-a-microservice-with-docker-and-kubernetes)\n* [Hazelcast](http:\/\/ppires.wordpress.com\/2014\/12\/24\/clustering-hazelcast-on-kubernetes\/)\n* [Crate](http:\/\/crate.io\/docs\/scale\/kubernetes\/)\n* [Minio](http:\/\/minio.io)\n* [Vitess](http:\/\/vitess.io\/) - Horizontal scaling of MySql by Youtube\n* [RDS](https:\/\/github.com\/sorenmat\/k8s-rds) - Provision RDS databases via CRD from Kubernetes\n\n## Networking\n\n* [Weave Net](http:\/\/www.weave.works\/docs\/net\/latest\/kubernetes\/kube-addon\/)\n* [Canal](https:\/\/github.com\/tigera\/canal) by [Tigera](https:\/\/github.com\/tigera)\n* [OpenContrail](https:\/\/github.com\/Juniper\/contrail-kubernetes)\n* [Nuage](https:\/\/github.com\/nuagenetworks\/nuage-kubernetes)\n* [Kuryr](https:\/\/github.com\/openstack\/kuryr-kubernetes)\n* [Contiv](http:\/\/contiv.github.io\/)\n* [Calico](http:\/\/www.projectcalico.org\/)\n* [OpenVSwitch](http:\/\/openvswitch.org\/)\n* [Kube-router](http:\/\/github.com\/cloudnativelabs\/kube-router)\n* [Cilium](https:\/\/github.com\/cilium\/cilium)\n* [Linen](https:\/\/github.com\/John-Lin\/linen-cni)\n* [CNI-Genie](https:\/\/github.com\/Huawei-PaaS\/CNI-Genie)\n* [Romana](http:\/\/romana.io\/)\n* [Infoblox](https:\/\/github.com\/infobloxopen\/cni-infoblox)\n* [External DNS](https:\/\/github.com\/kubernetes-incubator\/external-dns) - To control DNS records dynamically via Kube resources\n* [cni-ipvlan-vpc-k8s](https:\/\/github.com\/lyft\/cni-ipvlan-vpc-k8s)\n* [kubernetes-network-policy-recipes](https:\/\/github.com\/ahmetb\/kubernetes-network-policy-recipes)\n* [Multus-cni](https:\/\/github.com\/Intel-Corp\/multus-cni) - Multi-homed pod cni\n* [Network-Controller](https:\/\/github.com\/linkernetworks\/network-controller) - Open vSwitch, Multiple network interfaces that associate with Kubernetes pods\n* [AWS VPC CNI](https:\/\/github.com\/aws\/amazon-vpc-cni-k8s) - Networking plugin using Elastic Network Interfaces\n* [NSX-T](https:\/\/www.vmware.com\/products\/nsx\/cloud-native-apps.html) - CNI plugin supporting load balancing and distributed firewalls.\n\n## Service mesh\n\n* [Envoy](http:\/\/lyft.github.io\/envoy\/)\n* [Amalgam8](http:\/\/github.com\/amalgam8) - Acquired by [Istio](http:\/\/istio.io\/)\n* [Linkerd](http:\/\/linkerd.io\/getting-started\/k8s\/)\n* [Weave Mesh](https:\/\/github.com\/weaveworks\/mesh)\n* [Conduit](http:\/\/conduit.io\/)\n\n## RPC\n\n* [gRPC](http:\/\/grpc.io)\n* [Micro](https:\/\/github.com\/micro\/kubernetes)\n\n\n## Secret generation and management\n\n* [CyberArk Conjur Kubernetes Authenticator](https:\/\/developer.conjur.net\/reference\/integrations\/kubernetesopenshift.html) - Secure your Kubernetes-deployed applications with CyberArk Conjur\n* [Vault auth plugin backend: Kubernetes](http:\/\/www.vaultproject.io\/docs\/auth\/kubernetes.html)\n* [Vault controller](https:\/\/github.com\/kelseyhightower\/vault-controller)\n* [kube-lego](https:\/\/github.com\/jetstack\/kube-lego)\n* [k8sec](https:\/\/github.com\/dtan4\/k8sec)\n* [kubernetes-vault](https:\/\/github.com\/Boostport\/kubernetes-vault)\n* [kubesec](https:\/\/github.com\/shyiko\/kubesec) - Secure Secret management\n* [Sealed Secrets](https:\/\/github.com\/bitnami-labs\/sealed-secrets)\n* [Secure GitOps Using Weave Cloud Deploy And Bitnami's Sealed Secrets](https:\/\/engineering.bitnami.com\/articles\/secure-gitops.html)\n\n## Web applications\n\n* [Kubernator](https:\/\/github.com\/smpio\/kubernator)\n\n## Desktop applications\n\n* [Kubernetic](https:\/\/kubernetic.com\/)\n\n## Mobile applications\n\n* [Cabin](https:\/\/github.com\/bitnami\/cabin)\n* [Cockpit](http:\/\/cockpit-project.org\/guide\/latest\/feature-kubernetes.html)\n\n## API\/CLI adaptors\n\n* [click](https:\/\/github.com\/databricks\/click) - A CLI focused REPL for quickly interacting with Kubernetes objects.\n* [kube-prompt](https:\/\/github.com\/c-bata\/kube-prompt) - Interactive kubernetes client built using go-prompt.\n* [Kube-shell](https:\/\/github.com\/cloudnativelabs\/kube-shell) - Integrated shell for working with the Kubernetes CLI\n* [Kubebot](https:\/\/github.com\/harbur\/kubebot)\n* [kubectx](https:\/\/github.com\/ahmetb\/kubectx) - switch between clusters on kubectl\n* [kubens](https:\/\/github.com\/ahmetb\/kubectx) - switch between namespaces on kubectl\n* [StackStorm](https:\/\/github.com\/StackStorm\/st2)\n* [Kubefuse](http:\/\/opencredo.com\/introducing-kubefuse-file-system-kubernetes\/)\n* [Ksql](https:\/\/github.com\/brendandburns\/ksql)\n* [kubectld](https:\/\/github.com\/rancher\/kubectld)\n* [Kubesh](https:\/\/github.com\/projectodd\/kubernetes\/blob\/kubesh\/cmd\/kubesh\/README.md) - Work around kubectl\n* [Kubectl Aliases](https:\/\/github.com\/ahmetb\/kubectl-aliases) - Aliases for Kubectl\n* [Vikube](https:\/\/github.com\/c9s\/vikube.vim) - Kubernetes operations from Vim, in Vim\n* [kube-ps1](https:\/\/github.com\/jonmosco\/kube-ps1) - Kubernetes prompt helper for bash and zsh.\n* [kube-tmux](https:\/\/github.com\/jonmosco\/kube-tmux) - Kubernetes tmux plugin to display the current context and namespace\n* [kubensx](https:\/\/github.com\/shyiko\/kubensx) - Simpler Cluster\/User\/Namespace switching for Kubernetes (featuring interactive mode and wildcard\/fuzzy matching).\n* [stern](https:\/\/github.com\/wercker\/stern) - Multi pod and container log tailing\n* [kubeplay](https:\/\/github.com\/errordeveloper\/kubeplay)\n\n## Application deployment orchestration\n\n* [ElasticKube](https:\/\/elasticbox.com\/kubernetes)\n* [AppController](https:\/\/github.com\/Mirantis\/k8s-AppController)\n* [Kb8or](https:\/\/github.com\/UKHomeOffice\/kb8or)\n* [IBM UrbanCode](https:\/\/developer.ibm.com\/urbancode\/plugin\/kubernetes\/)\n* [Nulecule](https:\/\/github.com\/projectatomic\/nulecule)\n* [Deployment manager](https:\/\/cloud.google.com\/deployment-manager\/)\n* [Psykube](https:\/\/github.com\/commercialtribe\/psykube)\n* [Brigade](https:\/\/github.com\/Azure\/brigade) - Event Based Scripting using JavaScript\n* [Skaffold](https:\/\/github.com\/GoogleCloudPlatform\/skaffold) - Command line tool that facilitates continuous development for Kubernetes applications.\n* [Gitkube](https:\/\/gitkube.sh\/) - Build and deploy docker images on Kubernetes using `git push`.\n\n## Configuration\n\n* [Kompose](https:\/\/github.com\/kubernetes\/kompose)\n* [Jsonnet](https:\/\/github.com\/google\/jsonnet\/tree\/master\/case_studies\/kubernetes)\n* [K8comp](https:\/\/github.com\/cststack\/k8comp)\n* [Ktmpl](https:\/\/github.com\/InQuicker\/ktmpl)\n* [Konfd](https:\/\/github.com\/kelseyhightower\/konfd)\n* [kenv](https:\/\/github.com\/thisendout\/kenv)\n* [kubediff](https:\/\/github.com\/weaveworks\/kubediff)\n* [thesus](https:\/\/github.com\/heptiolabs\/theseus) - A command-line utility and importable package for comparing sets of Kubernetes objects\n* [Habitat](http:\/\/www.habitat.sh\/docs\/best-practices\/#kubernetes)\n* [Puppet](http:\/\/forge.puppet.com\/garethr\/kubernetes\/readme)\n* [Ansible](http:\/\/docs.ansible.com\/ansible\/latest\/modules\/k8s_raw_module.html)\n* [Saltstack](http:\/\/docs.saltstack.com\/en\/latest\/ref\/modules\/all\/salt.modules.k8s.html)\n* [Chef](http:\/\/supermarket.chef.io\/cookbooks\/kubernetes)\n* [kubegen](https:\/\/github.com\/errordeveloper\/kubegen)\n* [kustomize](https:\/\/github.com\/kubernetes-sigs\/kustomize) - Customization using partial specs\n* [kapitan](https:\/\/github.com\/deepmind\/kapitan) - Manage complex deployments using jsonnet and jinja2\n\n## Security\n\n* [Aquasec](http:\/\/blog.aquasec.com\/topic\/kubernetes)\n* [Authenticator](https:\/\/github.com\/heptio\/authenticator) - A tool for using AWS IAM credentials to authenticate to a Kubernetes cluster\n* [Dex](https:\/\/github.com\/coreos\/dex) - OpenID and OAuth for Kubernetes\n* [Guard](https:\/\/github.com\/appscode\/guard) - Authenticaton webhook server with support for Github, Gitlab, Google, Azure and LDAP (AD) as identity providers.\n* [kiam](https:\/\/github.com\/uswitch\/kiam) -  Allows cluster users to associate AWS IAM roles to Pods.\n* [kube2iam](https:\/\/github.com\/jtblin\/kube2iam) - Provides different AWS IAM roles for pods running on Kubernetes\n* [Kubesec.io](http:\/\/kubesec.io\/)\n* [Sysdig Falco](http:\/\/www.sysdig.org\/falco\/)\n* [Sysdig Secure](http:\/\/www.sysdig.com\/product\/secure)\n* [Trireme](http:\/\/github.com\/aporeto-inc\/trireme-kubernetes)\n* [Twistlock](http:\/\/www.twistlock.com\/)\n\n## Load balancing\n\n* [Avi Networks - Software Load Balancer | Intelligent WAF | Elastic Service Mesh](https:\/\/avinetworks.com\/)\n* [AWS ALB Ingress Controller](https:\/\/github.com\/kubernetes-sigs\/aws-alb-ingress-controller)\n* [Cloudflare Warp Ingress](https:\/\/github.com\/cloudflare\/cloudflare-ingress-controller)\n* [Contour](https:\/\/github.com\/heptio\/contour) - Kubernetes ingress controller for Lyft's Envoy proxy\n* [F5 Big IP Controller](https:\/\/github.com\/F5Networks\/k8s-bigip-ctlr)\n* [Gimbal](https:\/\/github.com\/heptio\/gimbal) - Platform capable of routing traffic to multiple Kubernetes and OpenStack clusters\n* [Gloo - Envoy-based API gateway and ingress controller](https:\/\/github.com\/solo-io\/gloo)\n* [HAProxy Ingress](https:\/\/github.com\/jcmoraisjr\/haproxy-ingress)\n* [MetalLB](https:\/\/metallb.universe.tf\/) - load-balancer implementation for bare metal Kubernetes clusters, using standard routing protocols.\n* [NGINX Ingress Controller](https:\/\/github.com\/kubernetes\/ingress-nginx)\n* [Nginx Plus](http:\/\/www.nginx.com\/blog\/load-balancing-kubernetes-services-nginx-plus\/)\n* [Skipper](https:\/\/github.com\/zalando\/skipper) - HTTP router and reverse proxy for service composition, including use cases like Kubernetes Ingress\n* [Traefik](http:\/\/traefik.io\/)\n* [Voyager - Secure HAProxy based Ingress Controller](https:\/\/github.com\/appscode\/voyager)\n\n## Big Data\n\n* [Kube-Yarn](https:\/\/github.com\/Comcast\/kube-yarn)\n* [Spark](https:\/\/github.com\/kubernetes\/examples\/tree\/master\/staging\/spark)\n\n## Machine Learning\n\n* [TensorFlow k8s](https:\/\/github.com\/tensorflow\/k8s)\n* [mxnet-operator](https:\/\/github.com\/deepinsight\/mxnet-operator) - Tools for ML\/MXNet on Kubernetes.\n* [kubeflow](https:\/\/github.com\/google\/kubeflow) - Machine Learning Toolkit for Kubernetes.\n* [seldon-core](https:\/\/github.com\/SeldonIO\/seldon-core) - Open source framework for deploying machine learning models on Kubernetes\n* [FfDL](https:\/\/github.com\/IBM\/FfDL) - Deep Learning Platform offering TensorFlow, Caffe, PyTorch etc. as a Service on Kubernetes\n* [Polyaxon](https:\/\/github.com\/polyaxon\/polyaxon) - An open source platform for reproducible machine learning and deep learning on kubernetes\n* [MLT](https:\/\/github.com\/IntelAI\/mlt) - Machine Learning Container Templates: easy to use container and kubernetes object templates.\n\n## Service Discovery\n\n* [Consul](http:\/\/consul.io)\n  * [Kelsey Hightower Consul](https:\/\/github.com\/kelseyhightower\/consul-on-kubernetes)\n  * [Bridge between Kubernetes and Consul](https:\/\/github.com\/Beldur\/kube2consul)\n\n## Operating System\n\n* [CoreOS](http:\/\/coreos.com)\n* [Kurma](https:\/\/github.com\/apcera\/kurma)\n* [GCI](https:\/\/cloud.google.com\/container-optimized-os\/docs\/)\n* [LinuxKit](https:\/\/github.com\/linuxkit\/kubernetes)\n\n## YAML\/JSON Config\n\n* [Kube.libsonnet](https:\/\/github.com\/heptio\/kube.libsonnet)\n* [kompose](https:\/\/github.com\/kubernetes\/kompose)\n* [kubeval](https:\/\/github.com\/garethr\/kubeval)\n* [kubegen](https:\/\/github.com\/errordeveloper\/kubegen)\n\n## Tuning\n\n* [Ktune](https:\/\/github.com\/skippbox\/ktune)\n\n## Backup and Disaster Recovery\n\n* [Ark](https:\/\/github.com\/heptio\/ark) - Utility for managing backup and restore of Kubernetes clusters.\n* [burry.sh](https:\/\/github.com\/mhausenblas\/burry.sh) - Cloud Native backup and recovery for etcd, zookeeper and consul\n* [kube-backup](https:\/\/github.com\/pieterlange\/kube-backup) - Sync kubernetes state to git.\n\nRaspberry Pi\n=======================================================================\n\n*Some of the awesome findings and experiments on using Kubernetes with Raspberry Pi.*\n* Check out [Kubecloud](http:\/\/kubecloud.io)\n* [Setting up a Kubernetes on ARM cluster](http:\/\/kubecloud.io\/kubernetes-on-arm-cluster\/)\n* [Setup Kubernetes on a Raspberry Pi Cluster easily the official way!](https:\/\/blog.hypriot.com\/post\/setup-kubernetes-raspberry-pi-cluster\/) by [Mathias Renner and Lucas Käldström](https:\/\/blog.hypriot.com\/crew\/)\n* [How to Build a Kubernetes Cluster with ARM Raspberry Pi then run .NET Core on OpenFaas](https:\/\/www.hanselman.com\/blog\/HowToBuildAKubernetesClusterWithARMRaspberryPiThenRunNETCoreOnOpenFaas.aspx) by [Scott Hanselman](https:\/\/twitter.com\/shanselman)\n\nBooks\n=======================================================================\n\n*A written or printed work consisting of pages glued or sewn together along one side and bound in covers that provide\nus with information*\n\n* [Kubernetes: Up and Running](http:\/\/shop.oreilly.com\/product\/0636920043874.do) by [Kelsey Hightower](https:\/\/twitter.com\/kelseyhightower)\n* [Docker and Kubernetes Under the Hood](http:\/\/item.jd.com\/11757034.html) (Chinese) by [Harry Zhang](https:\/\/twitter.com\/resouer), Jianbo Sun and ZJU SEL lab\n* [Kubernetes: Scheduling the Future at Cloud Scale](http:\/\/www.oreilly.com\/webops-perf\/free\/kubernetes.csp) by [Dave K. Rensin](http:\/\/www.linkedin.com\/in\/drensin)\n* [Kubernetes in Action](http:\/\/www.manning.com\/books\/kubernetes-in-action) by [Marko Lukša](https:\/\/twitter.com\/markoluksa)\n* [Kubernetes Cookbook - Second Edition](https:\/\/www.packtpub.com\/virtualization-and-cloud\/kubernetes-cookbook-second-edition) by Hideto Saito, Hui-Chuan Chloe Lee, Ke-Jou Carol Hsu\n* [Getting Started with Kubernetes](http:\/\/shop.oreilly.com\/product\/9781784394035.do) by Jonathan Baier\n* [Kubernetes Handbook](https:\/\/github.com\/feiskyer\/kubernetes-handbook) (OpenSource Book in Chinese) by [Pengfei Ni](https:\/\/github.com\/feiskyer)\n* [Mastering Kubernetes](https:\/\/www.amazon.com\/Mastering-Kubernetes-Gigi-Sayfan\/dp\/1786461005) by [Gigi Sayfan](https:\/\/github.com\/the-gigi)\n* [OpenShift in Action](http:\/\/www.manning.com\/books\/openshift-in-action) by [Jamie Duncan](https:\/\/twitter.com\/rh_jduncan) & [John Osborne](https:\/\/www.linkedin.com\/in\/johnfosborneiii\/)\n* [The DevOps 2.3 Toolkit: Kubernetes](https:\/\/leanpub.com\/the-devops-2-3-toolkit) by [Viktor Farcic](https:\/\/twitter.com\/vfarcic)\n* [Kubernetes Handbook](https:\/\/github.com\/rootsongjc\/kubernetes-handbook) (OpenSource Book in Chinese) by [Jimmy Song](https:\/\/github.com\/rootsongjc)\n* [DevOps with Kubernetes](https:\/\/www.packtpub.com\/virtualization-and-cloud\/devops-kubernetes) by Hideto Saito, Hui-Chuan Chloe Lee, Cheng-Yang Wu\n* [Golden Guide to Kubernetes Application Development](https:\/\/matthewpalmer.net\/kubernetes-app-developer) by Matthew Palmer\n* [Docker in Action, Second Edition](https:\/\/www.manning.com\/books\/docker-in-action-second-edition) by Jeff Nickoloff and Stephen Kuenzli\n\nSlide Presentations\n=======================================================================\n\n*A slide is a single page of a presentation created with software such as PowerPoint or OpenOffice Impress.*\n\n* [Architecture Overview](http:\/\/www.slideshare.net\/enakai\/architecture-overview-kubernetes-with-red-hat-enterprise-linux-71) by [enakai00](https:\/\/twitter.com\/enakai00\/)\n* [Package your Java EE Application using Docker and Kubernetes](http:\/\/www.slideshare.net\/arungupta1\/package-your-java-ee-application-using-docker-and-kubernetes) by [Arun Gupta](https:\/\/twitter.com\/arungupta)\n* [Scaling Jenkins with Docker and Kubernetes](http:\/\/www.slideshare.net\/carlossg\/scaling-jenkins-with-docker-and-kubernetes) by [Carlos Sanchez](https:\/\/www.twitter.com\/csanchez)\n* [An Introduction to Kubernetes](http:\/\/www.slideshare.net\/imesh\/an-introduction-to-kubernetes) by [Imesh Gunaratne](https:\/\/www.linkedin.com\/in\/imesh)\n* [Musings on Mesos: Docker, Kubernetes, and Beyond.](http:\/\/www.slideshare.net\/timothysc\/apache-coneu) by [Timothy St. Clair](http:\/\/timothysc.github.io\/)\n* [Cluster management with Kubernetes](http:\/\/www.slideshare.net\/SatnamSingh67\/2015-0605-cluster-management-with-kubernetes) by Satnam Singh\n* [A brief study on Kubernetes and its components](http:\/\/www.slideshare.net\/ramitsurana\/a-brief-study-on-kubernetes-and-its-components) by [Ramit Surana](https:\/\/www.twitter.com\/ramitsurana)\n* [Moving to Kubernetes - Tales from SoundCloud](http:\/\/www.slideshare.net\/dagrobie\/moving-to-kubernetes-tales-from-soundcloud) by [Tobias Schmidt](https:\/\/twitter.com\/dagrobie)\n* [Kubernetes Scaling SIG (K8Scale)](http:\/\/www.slideshare.net\/kubecon\/kubernetes-scaling-sig-k8scale) by [Bob Wise](https:\/\/twitter.com\/countspongebob)\n* [Zero downtime-java-deployments-with-docker-and-kubernetes](http:\/\/www.slideshare.net\/ArjanSchaaf\/zero-downtimejavadeploymentswithdockerandkubernetes) by [Arjan Schaaf](https:\/\/www.linkedin.com\/in\/arjanschaaf)\n* [Kubernetes and CoreOS @ Athens Docker meetup](http:\/\/www.slideshare.net\/mistio\/kubernetes-and-coreos-athens-docker-meetup) by [Mist.io](https:\/\/twitter.com\/mist_io)\n* [Achieving CI\/CD with Kubernetes](http:\/\/www.slideshare.net\/ramitsurana\/achieving-cicd-with-kubernetes) by [Ramit Surana](https:\/\/twitter.com\/ramitsurana)\n* [The Top 5 Metrics to Monitor in Kubernetes](http:\/\/www.slideshare.net\/Sysdig\/the-top-5-kubernetes-metrics-to-monitor)\n\n\nVideos\n=======================================================================\n\n*A recording of moving visual images made digitally or on videotape.*\n\n\n### Main Account\n\n* [Google Developers](https:\/\/www.youtube.com\/channel\/UC_x5XG1OV2P6uZZ5FSM9Ttw)\n* [Kubernetes](https:\/\/www.youtube.com\/channel\/UCZ2bu0qutTOM0tHYa_jkIwg)\n\n\n### Other Useful Videos\n\n* [Google I\/O 2014 - Containerizing the Cloud with Docker on Google Cloud Platform](https:\/\/www.youtube.com\/watch?v=tsk0pWf4ipw) by [Google Developers](https:\/\/www.youtube.com\/channel\/UC_x5XG1OV2P6uZZ5FSM9Ttw)\n* [Container Orchestration using CoreOS and Kubernetes](https:\/\/www.youtube.com\/watch?v=tA8XNVPZM2w) by [Kelsey Hightower](https:\/\/twitter.com\/kelseyhightower)\n* [A Technical Overview of Kubernetes](https:\/\/www.youtube.com\/watch?v=WwBdNXt6wO4) by [Bredan Burns](https:\/\/twitter.com\/brendandburns)\n* [Docker Containers and Kubernetes with Brian Dorsey](https:\/\/www.youtube.com\/watch?v=Fcb4aoSAZ98) by [Brian Dorsey](https:\/\/twitter.com\/briandorsey)\n* [Alpaca Kubernetes on AWS](https:\/\/www.youtube.com\/watch?v=jLk1pkc7kv4) by [Adrien Lemaire](https:\/\/twitter.com\/fandekasp)\n* [Arun Gupta: Package your Java applications using Docker and Kubernetes](https:\/\/www.youtube.com\/watch?v=R2nj1vRjLwE) by [Arun Gupta](https:\/\/twitter.com\/arungupta)\n* [\"Managing Containers at Scale with CoreOS and Kubernetes\" by Kelsey Hightower](https:\/\/www.youtube.com\/watch?v=pozC9rBvAIs) by [Kelsey Hightower](https:\/\/twitter.com\/kelseyhightower)\n* [Kubernetes: The Journey So Far - Greg DeMichillie](https:\/\/youtu.be\/6a2Nirr8cI0) by [Greg DeMichillie](https:\/\/twitter.com\/gregde)\n* [DevNation 2015 - Paul Bakker - Kubernetes: Beyond the basics](https:\/\/youtu.be\/MuazGHiiGmA) by [Paul Bakker](https:\/\/twitter.com\/pbakker)\n* [Kubernetes-Defined Monitoring](https:\/\/www.youtube.com\/watch?v=ncSn3_9bfIQ)\n* [Testing Distributed Software on Kubernetes with PowerfulSeal at Kubecon 2017 Austin](https:\/\/youtu.be\/00BMn0UjsG4) by [Mikolaj Pawlikowski](https:\/\/twitter.com\/mikopawlikowski)\n\n\nInteresting Twitter Accounts\n=======================================================================\n\n*Twitter is quick, it’s easy to communicate on, and is a very valuable social channel for a brand or business if you use it to its full potential, By following these news aggregators, rolling news channels, and companies, you can get the inside scoop of a story long before it hits the mainstream news outlets.*\n\n\n* [Kubernetes](https:\/\/twitter.com\/kubernetesio)\n* [Google Cloud Platform](https:\/\/twitter.com\/googlecloud)\n* [Kube Con](https:\/\/twitter.com\/kubeconio)\n* [Kismatic](https:\/\/twitter.com\/kismatic)\n* [Engine Yard](https:\/\/twitter.com\/engineyard)\n* [Apcera](https:\/\/twitter.com\/Apcera)\n* [CoreOS](https:\/\/twitter.com\/coreoslinux)\n* [DevOps Summit](https:\/\/twitter.com\/DevOpsSummit)\n* [KubeWeekly](https:\/\/twitter.com\/kubeweekly)\n* [KubeFacts](https:\/\/twitter.com\/kubefacts)\n* [Skippbox](https:\/\/twitter.com\/skippbox) - Acquired by [Bitnami](https:\/\/bitnami.com\/news\/press-releases\/bitnami-acquires-skippbox)\n* [Sysdig](https:\/\/twitter.com\/sysdig)\n\n\nAmazing People\n=======================================================================\n\n* [Ahmet Alp Balkan](https:\/\/twitter.com\/ahmetb),  Software Engineer at Google & Google Kubernetes Engine\n* [Aparna Sinha](https:\/\/twitter.com\/apbhatnagar), Group Product Manager - Kubernetes at Google\n* [Arun Gupta](https:\/\/twitter.com\/arungupta), Principal Open Source Technologist at Amazon Web Services\n* [Brandon Philips](https:\/\/twitter.com\/BrandonPhilips), CTO at CoreOS\n* [Brendan Burns](https:\/\/twitter.com\/brendandburns), Partner Architect at Microsoft\n* [Brian Grant](https:\/\/github.com\/bgrant0607), Principal Engineer at Google, Lead Architect of Kubernetes\n* [Carlos Sanchez](https:\/\/www.twitter.com\/csanchez), Senior Software Engineer, CloudBees\n* [Chris Aniszczyk](https:\/\/www.twitter.com\/cra), Chief Operating Officer at Cloud Native Computing Foundation\n* [Eric Tune](https:\/\/twitter.com\/eric_tune), Senior Staff Engineer at Google\n* [Ihor Dvoretskyi](https:\/\/twitter.com\/idvoretskyi), Developer Advocate at Cloud Native Computing Foundation\n* [Jessie Frazzelle](https:\/\/github.com\/jessfraz), Cloud Developer Advocate at Microsoft\n* [Joe Beda](https:\/\/twitter.com\/jbeda), Founder and CTO at Heptio\n* [Joseph Jacks](https:\/\/twitter.com\/asynchio), Entrepreneur In Residence at Quantum Corporation\n* [Kelsey Hightower](https:\/\/twitter.com\/kelseyhightower), Staff Developer Advocate at Google\n* [Kris Nova](https:\/\/github.com\/kris-nova), Engineer at Heptio, Creator of Kubicorn\n* [Michelle Noorali](https:\/\/www.twitter.com\/michellenoorali), Software Engineer at Microsoft\n* [Paris Pittman](https:\/\/www.twitter.com\/ParisInBmore), Developer Relations Manager - Kubernetes at Google\n* [Patrick Reilly](https:\/\/twitter.com\/preillyme), Office of the CTO at Cisco, Cisco board of member for CNCF\n* [Tim Hockin](https:\/\/twitter.com\/thockin), Senior Staff SW Engineer \/ Engineering Manager at Google\n\nMeetup Groups\n=======================================================================\n\n*An awesome way to connect with kubernauts around the globe*\n\n* [Amsterdam](https:\/\/www.meetup.com\/Amsterdam-Kubernetes-Meetup\/)\n* [Amsterdam #2](https:\/\/www.meetup.com\/Kubernetes-Addicts-Support-Group)\n* [Atlanta](https:\/\/www.meetup.com\/Kubernetes-Atlanta-Meetup\/)\n* [Bangalore](https:\/\/www.meetup.com\/Bangalore-Kubernetes-Meetup)\n* [Berlin](https:\/\/twitter.com\/kubernetesber)\n* [Boston](https:\/\/www.meetup.com\/Boston-Kubernetes-Meetup)\n* [Hamburg](https:\/\/www.meetup.com\/Hamburg-Kubernetes-Meetup\/)\n* [Hong Kong](https:\/\/www.meetup.com\/Kubernetes-Hong-Kong\/)\n* [London](https:\/\/www.meetup.com\/Kubernetes-London\/)\n* [Munich](https:\/\/www.meetup.com\/Munchen-Kubernetes-Meetup\/)\n* [New York](https:\/\/twitter.com\/kubernetesnyc)\n* [Paris](https:\/\/twitter.com\/kubernetesparis)\n* [Pittsburgh](https:\/\/www.meetup.com\/Pittsburgh-Kubernetes-Meetup)\n* [Pune](https:\/\/www.meetup.com\/Kubernetes-Pune\/)\n* [San Francisco](https:\/\/twitter.com\/kubernetesSF)\n* [Seattle](https:\/\/www.meetup.com\/Seattle-Kubernetes-Meetup\/)\n* [Worldwide](https:\/\/www.meetup.com\/kubernauts\/)\n\n\nConnecting with Kubernetes\n=======================================================================\n\n* [Blog](http:\/\/blog.kubernetes.io\/)\n* [Freenode](http:\/\/webchat.freenode.net\/?channels=google-containers)\n* [Twitter](https:\/\/twitter.com\/kubernetesio)\n* [Google +](https:\/\/plus.google.com\/u\/0\/b\/116512812300813784482\/116512812300813784482)\n* [Stackoverflow](http:\/\/stackoverflow.com\/questions\/tagged\/kubernetes)\n* [Slack](http:\/\/slack.k8s.io\/)\n* [Mailing List (user discussion and Q&A)](https:\/\/groups.google.com\/forum\/#!forum\/kubernetes-users)\n* [Mailing List (developer\/contributor discussion)](https:\/\/groups.google.com\/forum\/#!forum\/kubernetes-dev)\n* [Reddit](https:\/\/www.reddit.com\/r\/kubernetes\/)\n* [Community](https:\/\/github.com\/kubernetes\/community)\n* [Community Q&A – The Office Hours](https:\/\/github.com\/kubernetes\/community\/blob\/master\/events\/office-hours.md)\n\nConferences\n=======================================================================\n\n*Some must to go and attend conferences on kubernetes*\n\n* [Kubecon](http:\/\/events.linuxfoundation.org\/events\/kubecon)\n* [Container Camp](http:\/\/container.camp\/)\n* [GCP Next](http:\/\/cloudnext.withgoogle.com\/)\n* [Docker Con](http:\/\/dockercon.com)\n* [Devoxx](http:\/\/devoxx.com)\n* [ContainerDays](https:\/\/containerdays.io\/)\n\n\nContributing\n=======================================================================\n\nContributions are most welcome!\n\nThis list is just getting started, please contribute to make it super awesome.\n\nCheck out the [Contributing Guidelines](https:\/\/github.com\/ramitsurana\/awesome-kubernetes\/blob\/master\/guidelines\/CONTRIBUTING.md).\n\n\nLicense\n=======================================================================\n\n<a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-nc\/4.0\/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https:\/\/i.creativecommons.org\/l\/by-nc\/4.0\/88x31.png\" \/><\/a><br \/><span xmlns:dct=\"http:\/\/purl.org\/dc\/terms\/\" href=\"http:\/\/purl.org\/dc\/dcmitype\/InteractiveResource\" property=\"dct:title\" rel=\"dct:type\">awesome-kubernetes<\/span> by <a xmlns:cc=\"http:\/\/creativecommons.org\" href=\"http:\/\/www.linkedin.com\/in\/ramitsurana\" property=\"cc:attributionName\" rel=\"cc:attributionURL\">Ramit Surana<\/a> is licensed under a <a rel=\"license\" href=\"http:\/\/creativecommons.org\/licenses\/by-nc\/4.0\/\">Creative Commons Attribution-NonCommercial 4.0 International License<\/a>.",
          "Date Modified" : "2018-09-27 18:05:37 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:04:58 -0600"
        }
      ],
      "Tags" : [
        "awesome",
        "docs",
        "kubernetes"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:06:13 -0600",
      "Date Modified" : "2018-09-27 18:09:46 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-prometheus",
      "Fragments" : [
        {
          "Content" : "# Awesome Prometheus  [![Awesome](https:\/\/cdn.rawgit.com\/sindresorhus\/awesome\/d7305f38d29fed78fa85652e3a63e154dd8e8829\/media\/badge.svg)](https:\/\/github.com\/sindresorhus\/awesome)\n\n> A curated list of awesome Prometheus resources, projects and tools.\n\n[![Prometheus](media\/prometheus.png)](https:\/\/prometheus.io\/)\n\nPrometheus is an open-source systems monitoring and alerting toolkit.\n\n## Contents\n\n- [Official resources](#official-resources)\n- [Tutorials](#tutorials)\n- [Books](#books)\n- [Videos](#videos)\n- [Podcasts and interviews](#podcasts-and-interviews)\n- [Presentations](#presentations)\n- [Blog posts and opinions](#blog-posts-and-opinions)\n- [Dashboards](#dashboards)\n- [Exporters](#exporters)\n- [Uncategorized](#uncategorized)\n\n## Official resources\n\n- [Website](https:\/\/prometheus.io\/) - Official Prometheus project website.\n- [GitHub repository](https:\/\/github.com\/prometheus\/prometheus) - Prometheus' source code, issues discussion and collaboration.\n- [Documentation](https:\/\/prometheus.io\/docs\/introduction\/overview\/) - Official Prometheus documentation.\n- [Blog](https:\/\/prometheus.io\/blog\/) - Official Prometheus blog.\n\n## Tutorials\n\n- [How To Install Prometheus using Docker on CentOS 7](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-install-prometheus-using-docker-on-centos-7) - Walkthough on how to install Prometheus on CentOS 7.\n- [How to Use Prometheus to Monitor Your CentOS 7 Server](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-use-prometheus-to-monitor-your-centos-7-server) - Walkthough on how to monitor a CentOS 7 server using Prometheus.\n- [How To Install Prometheus using Docker on Ubuntu 14.04](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-install-prometheus-using-docker-on-ubuntu-14-04) - Walkthough on how to install Prometheus on Ubuntu 14.04.\n- [How To Use Prometheus to Monitor Your Ubuntu 14.04 Server](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-use-prometheus-to-monitor-your-ubuntu-14-04-server) - Walkthough on how to monitor a Ubuntu 14.04 server using Prometheus.\n- [How To Query Prometheus on Ubuntu 14.04 Part 1](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-query-prometheus-on-ubuntu-14-04-part-1) - Part 1 of 2 in the series _How To Query Prometheus on Ubuntu 14.04_.\n- [How To Query Prometheus on Ubuntu 14.04 Part 2](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-query-prometheus-on-ubuntu-14-04-part-2) - Part 2 in the series _How To Query Prometheus on Ubuntu 14.04_.\n- [How To Add a Prometheus Dashboard to Grafana](https:\/\/www.digitalocean.com\/community\/tutorials\/how-to-add-a-prometheus-dashboard-to-grafana) - Walkthrough on how to add a Prometheus dashboard to Grafana.\n- [Instructions and example code for a Prometheus workshop](https:\/\/github.com\/juliusv\/prometheus_workshop) - Instructions and example code for a Prometheus workshop by Julius Volz.\n- [Checking if SSH is responding with Prometheus](https:\/\/www.robustperception.io\/checking-if-ssh-is-responding-with-prometheus\/) - Walkthrough on how to use the Blackbox Exporter to check if SSH is responding by Brian Brazil.\n- [Monitor your GitHub Repos with Docker and Prometheus](https:\/\/www.brianchristner.io\/monitor-your-github-repos-with-docker\/) - Monitor your GitHub Repos with Docker and Prometheus.\n- [Docker daemon metrics in Prometheus](https:\/\/medium.com\/lucjuggery\/docker-daemon-metrics-in-prometheus-7c359c7ff550) - Docker daemon metrics in Prometheus by Luc Juggery.\n- [Prometheus Monitoring Tutorial (10 minutes)](https:\/\/pagertree.com\/2017\/12\/01\/prometheus-tutorial\/) - Simple tutorial to create a Prometheus monitoring stack with Grafana, AlertManager, and PagerTree by Austin Miller.\n\n## Books\n\n- [Monitoring with Prometheus](https:\/\/www.prometheusbook.com\/) - by James Turnbull.\n- [Prometheus: Up & Running](http:\/\/shop.oreilly.com\/product\/0636920147343.do) - by Brian Brazil.\n\n## Videos\n\n- [PromCon 2016](https:\/\/www.youtube.com\/playlist?list=PLoz-W_CUquUlCq-Q0hy53TolAhaED9vmU) - PromCon Berlin - August 25-26, 2016 - talk recordings from PromCon 2016 in Berlin.\n- [Prometheus Monitoring for Java Developers](https:\/\/www.youtube.com\/watch?v=jb9j_IYv4cU) - Devoxx Belgium - November 8, 2016 - Fabian Stäber.\n- [Prometheus: A Next Generation Monitoring System](https:\/\/www.youtube.com\/watch?v=cwRmXqXKGtk) - FOSDEM 2016 - January 31, 2016 - Brian Brazil.\n- [PromCon 2016: So You Want to Write an Exporter](https:\/\/www.youtube.com\/watch?v=KXq5ibSj2qA) - PromCon 2016 - So You Want to Write an Exporter - Brian Brazil\n- [PromCon 2017](https:\/\/www.youtube.com\/playlist\\?list\\=PLoz-W_CUquUlnvoEBbqChb7A0ZEZsWSXt) - PromCon Munich - August 17-18, 2017 at Google Munich - talk recordings.\n- [Infrastructure and application monitoring using Prometheus](https:\/\/www.youtube.com\/watch?v=5GYe_-qqP30) - Devoxx - May 17, 2017 at Devoxx UK - Marco Pas.\n- [Prometheus Monitoring for Java Web Applications w o Modifying Source Code](https:\/\/www.youtube.com\/watch?v=BjyI93c8ltA) - Devoxx Belgium - November 7, 2017 - Fabian Stäber.\n- [Prometheus: Design and Philosophy - why it is the way it is](https:\/\/www.youtube.com\/watch?v=QgJbxCWRZ1s) - Docker - October 14, 2016 - Julius Volz.\n\n## Podcasts and interviews\n\n- [Prometheus on FLOSS Weekly 357](https:\/\/twit.tv\/shows\/floss-weekly\/episodes\/357) -  Julius Volz on the FLOSS Weekly TWiT.tv show.\n- [Prometheus and Service Monitoring](https:\/\/changelog.com\/podcast\/168) - Julius Volz on the Changelog podcast.\n- [Prometheus Monitoring with Brian Brazil](https:\/\/softwareengineeringdaily.com\/2016\/08\/10\/prometheus-monitoring-with-brian-brazil\/) - Brian Brazil on the Software Engineering Daily podcast.\n\n## Presentations\n\n- [Prometheus Overview](http:\/\/www.slideshare.net\/brianbrazil\/prometheus-overview) - The Promethean ideal of monitoring by Brian Brazil.\n- [System Monitoring with Prometheus](http:\/\/www.slideshare.net\/brianbrazil\/devops-ireland-systems-monitoring-with-prometheus) - Brian Brazil at Devops Ireland Meetup, Dublin.\n- [OMG! Prometheus](https:\/\/www.dropbox.com\/s\/0l7kxhjqjbabtb0\/prometheus%20site-ops%20preso.pdf?dl=0) - Benjamin Staffin, Fitbit Site Operations, explains the case for Prometheus to his team.\n- [Deploying Prometheus](https:\/\/fosdem.org\/2017\/schedule\/event\/deploying_prometheus_at_wikimedia_foundation\/attachments\/slides\/1773\/export\/events\/attachments\/deploying_prometheus_at_wikimedia_foundation\/slides\/1773\/Prometheus_at_WMF_Fosdem_2017.pdf) - Filippo Giunchedi, WikiMedia Foundation at FOSDEM 2017.\n\n## Blog posts and opinions\n\n- [Prometheus: Monitoring at SoundCloud](https:\/\/developers.soundcloud.com\/blog\/prometheus-monitoring-at-soundcloud) - Overview of Prometheus and first hand experience from Soundcloud.\n- [Prometheus: A Next-Generation Monitoring System](http:\/\/www.boxever.com\/prometheus-a-next-generation-monitoring-system\/) - First hand experiences using Prometheus from Boxever Tech.\n- [Monitor Docker Containers with Prometheus](http:\/\/5pi.de\/2015\/01\/26\/monitor-docker-containers-with-prometheus\/) - Using Prometheus to monitor Docker containers.\n- [Prometheus and Kubernetes: A Perfect Match](https:\/\/www.weave.works\/prometheus-kubernetes-perfect-match\/) - Part 1 of 3 in the series _Prometheus and Kubernetes_.\n- [Prometheus and Kubernetes: Deploying](https:\/\/www.weave.works\/prometheus-kubernetes-deploying\/) - Part 2 of 3 in the series _Prometheus and Kubernetes_.\n- [Prometheus and Kubernetes: Monitoring Your Applications](https:\/\/www.weave.works\/prometheus-and-kubernetes-monitoring-your-applications\/) - Part 3 in the series _Prometheus and Kubernetes_.\n- [Robust Perception](https:\/\/www.robustperception.io\/tag\/prometheus\/) - Multiple blogposts about Prometheus by Brian Bazil.\n- [Initial experiences with the Prometheus monitoring system](https:\/\/medium.com\/@griggheo\/initial-experiences-with-the-prometheus-monitoring-system-167054ac439c#.q565suk4h) - Initial experiences with the Prometheus by Grig Gheorghiu.\n- [Solving Monitoring in the Cloud With Prometheus](https:\/\/www.linux.com\/blog\/event\/cloud-native-europe\/2017\/3\/solving-monitoring-cloud-prometheus) - Interview with Brian Bazil by Linux.com.\n- [Monitor your applications with Prometheus](http:\/\/blog.alexellis.io\/prometheus-monitoring\/) - Monitor your applications with Prometheus by Alex Ellis.\n- [Practical Services Monitoring with Prometheus and Docker](https:\/\/airtame.engineering\/practical-services-monitoring-with-prometheus-and-docker-30abd3cf9603) - Practical services monitoring with Prometheus and Docker by Simon KP.\n- [Prometheus Blog Series (Part 1): Metrics and Labels](https:\/\/pierrevincent.github.io\/2017\/12\/prometheus-blog-series-part-1-metrics-and-labels\/) - Part 1 in the series _Prometheus Blog Series_ by Pierre Vincent.\n- [Prometheus Blog Series (Part 2): Metric types](https:\/\/pierrevincent.github.io\/2017\/12\/prometheus-blog-series-part-2-metric-types\/) - Part 2 in the series _Prometheus Blog Series_ by Pierre Vincent.\n- [Prometheus Blog Series (Part 3): Exposing and collecting metrics](https:\/\/pierrevincent.github.io\/2017\/12\/prometheus-blog-series-part-3-exposing-and-collecting-metrics\/) - Part 3 in the series _Prometheus Blog Series_ by Pierre Vincent.\n- [Prometheus Blog Series (Part 4): Instrumenting code in Go and Java](https:\/\/pierrevincent.github.io\/2017\/12\/prometheus-blog-series-part-4-instrumenting-code-in-go-and-java\/) - Part 4 in the series _Prometheus Blog Series_ by Pierre Vincent.\n\n## Dashboards\n\n- [Grafana](https:\/\/prometheus.io\/docs\/visualization\/grafana\/) - Grafana is an open source metric analytics & visualization suite _tutorial by Prometheus_.\n- [Prometheus Monitoring with Grafana](http:\/\/logz.io\/blog\/prometheus-monitoring\/) - Prometheus Monitoring with Grafana _tutorial by logz.io_.\n\n## Exporters\n\n- [Blackbox exporter](https:\/\/github.com\/prometheus\/blackbox_exporter) - The Blackbox exporter allows blackbox probing of endpoints over HTTP, HTTPS, DNS, TCP and ICMP **(official exporter)**.\n- [HAProxy exporter](https:\/\/github.com\/prometheus\/haproxy_exporter) - The HAProxy exporter periodically scrapes HAProxy stats **(official exporter)**.\n- [Memcached exporter](https:\/\/github.com\/prometheus\/memcached_exporter) - The Memcached exporter periodically scrapes Memcached stats **(official exporter)**.\n- [MySQL Server exporter](https:\/\/github.com\/prometheus\/mysqld_exporter) - The MySQL server exporter periodically scrapes MySQL stats **(official exporter)**.\n- [Node exporter](https:\/\/github.com\/prometheus\/node_exporter) - The Node exporter periodically scrapes system stats **(official exporter)**.\n- [Redis exporter](https:\/\/github.com\/oliver006\/redis_exporter) - The Redis exporter periodically scrapes Redis server stats.\n- [Elasticsearch Exporter](https:\/\/github.com\/justwatchcom\/elasticsearch_exporter) - The ElasticSearch exporter periodically scrapes ElasticSearch server stats.\n\n## Proxies\n\n- [Multi-prometheus proxy](https:\/\/github.com\/matt-deboer\/mpp) - forwards incoming requests to one of a set of multiple prometheus instances deployed as HA duplicates of each other using a selector strategy.\n\n## Uncategorized\n\n- [Prometheus Monitoring subreddit](https:\/\/www.reddit.com\/r\/PrometheusMonitoring\/) - Subreddit collecting all Prometheus-related resources on the internet.\n- [PromCon](https:\/\/promcon.io\/) - The Prometheus conference.\n- [Prometheus demo site](http:\/\/demo.cloudalchemy.org:9090) - Prometheus site managed with ansible running every day using playbook from [cloudalchemy repository](https:\/\/github.com\/cloudalchemy\/demo-site).\n\n## License\n\n[![CC0](https:\/\/camo.githubusercontent.com\/60561947585c982aee67ed3e3b25388184cc0aa3\/687474703a2f2f6d6972726f72732e6372656174697665636f6d6d6f6e732e6f72672f70726573736b69742f627574746f6e732f38387833312f7376672f63632d7a65726f2e737667)](http:\/\/creativecommons.org\/publicdomain\/zero\/1.0\/)\n\nTo the extent possible under law, [Roald](https:\/\/github.com\/roaldnefs\/) has waived all copyright and related or neighboring rights to this work.",
          "Date Modified" : "2018-09-27 18:06:25 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:06:13 -0600"
        }
      ],
      "Tags" : [
        "awesome",
        "prometheus",
        "kubernetes",
        "docs"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:06:26 -0600",
      "Date Modified" : "2018-09-27 18:09:30 -0600",
      "Folder" : "markdown",
      "Title" : "awesome-markdown",
      "Fragments" : [
        {
          "Content" : "Awesome Series @ Write Kit\n\n[Markdown (Syntax & Extensions, Documentation & Cheat Sheets, Libraries, ...)](https:\/\/github.com\/writekit\/awesome-markdown) • \n[Markdown Editors & (Pre)viewers](https:\/\/github.com\/writekit\/awesome-markdown-editors)  •\n[Books (Services, Hand-Written, Auto-Built w\/ Open Data, ...)](https:\/\/github.com\/writekit\/awesome-books)\n\n\n# Awesome Markdown\n\nA collection of awesome markdown goodies (libraries, services, editors, tools, cheatsheets, etc.)\n\nNote: :octocat: stands for the GitHub page and :gem: stands for the RubyGems page.\n\n---\n\n[ANNOUNCEMENT] Looking for the latest news, tools, tips & tricks, and more\nabout markdown and friends?\nFollow along the Manuscripts News ([@manuscriptsnews](https:\/\/twitter.com\/manuscriptsnews)) channel on twitter for updates.\n\n---\n\n\n#### _Contributions welcome. Anything missing? Send in a pull request. Thanks._\n\n\n## Markdown\n\n_email-style writing for the web by John Gruber and Aaron Swartz_ \n\n- **Markdown** (web: [daringfireball.net\/projects\/markdown](http:\/\/daringfireball.net\/projects\/markdown)) - original Markdown syntax write-up and processor in Perl by John Gruber; no longer maintained (last update in December 2004)\n\nHistory \/ Genesis\n\n- [Introducing Markdown](http:\/\/daringfireball.net\/2004\/03\/introducing_markdown) by John Gruber - March 15, 2004\n\n  >   I've written a text-to-HTML formatting tool called Markdown, which is now available for download.\n  > Markdown allows web writers to compose text using a simple, readable, plain text formatting syntax;\n  > Markdown takes care of translating it to valid XHTML (or, if you prefer, HTML).\n\n- [Dive into Markdown](http:\/\/daringfireball.net\/2004\/03\/dive_into_markdown) by John Gruber - March 19, 2004\n\n  >  You don't need to \"preview\" an email before you send it -- you write it, you read it, you edit it, right there.\n  >\n  >  In fact, I love writing email. Email is my favorite writing medium. I've sent over 16,000 emails in the last five years. \n  > The conventions of plain text email allow me to express myself clearly and precisely, without ever getting in my way.\n  >\n  > Thus, Markdown. Email-style writing for the web.\n\n- [Markdown](http:\/\/www.aaronsw.com\/weblog\/001189) by Aaron Swartz - March 22, 2004\n\n  >    For months I've been working with John Gruber on a new project. The idea was to make writing simple web pages,\n  > and especially weblog entries, as easy as writing an email, by allowing you to use much the same syntax and converting it \n  > automatically into HTML.\n  >\n  >   Together we pored over the syntax details from top to bottom, trying to develop the perfect format, \n  > and I think we've got something pretty darn great. We've tested it extensively: on our blogs, in my comments form, in our emails.\n\n\n<!--\n- [**Talk**](https:\/\/pairlist6.pair.net\/mailman\/listinfo\/markdown-discuss) - markdown-discuss mailing list\n    no longer in use\n  -->\n\nDocumentation\n\n- [**Markdown @ Wikipedia**](http:\/\/en.wikipedia.org\/wiki\/Markdown)\n\n\n## Markdown Syntax Extensions\n\n- [SmartyPants](http:\/\/daringfireball.net\/projects\/smartypants) -  convert (c) into ?, \"\" into ?, etc. \n- [Emojis](http:\/\/www.emoji-cheat-sheet.com) - [:octocat:](https:\/\/github.com\/arvida\/emoji-cheat-sheet.com)\n- [CriticMarkup](http:\/\/criticmarkup.com) - [:octocat:](https:\/\/github.com\/CriticMarkup)\n- [GitHub Flavored Markup (GFM)](https:\/\/help.github.com\/articles\/github-flavored-markdown) - @mention, to do lists w\/ [ ] and [x], etc.\n\n### MultiMarkdown (MMD)\n\n- [MultiMarkdown (MMD)](http:\/\/fletcherpenney.net\/multimarkdown) - Markdown extensions by Fletcher Penney adding footnotes, tables, definition lists, document metadata (e.g. title, author, date, etc.) and more; first added to MultiMarkdown.pl\n    - [Cheatsheet](https:\/\/rawgit.com\/fletcher\/human-markdown-reference\/master\/index.html)  - syntax quick reference\n    - [Test Suite :octocat:](https:\/\/github.com\/fletcher\/MMD-Test-Suite)\n- [MultiMarkdown.pl :octocat:](https:\/\/github.com\/fletcher\/MultiMarkdown) - historic MultiMarkdown.pl code; converter script in Perl (last update in Jan 2011)\n\n### Markdown Extra\n\n- [Markdown Extra](https:\/\/michelf.ca\/projects\/php-markdown\/extra\/) - Markdown extensions by Michel Fortin; first added to PHP Markdown (Extra)\n- [Dingus](https:\/\/michelf.ca\/projects\/php-markdown\/dingus\/)  - try Markdown Extra in your browser\n\n### Markdown Extended (MDE)\n\n- [Markdown Extended (MDE) @ aboutmde.org](http:\/\/aboutmde.org)\n    - [Spec](http:\/\/manifest.aboutmde.org)\n    - [Cheatsheet](http:\/\/cheatsheet.aboutmde.org\/) - syntax quick reference; examples side-by-side\n    - [Dingus](http:\/\/dingus.aboutmde.org) - try Markdown Extended in your browser\n- [Code :octocat:](https:\/\/github.com\/piwi\/markdown-extended) - converter script in PHP\n\n\n## Manuscripts\n\n_Free book format for Markdown_\n\n**Manuscripts**\n(web: [`manuscripts.github.io`](http:\/\/manuscripts.github.io),\n github: [`manuscripts`](https:\/\/github.com\/manuscripts)) -\nadds book.yml for book (meta) info e.g. title, author, publisher, year etc.\nand contents.yml for table of contents and file strucutre\n\n- Manuscripts Book Starter Kit (github: [`manuscripts\/book-starter`](https:\/\/github.com\/manuscripts\/book-starter))\n\n\n\n## CommonMark\n\n_A strongly specified, highly compatible implementation of Markdown_\n\n**CommonMark**\n(web: [`commonmark.org`](http:\/\/commonmark.org))\n\n- Spec (web: [`spec.commonmark.org`](http:\/\/spec.commonmark.org)) - Edited by John MacFarlane \n- Dingus (web: [`spec.commonmark.org\/dingus`](http:\/\/spec.commonmark.org\/dingus)) - try CommonMark in your browser\n- Talk (web: [`talk.commonmark.org`](http:\/\/talk.commonmark.org))\n- Code (github: [`jgm\/CommonMark`](https:\/\/github.com\/jgm\/CommonMark)) - spec and reference code in JavaScript and C\n\n## GitHub Flavored Markdown (GFM)\n\n_CommonMark with GitHub Extensions_\n\n**GitHub Flavored Markdown (GFM)**\n\n- Spec (web: [`github.github.com\/gfm`](https:\/\/github.github.com\/gfm))\n- Code (github: [`github\/cmark`](https:\/\/github.com\/github\/cmark) - reference code in C (fork of cmark w\/ extensions)\n\nExtensions include:\n\nLeaf Blocks: Tables ++ \nContainer Blocks: Task list items ++\nInlines: Strikethrough; Autolinks; Disallowed Raw HTML\n\n\n## Vanilla Flavored Markdown (VFMD)\n\n_A variant of Markdown with an unambiguous specification of its syntax_ \n\n**Vanilla Flavored Markdown (VFMD)**\n(web: [`vfmd.org`](http:\/\/www.vfmd.org), github: [`vfmd`](https:\/\/github.com\/vfmd))\n\n- Spec (web: [vfmd.org\/vfmd-spec\/specification](http:\/\/www.vfmd.org\/vfmd-spec\/specification)) - Edited by Roopesh Chander\n- Code (github: [`vfmd\/vfmd-src`](https:\/\/github.com\/vfmd\/vfmd-src)) - reference code in C++\n\nDifferences include:\n\nIntra-word emphasis;\nSimplified reference link\/image syntax;\nLists and the 4-space rule;\nBetter automatic link detection;\nDouble blank lines as end of blocks;\nStarting number in lists; \nMisnested constructs; \nIncluding raw HTML;\nCharacter encoding\n\n\n\n## Markdown Documentation\n\n### Markdown Cheatsheets \/ Quick References\n\n- [Markdown Cheatsheet :octocat:](https:\/\/github.com\/adam-p\/markdown-here\/wiki\/Markdown-Cheatsheet)\n\n### Markdown Getting Started Guides \/ Tutorials\n\n- [Markdown Tutorial](http:\/\/markdowntutorial.com) - [:octocat:](https:\/\/github.com\/gjtorikian\/markdowntutorial.com)\n- [Mastering Markdown @ GitHub Guides](https:\/\/guides.github.com\/features\/mastering-markdown)\n- [Markdown Basics @ GitHub Help](https:\/\/help.github.com\/articles\/markdown-basics)\n- [Markdown Guide](https:\/\/www.markdownguide.org\/)\n\n\n\n## Markdown Building Blocks\n\n### Markdown Libraries & Tools\n\n**Pandoc**\n(web: [`pandoc.org`](http:\/\/pandoc.org),\n github: [github.com\/jgm\/pandoc](https:\/\/github.com\/jgm\/pandoc)) -\na universal document converter (in Haskell)\n\n\n**kramdown**\n(web: [`kramdown.gettalong.org`](http:\/\/kramdown.gettalong.org),\n github: [`gettalong\/kramdown`](https:\/\/github.com\/gettalong\/kramdown),\n gem: [`kramdown`](https:\/\/rubygems.org\/gems\/kramdown)) -\nmarkdown library & command line tool (in Ruby)\n\n\n**Markdown Extended (MDE)**\n(github: [`e-picas\/markdown-extended`](https:\/\/github.com\/e-picas\/markdown-extended)\n- transform plain text input (strings or files) in various output formats (in PHP)\n\n\n\n\n### Babelmark\n\n- [Babelmark 2]() - a tool for comparing the output of various implementations of Markdown syntax\n    - [Babelmark 2 F.A.Q.](http:\/\/johnmacfarlane.net\/babelmark2\/faq.html) - frequently asked questions (and answers) e.g. ... ??\n\n\n### Markdown Style Guides \/ Best Practices\n\nto be done\n\n### Markdown Lint \/ Style Rule Checker\n\n- [mdlint]() to be done\n\n\n\n### Markdown Web Components \/ Custom Elements\n\n- [`<x-markdown>`]() - to be done\n\n\n\n\n### Markdown to Website \/ Blog\n\n**Jekyll**\n(web: [`jekyllrb.com`](http:\/\/jekyllrb.com),\n github: [`jekyll\/jekyll` :octocat:](https:\/\/github.com\/jekyll\/jekyll),\n gem: [`jekyll` :gem:](https:\/\/rubygems.org\/gems\/jekyll)) -\ntransform your plain text into static websites and blogs (in Ruby)\n\n**Middleman**\n(web: [`middlemanapp.com`](https:\/\/middlemanapp.com),\n github: [`middleman\/middleman` :octocat:](https:\/\/github.com\/middleman\/middleman),\n gem: [`middleman` :gem:](https:\/\/rubygems.org\/gems\/middleman)) -\nmakes developing websites simple (in Ruby)\n\n**Slate** (github: [lord\/slate :octocat:](https:\/\/github.com\/lord\/slate)) - beautiful API documentation, based on **Middleman**\n\n**Shins** (github: [`Mermade\/shins` :octocat:](https:\/\/github.com\/Mermade\/shins), npm: [`shins`](https:\/\/www.npmjs.com\/package\/shins)) – beautiful API documentation, with node.js (port of **Slate**)\n\n\n### Markdown to Email\n\n**Markdown Here**\n(web: [`markdown-here.com`](http:\/\/markdown-here.com),\n github: [`adam-p\/markdown-here`](https:\/\/github.com\/adam-p\/markdown-here)) -\na browser extension for rendering email written in Markdown;\navailable for Chrome, Firefox, Safari, Thunderbird, and more;\nbesides email also works with Evernote, Google Groups, Blogger, and more\n\n\n\n### Markdown to Presentation \/ Slideshow\n\n**Slide Show (S9)**\n(web: [`slideshow-s9.github.io`](http:\/\/slideshow-s9.github.io),\n github: [`slideshow-s9\/slideshow`](https:\/\/github.com\/slideshow-s9),\n gem: [`slideshow`](https:\/\/rubygems.org\/gems\/slideshow)) -\na free web alternative to PowerPoint and Keynote in Ruby\n\n- Templates (github: [`slideshow-templates`](https:\/\/github.com\/slideshow-templates))\n\n**Markpress** (github: [`markpress`](https:\/\/github.com\/gamell\/markpress)) - A command line tool and node package to convert markdown files into self-contained [impressjs](https:\/\/github.com\/impress\/impress.js\/) html presentations. [Example](https:\/\/gamell.github.io\/markpress) \n\n**nodePPT** (github: [`nodePPT`](https:\/\/github.com\/ksky521\/nodePPT)) - A web presentation tool supporting markdown based on GFM.\n\n**Deckset** (website: [Deckset](http:\/\/www.decksetapp.com)) – A macOS desktop app that renders Markdown presentations in beautifully designed templates.\n\n### Markdown to Portable Document Format (PDF)\n\n- [markdown-pdf :octocat:](https:\/\/github.com\/alanshaw\/markdown-pdf), [(npm Package)](https:\/\/www.npmjs.com\/package\/markdown-pdf) -  converts Markdown files to PDFs\n\n\n### Markdown Styles \/ Documents \/ Pages\n\n**The Zen of Page Designs**\n(github: [`pagedesigns`](https:\/\/github.com\/pagedesigns))\n\n\n### Markdown to Books\n\n**The Zen of Book Designs**\n(github: [`bookdesigns`](https:\/\/github.com\/bookdesigns))\n\n\n\n**Hyper Book (H9)** [:octocat:](https:\/\/github.com\/hybook), [:gem:](https:\/\/rubygems.org\/gems\/hybook)\n\n- [Templates :octocat:](https:\/\/github.com\/book-templates)\n\n\n\n### Markdown to Table of Contents (TOC)\n\n**Generate a markdown table of contents (TOC) with [remarkable](https:\/\/github.com\/jonschlinkert\/remarkable)**\n(github: [`markdown-toc`](https:\/\/github.com\/jonschlinkert\/markdown-toc))\n\n\n\n\n## Convert to Markdown Tools\n\n### Microsoft Word to Markdown\n\n- [word-to-markdowm gem :octocat:](https:\/\/github.com\/benbalter\/word-to-markdown), [:gem:](https:\/\/rubygems.org\/gems\/word-to-markdown) - \"liberate\" content from the jail that is Microsoft Word documents; converts to plain-text Markdown\n\n### Hypertext Markup Language (HTML) to Markdown\n\nRuby\n\n- [reverse_markdown :octocat:](https:\/\/github.com\/xijo\/reverse_markdown), [:gem:](https:\/\/rubygems.org\/gems\/reverse_markdown) - map simple HTML back into markdown\n- [html2markdown :octocat:](https:\/\/github.com\/29decibel\/html2markdown), [:gem:](https:\/\/rubygems.org\/gems\/html2markdown) - simple and flexible HTML to markdown converter\n- [hypertextmarkdown :octocat:](https:\/\/github.com\/jcheatham\/hypertextmarkdown), [:gem:](https:\/\/rubygems.org\/gems\/hypertextmarkdown) - HTML to markdown converter\n- [html2md :octocat:](https:\/\/github.com\/pmorton\/html2md), [:gem:](https:\/\/rubygems.org\/gems\/html2md) - converts basic HTML to markdown \n- [unmarkdown :octocat:](https:\/\/github.com\/soffes\/unmarkdown), [:gem:](https:\/\/rubygems.org\/gems\/unmarkdown) - convert HTML to Markdown\n- [upmark :octocat:](https:\/\/github.com\/conversation\/upmark), [:gem:](https:\/\/rubygems.org\/gems\/upmark) - a HTML to Markdown converter\n- [remark :octocat:](https:\/\/github.com\/mislav\/remark) - HTML to Markdown converter in Ruby\n\n\nJavaScript \/ Node.js\n\n- [to-markdown :octocat:](https:\/\/github.com\/domchristie\/to-markdown), [(npm Package)](https:\/\/www.npmjs.com\/package\/to-markdown)  - a HTML to Markdown converter in JavaScript\n- [html2markdown :octocat:](https:\/\/github.com\/alexgorbatchev\/html2markdown),  [(npm Package)](https:\/\/www.npmjs.com\/package\/html2markdown) -  converting HTML to Markdown\n- [Markitdown](http:\/\/markitdown.medusis.com) - A client side web app that lets you paste formatted text from a webpage (e.g with links intact) and recieve markdown output.\n  - [Markitdown.medusis.com :octocat:](https:\/\/github.com\/bambax\/markitdown.medusis.com) - A client side web app for converting rich text to markdown\n\nMore\n\n- [heckyesmarkdown.com](http:\/\/heckyesmarkdown.com) - instantly convert a webpage to markdown; the service presents a simple interface that converts any reasonable web page into markdown (note: the service seems to use the Readability API to remove all the non-content cruft from the source page before proceeding with markdownification)\n\n### Source Code to Markdown\n\nGenerate API documentation from source code in Markdown, then host it on the web using one of the many [Markdown to Website](#markdown-to-website--blog) tools to host and serve it.\n\n- [widdershins :octocat:](https:\/\/github.com\/Mermade\/widdershins) - turn [OpenAPI\/Swagger](https:\/\/www.openapis.org) REST API documentation to Markdown\n- [Moxygen :octocat:](https:\/\/github.com\/sourcey\/moxygen) - [Doxygen](http:\/\/www.stack.nl\/~dimitri\/doxygen\/) (C++, but also supports other popular programming languages such as C, Objective-C, C#, PHP, Java, Python, IDL , Fortran, VHDL, Tcl, and to some extent D.) documentation to Markdown\n- [raml2html\/markdown-theme :octocat:](https:\/\/github.com\/raml2html\/markdown-theme) - turn [RAML](http:\/\/raml.org) REST API documentation to Markdown using raml2html\n- [jsdoc-to-markdown :octocat:](https:\/\/github.com\/jsdoc2md\/jsdoc-to-markdown) - JavaScript API documentation via JSDoc to Markdown\n- [mmarkdown :octocat:](https:\/\/github.com\/albinotonnina\/mmarkdown) - Interpret mmd fenced code blocks in a markdown file and generate a cooler version of it.\n\n### Technical Documentation to Markdown\n\n- [dita-ot-markdown](https:\/\/github.com\/jelovirt\/dita-ot-markdown) – converts DITA into Markdown, integrates with standard DITA OT tool chain \n\n## Book Services\n\n- [Softcover.io](https:\/\/www.softcover.io) - publish from the comfort of your command-line by Michael Hartl et al \n    - [Softcover :octocat:](https:\/\/github.com\/softcover\/softcover), [:gem:](https:\/\/rubygems.org\/gems\/softcover) - a command line tool for book generation, building, and publishing \n- [GitBook.com](https:\/\/www.gitbook.com)  - write and publish books with Markdown and Git by Samy Pessé et al\n    - [GitBook :octocat:](https:\/\/github.com\/GitbookIO\/gitbook) - a command line tool (and Node.js library) for building beautiful books using GitHub\/Git and Markdown (or AsciiDoc)\n    \n<!-- break -->\n\n- [Bitbooks.cc (discontinued; archived)](https:\/\/github.com\/bitbooks) - Bitbooks turns a repo full of markdown files into a handsome, hosted, online book - by Bryan Braun\n    - [Franklin :octocat:](https:\/\/github.com\/bryanbraun\/franklin) - a static-site framework, optimized for online books\n\n\n\n## Articles \n\n- [Why You Shouldn't Use Markdown for Documentation](http:\/\/ericholscher.com\/blog\/2016\/mar\/15\/dont-use-markdown-for-technical-docs) by Eric Holscher, March 2016\n- [Why isn't there a formal grammar for Markdown?](http:\/\/roopc.net\/posts\/2014\/markdown-cfg) by Roopesh Chander, September 2014\n\n\n## Meta\n\n**License**\n\nThe awesome list is dedicated to the public domain. Use it as you please with no restrictions whatsoever.\n\n**Questions? Comments?**\n\nSend them along to the markdown-discuss mailing list. Thanks!\n",
          "Date Modified" : "2018-09-27 18:07:04 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:06:26 -0600"
        }
      ],
      "Tags" : [
        "markdown",
        "awesome",
        "docs"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:08:32 -0600",
      "Date Modified" : "2018-09-27 18:09:06 -0600",
      "Folder" : "markdown",
      "Title" : "cheatsheets",
      "Fragments" : [
        {
          "Content" : "# Huge Collection of CheatSheet\n\n\nShare of my Huge Collection of Cheatsheet, ENJOY IT!\n\n\n\n\n\n![Alt text](https:\/\/i.imgur.com\/Vmtk5Fl.gif \"Huge CheatSheet Collection JonnyBanana\")\n\n\n\nComplete Photo Album Here: https:\/\/imgur.com\/a\/RWmds\n\n<\/br>\n\n![Alt text](https:\/\/i.imgur.com\/OoY1sKh.png \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/lidFJdK.jpg \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/W9jMtrN.jpg \"Huge CheatSheet Collection JonnyBanana\")\n\n\n![Alt text](https:\/\/i.imgur.com\/l2zImXf.png \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/MhLTOYw.png \"Huge CheatSheet Collection JonnyBanana\")\n\n\n![Alt text](https:\/\/i.imgur.com\/WOSO6Oz.jpg \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/r8VONBn.png \"Huge CheatSheet Collection JonnyBanana\")\n\n\n![Alt text](https:\/\/i.imgur.com\/n3j3GQE.jpg \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/xIrz9np.png \"Huge CheatSheet Collection JonnyBanana\")\n\n\n![Alt text](https:\/\/i.imgur.com\/ZKD8i6a.png \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/i.imgur.com\/RX1vBsY.png \"Huge CheatSheet Collection JonnyBanana\")\n\n![Alt text](https:\/\/raw.githubusercontent.com\/JonnyBanana\/Huge-Collection-of-CheatSheet\/master\/Easter%20egg's\/proxy.png \"Huge CheatSheet Collection JonnyBanana\")\n\n\n\n",
          "Date Modified" : "2018-09-27 18:08:57 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:08:32 -0600"
        }
      ],
      "Tags" : [
        "cheatsheet"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:48:03 -0600",
      "Date Modified" : "2018-09-27 18:59:10 -0600",
      "Folder" : "keyboard",
      "Title" : "snippetslab",
      "Fragments" : [
        {
          "Content" : "|   |                                      |                                        |   |   |   |   |\n|---|--------------------------------------|----------------------------------------|---|---|---|---|\n|   | Action                               | Shortcut                               |   |   |   |   |\n|   | Open Preferences                     | Command-Comma (,)                      |   |   |   |   |\n|   | Create a New Folder                  | Shift-Command-N                        |   |   |   |   |\n|   | Create a New Smart Group             | Control-Command-N                      |   |   |   |   |\n|   | Create a New Snippet                 | Command-N                              |   |   |   |   |\n|   | Create a New Snippet from Clipboard  | Option-Command-N                       |   |   |   |   |\n|   | Create a New Fragment                | Command-T                              |   |   |   |   |\n|   | Create a New Fragment from Clipboard | Option-Command-T                       |   |   |   |   |\n|   | Print Current Snippet                | Command-P                              |   |   |   |   |\n|   | Copy Selection with Styles           | Option-Command-C                       |   |   |   |   |\n|   | Copy Current Snippet                 | Shift-Command-C                        |   |   |   |   |\n|   | Copy Current Snippet with Styles     | Option-Shift-Command-C                 |   |   |   |   |\n|   | Find                                 | Command-F                              |   |   |   |   |\n|   | Toggle Sidebar                       | Shift-Command-L                        |   |   |   |   |\n|   | Show Folders Sidebar                 | Shift-Command-1                        |   |   |   |   |\n|   | Show Tags Sidebar                    | Shift-Command-2                        |   |   |   |   |\n|   | Toggle Markdown Preview              | Shift-Command-M                        |   |   |   |   |\n|   | Toggle Fullscreen                    | Control-Command-F                      |   |   |   |   |\n|   | Toggle Wrap Lines to Editor Width    | Shift-Command-W                        |   |   |   |   |\n|   | Shift Left                           | Command-Left Bracket ([)               |   |   |   |   |\n|   | Shift Right                          | Command-Right Bracket (])              |   |   |   |   |\n|   | Convert Indentation to Spaces        | Control-Command-S                      |   |   |   |   |\n|   | Convert Indentation to Tabs          | Control-Command-T                      |   |   |   |   |\n|   | Strip Trailing Whitespaces           | Control-Command-W                      |   |   |   |   |\n|   | Make Font Size Bigger                | Command-Plus (+)                       |   |   |   |   |\n|   | Make Font Size Smaller               | Command-Minus (-)                      |   |   |   |   |\n|   | Move Fragment Right                  | Shift-Option-Command-Right Bracket ([) |   |   |   |   |\n|   | Move Fragment Left                   | Shift-Option-Command-Left Bracket (])  |   |   |   |   |\n|   | Show Next Fragment                   | Shift-Command-Right Bracket ([)        |   |   |   |   |\n|   | Show Previous Fragment               | Shift-Command-Left Bracket (])         |   |   |   |   |",
          "Date Modified" : "2018-09-27 18:57:48 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:48:03 -0600"
        }
      ],
      "Tags" : [
        "snippets",
        "keyboard",
        "docs"
      ]
    },
    {
      "Date Created" : "2018-09-27 18:48:10 -0600",
      "Date Modified" : "2018-09-27 18:48:16 -0600",
      "Folder" : "keyboard",
      "Title" : "visual studio code",
      "Fragments" : [
        {
          "Content" : "",
          "Date Modified" : "2018-09-27 18:48:10 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 18:48:10 -0600"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2018-09-27 18:48:18 -0600",
      "Date Modified" : "2018-09-27 18:48:19 -0600",
      "Folder" : "keyboard",
      "Title" : "vim",
      "Fragments" : [
        {
          "Content" : "",
          "Date Modified" : "2018-09-27 18:48:18 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2018-09-27 18:48:18 -0600"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2018-09-27 18:51:10 -0600",
      "Date Modified" : "2018-09-27 18:52:52 -0600",
      "Folder" : "markdown",
      "Title" : "code flashcard",
      "Fragments" : [
        {
          "Content" : "---\n\n## Title\n\n<details><summary>show<\/summary>\n<p>\n\n```\n\n\n```\n\n<\/p>\n<\/details>\n",
          "Date Modified" : "2018-09-27 18:52:30 -0600",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Markdown",
          "Date Created" : "2018-09-27 18:51:10 -0600"
        }
      ],
      "Tags" : [
        "study",
        "markdown"
      ]
    }
  ]
}